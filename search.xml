<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ASCII art</title>
    <url>/hexo-blog/2024/10/28/post_acsii_graphics/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>ASCII art in one line: <a href="https://1lineart.kulaone.com/#/">https://1lineart.kulaone.com/#/</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>acsii</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hexo-blog/2024/09/20/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! </p>
<p>This is my  very first post.</p>
<p>Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Генеративный искусственный интеллект / Generative Artificial Intelligence</title>
    <url>/hexo-blog/2024/11/13/post_ai__base_gan/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>Генеративный ИИ (Generative AI) — это тип искусственного интеллекта, который создаёт новые данные на основе уже существующих, будь то текст, изображения, звук или другие типы контента. В отличие от традиционных моделей ИИ, которые просто классифицируют или анализируют данные, генеративные модели могут генерировать новые образцы, схожие с обучающим набором данных. Например, такие модели могут создавать реалистичные изображения, стилизовать текст, писать код и т.д.</em></p>
<p><strong>Особенности генеративного ИИ</strong></p>
<ul>
<li>Создание нового контента: <ul>
<li>Генеративные модели способны создавать уникальные образцы, которые не являются прямым копированием данных из обучающей выборки.</li>
</ul>
</li>
<li>Высокая адаптивность:<ul>
<li>Они могут адаптироваться к разным типам задач, таким как текстовая генерация, создание изображений, синтез речи, и даже проектирование молекул.</li>
</ul>
</li>
<li>Использование больших объемов данных:<ul>
<li>Для создания реалистичного и высококачественного контента модели требуют больших обучающих выборок, чтобы изучить закономерности и зависимости.</li>
</ul>
</li>
<li>Сложность в контроле результатов: <ul>
<li>Генеративные модели могут производить нежелательные результаты или даже давать вредные советы, поскольку сложно заранее контролировать все возможные выводы.</li>
</ul>
</li>
</ul>
<p><strong>Разновидности генеративного ИИ</strong></p>
<ul>
<li><p>Генеративные состязательные сети (Generative Adversarial Networks, GANs)</p>
<ul>
<li>GAN-сети состоят из двух нейросетей — генератора и дискриминатора, которые работают вместе. Генератор создаёт новые образцы данных, стремясь “обмануть” дискриминатор, который определяет, являются ли данные реальными или синтетическими. Этот подход используется для генерации реалистичных изображений, синтеза речи и других задач, связанных с созданием визуально или акустически правдоподобного контента.</li>
</ul>
</li>
<li><p>Автокодировщики и вариационные автокодировщики (Autoencoders, VAEs)</p>
<ul>
<li>Автокодировщики представляют собой нейронные сети, которые учатся кодировать данные в сжатое представление, а затем восстанавливать их обратно. </li>
<li>Вариационные автокодировщики (VAEs) делают это с добавлением вероятностной оценки, что позволяет генерировать более разнообразные результаты. VAEs используются для создания изображений, аудио и текста, а также для задач, где требуется контроль за параметрами выходных данных.</li>
</ul>
</li>
</ul>
<p><strong>Трансформеры и большие языковые модели (LLM)</strong></p>
<p>Трансформеры, такие как GPT (Generative Pre-trained Transformer), BERT и их производные, представляют собой архитектуры, особенно популярные для обработки текста. Они обучаются на больших наборах текстов и могут генерировать новые тексты, писать код, вести диалог, переводить и обрабатывать текстовые данные в различных форматах. Такие модели особенно сильны в задачах обработки языка и демонстрируют высокую гибкость в задачах текстовой генерации и анализа.</p>
<p><strong>Диффузионные модели</strong></p>
<p>Эти модели постепенно добавляют шум к данным, чтобы сделать их менее определёнными, а затем “восстанавливают” данные обратно к оригиналу, но уже с вариативностью. Диффузионные модели используются для генерации изображений и других типов данных, где требуется высокий уровень детализации и вариативности.</p>
<p><strong>Рекуррентные нейронные сети (RNN)</strong></p>
<p>Хотя RNN не так распространены, как трансформеры для генеративных задач, они до сих пор применяются в ряде случаев, особенно когда важен контекст последовательности (например, в задачах синтеза музыки или генерации текста). LSTM и GRU (в рамках RNN) также могут быть использованы для генеративных задач, где важна зависимость от временной последовательности.</p>
<p><strong>Чем генеративный ИИ отличается от других типов ИИ</strong></p>
<p>Генеративный ИИ отличается от других типов искусственного интеллекта по ряду характеристик:</p>
<ul>
<li><p>Создание новых данных vs. анализ и предсказание:</p>
</li>
<li><p>Генеративный ИИ создаёт новые данные (например, текст или изображение), которые не существовали в изначальном виде.</p>
</li>
<li><p>Дискриминативные модели (например, классификаторы) нацелены на анализ, предсказание и категоризацию, а не на генерацию. Они используют алгоритмы, такие как деревья решений, SVM или CNN для задач распознавания образов и классификации, но не могут самостоятельно создавать новые данные.</p>
</li>
<li><p>Использование для творчества и генерации контента:</p>
<ul>
<li>Генеративные модели активно используются для творчества и задач, связанных с созданием мультимедиа-контента.</li>
<li>Дискриминативные модели используются в задачах, где требуется анализ существующих данных, например, для диагностики заболеваний, предсказания погоды, выявления мошенничества.</li>
</ul>
</li>
</ul>
<p><strong>Комплексность и требования к обучению:</strong></p>
<ul>
<li>Генеративные модели требуют более крупных и сложных обучающих выборок, чтобы изучить шаблоны и закономерности.</li>
<li>Дискриминативные модели, как правило, легче обучаются и требуют меньших вычислительных ресурсов, особенно в задачах бинарной классификации.</li>
</ul>
<p><strong>Применение генеративного ИИ</strong><br>Генеративный ИИ находит применение во множестве сфер:</p>
<ul>
<li>Развлечения и медиа: <ul>
<li>создание музыки, текста, изображений, сценариев.</li>
</ul>
</li>
<li>Маркетинг: генерация контента для социальных сетей и рекламы.</li>
<li>Наука и медицина: моделирование молекул, создание изображений для диагностики.</li>
<li>Разработка продуктов: дизайн, генерация прототипов и улучшение изображений.</li>
</ul>
<p><strong>Заключение</strong><br>Генеративный ИИ — это мощный инструмент, способный создать уникальные данные и открыть новые возможности в различных областях. От традиционных моделей ИИ он отличается именно своей способностью генерировать новые данные, а не просто анализировать и классифицировать существующие.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>science</tag>
        <tag>AI</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>Comparing Efficiency of NLP Models. Methods and Metrics</title>
    <url>/hexo-blog//techniques-for-handling-context-in-ai-models/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>When comparing the efficiency of NLP models, it is essential to use standardized approaches, metrics, and parameters to ensure a fair and comprehensive evaluation. Below is a structured guide.</p>
<hr>
<h2 id="1-Approaches-for-Evaluating-NLP-Models"><a href="#1-Approaches-for-Evaluating-NLP-Models" class="headerlink" title="1. Approaches for Evaluating NLP Models"></a>1. Approaches for Evaluating NLP Models</h2><ol>
<li><strong>Task-Specific Evaluation</strong>: Measure performance on specific NLP tasks (e.g., sentiment analysis, named entity recognition, machine translation).</li>
<li><strong>Benchmark Datasets</strong>: Use well-known datasets like <a href="https://huggingface.co/datasets/nyu-mll/glue">GLUE</a><sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="GLUE - The General Language Understanding Evaluation (GLUE) benchmark is a collection of resources for training, evaluating, and analyzing natural language understanding systems. 
">[1]</span></a></sup>, <a href="https://super.gluebenchmark.com/">SuperGLUE</a><sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="SuperGLUE is a benchmark dataset designed to pose a more rigorous test of language understanding than GLUE. 
">[2]</span></a></sup>, <a href="https://rajpurkar.github.io/SQuAD-explorer/">SQuAD</a><sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="SQuAD - Stanford Question Answering Dataset (SQuAD) is a reading comprehension dataset, consisting of questions posed by crowdworkers on a set of Wikipedia articles, where the answer to every question is a segment of text, or span, from the corresponding reading passage, or the question might be unanswerable.
">[3]</span></a></sup>, or <a href="https://huggingface.co/wmt">WMT</a><sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="WMT: Workshop on Statistical Machine Translation focuses on news text translation. It includes language pairs such as English to/from various languages like Chinese, Czech, German, Hausa, Icelandic, Japanese, Russian, and more.">[4]</span></a></sup> for standardized comparisons.</li>
<li><strong>Ablation Studies</strong>: Analyze the impact of model components by systematically removing or modifying parts of the model.</li>
<li><strong>Scalability and Efficiency Testing</strong>:<ul>
<li>Test for performance across different dataset sizes.</li>
<li>Evaluate computational efficiency (e.g., inference speed, training time).</li>
</ul>
</li>
<li><strong>Generalization and Robustness</strong>:<ul>
<li>Test on out-of-distribution data or adversarial examples.</li>
<li>Use cross-lingual or domain-specific datasets.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="2-Relevant-Metrics"><a href="#2-Relevant-Metrics" class="headerlink" title="2. Relevant Metrics"></a>2. Relevant Metrics</h2><h3 id="A-Task-Specific-Metrics"><a href="#A-Task-Specific-Metrics" class="headerlink" title="A. Task-Specific Metrics"></a>A. Task-Specific Metrics</h3><ol>
<li><strong>Classification Tasks</strong>:<ul>
<li>Accuracy</li>
<li>Precision</li>
<li>Recall </li>
<li>F1-Score</li>
<li>Area Under the Curve (AUC) for ROC&#x2F;PR curves</li>
</ul>
</li>
<li><strong>Text Generation Tasks</strong>:<ul>
<li>BLEU (Bilingual Evaluation Understudy)</li>
<li>ROUGE (Recall-Oriented Understudy for Gisting Evaluation)</li>
<li>METEOR (Metric for Evaluation of Translation with Explicit Ordering)</li>
</ul>
</li>
<li><strong>Question Answering</strong>:<ul>
<li>Exact Match (EM)</li>
<li>F1-Score</li>
</ul>
</li>
<li><strong>Language Modeling</strong>:<ul>
<li>Perplexity</li>
<li>Bits-per-character (BPC)</li>
</ul>
</li>
<li><strong>Named Entity Recognition (NER)</strong>:<ul>
<li>F1-Score for Entity-Level Precision&#x2F;Recall</li>
</ul>
</li>
<li><strong>Text Summarization</strong>:<ul>
<li>ROUGE-1, ROUGE-2, ROUGE-L</li>
</ul>
</li>
</ol>
<h3 id="B-Efficiency-Metrics"><a href="#B-Efficiency-Metrics" class="headerlink" title="B. Efficiency Metrics"></a>B. Efficiency Metrics</h3><ol>
<li><strong>Computational Efficiency</strong>:<ul>
<li>FLOPs (Floating Point Operations per Second)</li>
<li>Latency (time per inference)</li>
<li>Training Time</li>
</ul>
</li>
<li><strong>Memory Usage</strong>:<ul>
<li>GPU&#x2F;CPU memory requirements</li>
<li>Model size (in MB or parameters)</li>
</ul>
</li>
<li><strong>Energy Consumption</strong>:<ul>
<li>Energy usage during training&#x2F;inference</li>
</ul>
</li>
</ol>
<hr>
<h2 id="3-Parameters-for-Testing"><a href="#3-Parameters-for-Testing" class="headerlink" title="3. Parameters for Testing"></a>3. Parameters for Testing</h2><ol>
<li><strong>Model Parameters</strong>:<ul>
<li>Number of layers</li>
<li>Hidden size</li>
<li>Attention heads</li>
</ul>
</li>
<li><strong>Dataset Characteristics</strong>:<ul>
<li>Dataset size</li>
<li>Distribution (balanced vs. imbalanced classes)</li>
<li>Language&#x2F;domain</li>
</ul>
</li>
<li><strong>Hyperparameters</strong>:<ul>
<li>Learning rate</li>
<li>Batch size</li>
<li>Dropout rate</li>
<li>Optimization algorithm (e.g., AdamW, SGD)</li>
</ul>
</li>
<li><strong>Infrastructure</strong>:<ul>
<li>Hardware (e.g., GPU, TPU, or CPU)</li>
<li>Software (e.g., TensorFlow, PyTorch)</li>
</ul>
</li>
</ol>
<hr>
<h2 id="4-Reusability-for-Variable-Changes"><a href="#4-Reusability-for-Variable-Changes" class="headerlink" title="4. Reusability for Variable Changes"></a>4. Reusability for Variable Changes</h2><ol>
<li><strong>Modular Code</strong>: Ensure model code allows for easy swapping of components (e.g., tokenizer, embedding layer).</li>
<li><strong>Parameterization</strong>:<ul>
<li>Use configuration files (YAML&#x2F;JSON) to define model parameters and settings.</li>
</ul>
</li>
<li><strong>Reproducibility</strong>:<ul>
<li>Log training runs using tools like TensorBoard, Weights &amp; Biases, or MLflow.</li>
<li>Fix random seeds for deterministic results.</li>
</ul>
</li>
<li><strong>Automated Testing</strong>:<ul>
<li>Implement pipelines to rerun experiments with new variables.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The comparison of NLP models requires a multifaceted approach, evaluating both task performance and computational efficiency. Selecting appropriate metrics and parameters ensures comprehensive insights into model strengths and weaknesses. By maintaining modularity and automation, reusability across experiments is simplified, enabling iterative improvements and robust testing.</p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">GLUE - The General Language Understanding Evaluation (GLUE) benchmark is a collection of resources for training, evaluating, and analyzing natural language understanding systems.<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">SuperGLUE is a benchmark dataset designed to pose a more rigorous test of language understanding than GLUE.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">SQuAD - Stanford Question Answering Dataset (SQuAD) is a reading comprehension dataset, consisting of questions posed by crowdworkers on a set of Wikipedia articles, where the answer to every question is a segment of text, or span, from the corresponding reading passage, or the question might be unanswerable.<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WMT: Workshop on Statistical Machine Translation focuses on news text translation. It includes language pairs such as English to/from various languages like Chinese, Czech, German, Hausa, Icelandic, Japanese, Russian, and more.<a href="#fnref:4" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>AI glossaries list</title>
    <url>/hexo-blog/2024/11/01/post_ai__glossary_list/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>List contains glossaries with brief overview</strong></p>
<ul>
<li>Glossary-of-Artificial-Intelligence<ul>
<li>GitHub project: <a href="https://github.com/ahammadmejbah/Glossary-of-Artificial-Intelligence">https://github.com/ahammadmejbah/Glossary-of-Artificial-Intelligence</a></li>
<li>A “Glossary of Artificial Intelligence” is a concise reference resource defining key terms, concepts, and terminology related to AI. It provides explanations and definitions to help individuals understand and navigate the field of artificial intelligence, making it a valuable tool for both beginners and experts in the AI domain.</li>
<li>Text + pictures + some python code snippets</li>
<li>It covers just ‘A’ letter.</li>
</ul>
</li>
<li>Artificial Intelligence and Data Science<ul>
<li>GitHub project:<a href="https://aim-rsf.github.io/Glossary-of-Terms/terms/Artificial-Intelligence.html">https://aim-rsf.github.io/Glossary-of-Terms/terms/Artificial-Intelligence.html</a></li>
<li>Glossary contains terms relating to Artificial Intelligence and Data Science.</li>
<li>Basic terms for artificial intelligence and data science. Just few terms</li>
</ul>
</li>
<li>AI-Glossary<ul>
<li>A glossary of terms in AI and their corresponding papers.</li>
<li>GitHub project: <a href="https://github.com/odisha-ml/AI-Glossary">https://github.com/odisha-ml/AI-Glossary</a></li>
<li>Published version: <a href="https://glossary.odishaai.org/">glossary.odishaai.org</a></li>
</ul>
</li>
<li>Generative AI Terminology<ul>
<li>GitHub project: <a href="https://github.com/nomic-ai/gpt4all/wiki/Generative-AI-Terminology">https://github.com/nomic-ai/gpt4all/wiki/Generative-AI-Terminology</a></li>
</ul>
</li>
<li>AI Dictionary<ul>
<li>Published version: <a href="https://nhsx.github.io/ai-dictionary">https://nhsx.github.io/ai-dictionary</a></li>
</ul>
</li>
<li>Online glossary of machine learning terms<ul>
<li><a href="https://machinelearning.wtf/">machinelearning.wtf</a></li>
<li>Well srtuctured and informative resource</li>
</ul>
</li>
</ul>
<p><strong>Other</strong></p>
<ul>
<li><a href="https://csrc.nist.gov/glossary">NIST glossary</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>AI papers</title>
    <url>/hexo-blog/2024/10/18/post_ai__mix_of_instances/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Variational-Autoencoder"><a href="#Variational-Autoencoder" class="headerlink" title="Variational Autoencoder"></a>Variational Autoencoder</h2><p>Paper:</p>
<ul>
<li>Book: An Introduction to Variational Autoencoders. Diederik P. Kingma<ul>
<li>DOI:10.1561&#x2F;2200000056</li>
<li><a href="https://arxiv.org/pdf/1906.02691">Read on arxiv.org</a></li>
<li><a href="https://sci-hub.se/10.1561/2200000056">Read on sci-hub.se</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>papers</tag>
      </tags>
  </entry>
  <entry>
    <title>Evaluating AI Applications. Checklist</title>
    <url>/hexo-blog/2024/10/28/post_ai__evaluating_ai_applications/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-Evaluation-of-AI-Prompts"><a href="#1-Evaluation-of-AI-Prompts" class="headerlink" title="1. Evaluation of AI Prompts"></a>1. Evaluation of AI Prompts</h2><h3 id="1-1-Prompt-Clarity"><a href="#1-1-Prompt-Clarity" class="headerlink" title="1.1 Prompt Clarity"></a>1.1 <strong>Prompt Clarity</strong></h3><ul>
<li>Ensure the prompt is clear and unambiguous.</li>
<li>Verify that the prompt avoids overly complex or technical language unless required by the application.</li>
<li>Assess whether the intent of the prompt is evident to the AI.</li>
</ul>
<h3 id="1-2-Prompt-Relevance"><a href="#1-2-Prompt-Relevance" class="headerlink" title="1.2 Prompt Relevance"></a>1.2 <strong>Prompt Relevance</strong></h3><ul>
<li>Confirm that the prompt aligns with the expected use case or domain of the application.</li>
<li>Check if the prompt sufficiently narrows down the expected response scope.</li>
<li>Use semantic similarity tools like <a href="https://sbert.net/">SentenceTransformers</a> to verify relevance between the prompt and its context.<ul>
<li>Example:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sentence_transformers <span class="keyword">import</span> SentenceTransformer, util</span><br><span class="line"></span><br><span class="line">model = SentenceTransformer(<span class="string">&#x27;all-MiniLM-L6-v2&#x27;</span>)</span><br><span class="line">prompt = <span class="string">&quot;Explain the concept of gravity.&quot;</span></span><br><span class="line">context = <span class="string">&quot;A physics tutoring chatbot.&quot;</span></span><br><span class="line">similarity = util.pytorch_cos_sim(model.encode(prompt), model.encode(context))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Semantic Similarity Score: <span class="subst">&#123;similarity&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="1-3-Prompt-Variability"><a href="#1-3-Prompt-Variability" class="headerlink" title="1.3 Prompt Variability"></a>1.3 <strong>Prompt Variability</strong></h3><ul>
<li>Evaluate how the AI performs across diverse phrasing of the same question or task.</li>
<li>Test prompts with varied structures, synonyms, or tone adjustments.</li>
<li>Test AI with variations of prompts using paraphrasing libraries like transformers.<ul>
<li>Example:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"></span><br><span class="line">paraphraser = pipeline(<span class="string">&quot;text2text-generation&quot;</span>, model=<span class="string">&quot;t5-small&quot;</span>)</span><br><span class="line">prompt = <span class="string">&quot;Describe the process of photosynthesis.&quot;</span></span><br><span class="line">variations = paraphraser(prompt, max_length=<span class="number">50</span>, num_return_sequences=<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> variations:</span><br><span class="line">    <span class="built_in">print</span>(v[<span class="string">&#x27;generated_text&#x27;</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>
Reference: <a href="https://huggingface.co/docs/transformers/en/index">HuggingFace Transformers</a></li>
</ul>
</li>
</ul>
<h3 id="1-4-Performance-Across-Scenarios"><a href="#1-4-Performance-Across-Scenarios" class="headerlink" title="1.4 Performance Across Scenarios"></a>1.4 <strong>Performance Across Scenarios</strong></h3><ul>
<li>Use edge-case prompts, including ambiguous, contradictory, or incomplete inputs.</li>
<li>Analyze how the AI handles multilingual or culturally specific prompts.<br><strong>Approach:</strong></li>
<li>Develop a test suite with diverse prompts, including edge cases.</li>
<li>Example edge case list:<ul>
<li>Ambiguous: “What is it?”</li>
<li>Contradictory: “Why is a circle square?”</li>
<li>Multilingual: “¿Cómo estás?”</li>
</ul>
</li>
<li>Automate testing with a loop:<ul>
<li><p>Example:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">prompts = [<span class="string">&quot;What is it?&quot;</span>, <span class="string">&quot;Why is a circle square?&quot;</span>, <span class="string">&quot;¿Cómo estás?&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> prompt <span class="keyword">in</span> prompts:</span><br><span class="line">    response = ai_model.generate_response(prompt)  <span class="comment"># Replace with actual AI call</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Prompt: <span class="subst">&#123;prompt&#125;</span> | Response: <span class="subst">&#123;response&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-Linguistic-AI-Prompt-QA"><a href="#2-Linguistic-AI-Prompt-QA" class="headerlink" title="2. Linguistic AI Prompt QA"></a>2. Linguistic AI Prompt QA</h2><h3 id="2-1-Response-Accuracy"><a href="#2-1-Response-Accuracy" class="headerlink" title="2.1 Response Accuracy"></a>2.1 <strong>Response Accuracy</strong></h3><ul>
<li>Assess if the AI’s responses are factually correct.</li>
<li>Verify that responses align with the context and requirements of the prompt.</li>
<li>Compare responses against a reference dataset using BLEU, ROUGE, or exact match metrics.</li>
<li>Example:  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nltk.translate.bleu_score <span class="keyword">import</span> sentence_bleu</span><br><span class="line"></span><br><span class="line">reference = [<span class="string">&quot;Paris is the capital of France.&quot;</span>]</span><br><span class="line">response = <span class="string">&quot;Paris is the capital of France.&quot;</span></span><br><span class="line">score = sentence_bleu([reference], response.split())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;BLEU Score: <span class="subst">&#123;score&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li>Reference: <a href="https://www.nltk.org/">NLTK Documentation</a></li>
</ul>
<h3 id="2-2-Response-Completeness"><a href="#2-2-Response-Completeness" class="headerlink" title="2.2 Response Completeness"></a>2.2 <strong>Response Completeness</strong></h3><ul>
<li>Ensure responses fully address all aspects of the prompt.</li>
<li>Check for missing details or incomplete information in multi-part prompts.</li>
<li>Use keyword extraction (spaCy, nltk) to verify if key elements are addressed in the response.<ul>
<li>Example:  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> spacy</span><br><span class="line">nlp = spacy.load(<span class="string">&quot;en_core_web_sm&quot;</span>)</span><br><span class="line">response = nlp(<span class="string">&quot;Photosynthesis converts sunlight into energy.&quot;</span>)</span><br><span class="line">keywords = [token.text <span class="keyword">for</span> token <span class="keyword">in</span> response <span class="keyword">if</span> token.pos_ <span class="keyword">in</span> [<span class="string">&quot;NOUN&quot;</span>, <span class="string">&quot;VERB&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Keywords: <span class="subst">&#123;keywords&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="2-3-Language-Quality"><a href="#2-3-Language-Quality" class="headerlink" title="2.3 Language Quality"></a>2.3 <strong>Language Quality</strong></h3><ul>
<li>Verify that responses use proper grammar, spelling, and punctuation.</li>
<li>Evaluate readability, ensuring the output is concise and coherent.</li>
<li>Use libraries like <a href="https://languagetool.org/">LanguageTool</a> for grammar and style checks.<ul>
<li>Example:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> language_tool_python</span><br><span class="line"></span><br><span class="line">tool = language_tool_python.LanguageTool(<span class="string">&#x27;en-US&#x27;</span>)</span><br><span class="line">response = <span class="string">&quot;Photosyntesis is a natural proess.&quot;</span></span><br><span class="line">matches = tool.check(response)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Grammar Issues: <span class="subst">&#123;[<span class="keyword">match</span>.message <span class="keyword">for</span> <span class="keyword">match</span> <span class="keyword">in</span> matches]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
Reference: <a href="https://languagetool.org/">LanguageTool</a></li>
</ul>
</li>
</ul>
<h3 id="2-4-Tone-and-Style-Appropriateness"><a href="#2-4-Tone-and-Style-Appropriateness" class="headerlink" title="2.4 Tone and Style Appropriateness"></a>2.4 <strong>Tone and Style Appropriateness</strong></h3><ul>
<li>Confirm that the tone matches the intended audience or use case.</li>
<li>Check for professional, formal, or casual responses based on expectations.</li>
<li>Use sentiment analysis and tone classification (VADER, transformers).<ul>
<li>Example:  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line">tone_analyzer = pipeline(<span class="string">&quot;sentiment-analysis&quot;</span>)</span><br><span class="line">response = <span class="string">&quot;Thank you for your query. Let me help you.&quot;</span></span><br><span class="line">tone = tone_analyzer(response)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Tone Analysis: <span class="subst">&#123;tone&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="2-5-Bias-and-Ethical-Considerations"><a href="#2-5-Bias-and-Ethical-Considerations" class="headerlink" title="2.5 Bias and Ethical Considerations"></a>2.5 <strong>Bias and Ethical Considerations</strong></h3><ul>
<li>Evaluate responses for unintended biases, stereotypes, or offensive language.</li>
<li>Confirm adherence to ethical guidelines and appropriate handling of sensitive topics.</li>
</ul>
<hr>
<h2 id="3-General-QA-Considerations"><a href="#3-General-QA-Considerations" class="headerlink" title="3. General QA Considerations"></a>3. General QA Considerations</h2><h3 id="3-1-Response-Consistency"><a href="#3-1-Response-Consistency" class="headerlink" title="3.1 Response Consistency"></a>3.1 <strong>Response Consistency</strong></h3><ul>
<li>Test the AI’s ability to provide consistent answers to repeated prompts.</li>
<li>Verify consistency across similar but differently worded prompts.</li>
<li>Automate repeated prompt tests and compare responses using hashes for quick consistency checks.<ul>
<li>Example:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">prompt = <span class="string">&quot;Explain gravity.&quot;</span></span><br><span class="line">response1 = ai_model.generate_response(prompt)</span><br><span class="line">response2 = ai_model.generate_response(prompt)</span><br><span class="line">hash1 = hashlib.md5(response1.encode()).hexdigest()</span><br><span class="line">hash2 = hashlib.md5(response2.encode()).hexdigest()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Consistent: <span class="subst">&#123;hash1 == hash2&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="3-2-Error-Handling"><a href="#3-2-Error-Handling" class="headerlink" title="3.2 Error Handling"></a>3.2 <strong>Error Handling</strong></h3><ul>
<li>Evaluate how the AI handles invalid or nonsensical inputs.</li>
<li>Assess whether the AI provides useful clarifications or fallback responses.</li>
<li>Test with invalid inputs and evaluate fallback mechanisms.</li>
<li>Example invalid inputs:<ul>
<li>Empty: “”</li>
<li>Nonsensical: “asdfghjkl”<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">invalid_prompts = [<span class="string">&quot;&quot;</span>, <span class="string">&quot;asdfghjkl&quot;</span>]</span><br><span class="line"><span class="keyword">for</span> prompt <span class="keyword">in</span> invalid_prompts:</span><br><span class="line">    response = ai_model.generate_response(prompt)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Prompt: <span class="subst">&#123;prompt&#125;</span> | Response: <span class="subst">&#123;response&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="3-3-Adaptability"><a href="#3-3-Adaptability" class="headerlink" title="3.3 Adaptability"></a>3.3 <strong>Adaptability</strong></h3><ul>
<li>Test the AI’s ability to refine responses based on follow-up questions or clarifications.</li>
<li>Check adaptability to user feedback or corrections during interactions.</li>
<li>Use sequential prompts to test follow-up handling.</li>
<li>Example:<pre><code class="python">responses = []
prompts = [&quot;What is gravity?&quot;, &quot;Can you elaborate?&quot;]
for prompt in prompts:
    response = ai_model.generate_response(prompt)
    responses.append(response)
    print(f&quot;Prompt: &#123;prompt&#125; | Response: &#123;response&#125;&quot;)
</code></pre>
</li>
</ul>
<hr>
<h2 id="4-Documentation-and-Reporting"><a href="#4-Documentation-and-Reporting" class="headerlink" title="4. Documentation and Reporting"></a>4. Documentation and Reporting</h2><ul>
<li>Maintain detailed records of tests performed, including prompt variations and observed outcomes.</li>
<li>Highlight areas for improvement, including specific examples of weak or incorrect responses.</li>
<li>Provide suggestions for refining prompts or fine-tuning the AI model where needed.</li>
<li>Store all test results in structured formats (e.g., CSV, JSON).</li>
<li>Example:<pre><code class="python">import csv
results = [&#123;&quot;prompt&quot;: &quot;What is gravity?&quot;, &quot;response&quot;: &quot;A force of attraction.&quot;, &quot;accuracy&quot;: 1.0&#125;]
with open(&#39;test_results.csv&#39;, &#39;w&#39;, newline=&#39;&#39;) as csvfile:
    fieldnames = results[0].keys()
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerows(results)
</code></pre>
</li>
</ul>
<hr>
<p><strong>Note</strong>: This checklist should be adapted to the specific requirements of the AI application under evaluation.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>prompt_engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>Prompt Engineering - start.</title>
    <url>/hexo-blog/2024/10/28/post_ai__promt_engineer_start/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Prompt engineering has emerged as a crucial role in the field of artificial intelligence (AI), focusing on crafting, optimizing, and evaluating queries to effectively interact with advanced models like GPT-4, Claude, or Bard. This guide outlines the technical skills, tools, and practices necessary for a successful career in this domain, with references to state-of-the-art resources and technologies.</p>
<hr>
<h2 id="1-Core-Knowledge-in-Artificial-Intelligence-and-Machine-Learning"><a href="#1-Core-Knowledge-in-Artificial-Intelligence-and-Machine-Learning" class="headerlink" title="1. Core Knowledge in Artificial Intelligence and Machine Learning"></a>1. Core Knowledge in Artificial Intelligence and Machine Learning</h2><p>Understanding generative AI and large language models (LLMs) is foundational to prompt engineering.</p>
<h3 id="Key-Topics"><a href="#Key-Topics" class="headerlink" title="Key Topics:"></a>Key Topics:</h3><ul>
<li><strong>Natural Language Processing (NLP):</strong> <ul>
<li>Learn about tokenization, embedding, and attention mechanisms.</li>
<li>Familiar tools: <a href="https://spacy.io/">spaCy</a> (2020+), <a href="https://huggingface.co/transformers">Transformers by Hugging Face</a>.</li>
</ul>
</li>
<li><strong>Language Models:</strong><ul>
<li>Explore architectures like GPT (OpenAI), BERT, and T5.</li>
<li>Key tools: <a href="https://platform.openai.com/docs">OpenAI API</a>, <a href="https://www.tensorflow.org/">Google’s TensorFlow</a>, and Hugging Face’s datasets.</li>
</ul>
</li>
<li><strong>Fine-Tuning Techniques:</strong><ul>
<li>Study transfer learning for customizing LLMs with domain-specific data.</li>
<li>Libraries: <a href="https://huggingface.co/docs/diffusers/v0.16.0/en/training/lora">LoRA</a> (Low-Rank Adaptation for fine-tuning large models).<ul>
<li>Paper: LoRA: Low-Rank Adaptation of Large Language Models &#x2F; DOI <a href="https://arxiv.org/abs/2106.09685">arxiv.org&#x2F;abs&#x2F;2106.09685</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h3><ul>
<li>Vaswani et al., 2017, “Attention is All You Need” - DOI: <a href="https://doi.org/10.48550/arXiv.1706.03762">10.48550&#x2F;arXiv.1706.03762</a>.  </li>
<li><em>Efficient Fine-Tuning Techniques for LLMs</em> (Hugging Face PEFT).</li>
</ul>
<hr>
<h2 id="2-Data-Handling-Skills"><a href="#2-Data-Handling-Skills" class="headerlink" title="2. Data Handling Skills"></a>2. Data Handling Skills</h2><p>Prompt engineering often involves working with large datasets to understand and refine AI responses.</p>
<h3 id="Tools-and-Techniques"><a href="#Tools-and-Techniques" class="headerlink" title="Tools and Techniques:"></a>Tools and Techniques:</h3><ul>
<li><strong>Data Preprocessing:</strong><ul>
<li>Techniques: Noise reduction, stemming, and lemmatization.</li>
<li>Tools: <a href="https://cleanlab.io/">Cleanlab</a>, <a href="https://www.nltk.org/">NLTK</a> (for text-specific preprocessing).</li>
</ul>
</li>
<li><strong>Data Analysis:</strong><ul>
<li>Understand statistical trends in model responses.</li>
<li>Tools: <a href="https://pola-rs.github.io/polars/">Polars</a>, an alternative to <a href="https://pandas.pydata.org/">Pandas</a> for high-performance data handling.</li>
</ul>
</li>
<li><strong>Tokenization Analysis:</strong><ul>
<li>Evaluate token usage in models using OpenAI’s <code>tiktoken</code> library (<a href="https://github.com/openai/tiktoken">GitHub</a>).</li>
</ul>
</li>
</ul>
<hr>
<h2 id="3-Prompt-Design-and-Optimization"><a href="#3-Prompt-Design-and-Optimization" class="headerlink" title="3. Prompt Design and Optimization"></a>3. Prompt Design and Optimization</h2><p>Crafting effective prompts is at the heart of this role.</p>
<h3 id="Advanced-Practices"><a href="#Advanced-Practices" class="headerlink" title="Advanced Practices:"></a>Advanced Practices:</h3><ul>
<li><strong>Prompt Templates:</strong><ul>
<li>Use structured prompts with placeholders for variables.</li>
<li>Tools: <a href="https://www.langchain.com/">LangChain</a> for modular prompt management.</li>
</ul>
</li>
<li><strong>Iterative Refinement:</strong><ul>
<li>Use tools like <a href="https://promptperfect.jina.ai/">PromptPerfect</a> to analyze and enhance prompt effectiveness.</li>
</ul>
</li>
<li><strong>Handling Context:</strong><ul>
<li>Manage long contexts using techniques like windowing or chunking, supported by <a href="https://www.pinecone.io/">Pinecone</a> for vector search.<ul>
<li>Other techniques and tools presented in other <a href="../../../../../../hexo-blog/techniques-for-handling-context-in-ai-models/">post: ‘Techniques for Handling Context in AI Models’</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-Metrics-for-Evaluating-Prompt-Effectiveness"><a href="#4-Metrics-for-Evaluating-Prompt-Effectiveness" class="headerlink" title="4. Metrics for Evaluating Prompt Effectiveness"></a>4. Metrics for Evaluating Prompt Effectiveness</h2><p>Evaluating AI responses requires robust metrics and tools.</p>
<h3 id="Metrics"><a href="#Metrics" class="headerlink" title="Metrics:"></a>Metrics:</h3><ul>
<li><strong>Relevance and Accuracy:</strong><ul>
<li>Techniques: Embedding similarity scoring (e.g., cosine similarity).</li>
<li>Tools: <a href="https://www.sbert.net/">Sentence-Transformers</a>.</li>
</ul>
</li>
<li><strong>Quality and Fluency:</strong><ul>
<li>Automated tools like <a href="https://textblob.readthedocs.io/en/dev/">TextBlob</a> or <a href="https://developer.grammarly.com/">Grammarly API</a>.</li>
</ul>
</li>
<li><strong>BLEU, ROUGE, METEOR:</strong><ul>
<li><a href="https://huggingface.co/metrics/bleu">BLEU</a></li>
<li><a href="https://huggingface.co/metrics/rouge">ROUGE</a></li>
<li><a href="">METEOR</a><ul>
<li>Paper: <ul>
<li>METEOR: An Automatic Metric for MT Evaluation with Improved Correlation with Human Judgments, 2005. <ul>
<li>Reaad on <a href="https://aclanthology.org/W05-0909.pdf">aclanthology.org</a></li>
</ul>
</li>
</ul>
</li>
<li>Paper: The Meteor metric for automatic evaluation of machine translation, 2009<ul>
<li>DOI:10.1007&#x2F;s10590-009-9059-4</li>
<li>Read on <a href="https://sci-hub.se/10.1007/s10590-009-9059-4">sci-hub</a></li>
</ul>
</li>
<li>Post: What is the METEOR Score (Metric for Evaluation of Translation with Explicit Ordering)? <ul>
<li>Reaad on <a href="https://klu.ai/glossary/meteor-score">klu.ai</a></li>
</ul>
</li>
</ul>
</li>
<li>Compare responses to benchmarks using <a href="https://huggingface.co/docs/evaluate">Evaluate</a>.<ul>
<li><a href="https://huggingface.co/docs/evaluate/installation">Evaluate - Installation</a></li>
<li><a href="https://huggingface.co/docs/evaluate/a_quick_tour">Evaluate - A quick tour</a></li>
<li><a href="https://huggingface.co/docs/evaluate/choosing_a_metric">Evaluate - Choosing a metric for your task</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-Testing-and-Automation-in-Prompt-Engineering"><a href="#5-Testing-and-Automation-in-Prompt-Engineering" class="headerlink" title="5. Testing and Automation in Prompt Engineering"></a>5. Testing and Automation in Prompt Engineering</h2><p>Automation ensures scalability and reliability in prompt testing.</p>
<h3 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices:"></a>Best Practices:</h3><ul>
<li><strong>Automated Test Suites:</strong><ul>
<li>Frameworks: <a href="https://pytest.org/">pytest</a>, <a href="https://greatexpectations.io/">Great Expectations</a> for data validation.</li>
</ul>
</li>
<li><strong>Version Control for Prompts:</strong><ul>
<li>Use GitHub or GitLab with prompt-specific repositories.</li>
</ul>
</li>
<li><strong>Continuous Testing Pipelines:</strong><ul>
<li>CI&#x2F;CD integration using <a href="https://github.com/features/actions">GitHub Actions</a> or <a href="https://circleci.com/">CircleCI</a>.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="6-Tools-for-Working-with-Language-Models"><a href="#6-Tools-for-Working-with-Language-Models" class="headerlink" title="6. Tools for Working with Language Models"></a>6. Tools for Working with Language Models</h2><p>Advanced tools simplify interaction with modern AI systems.</p>
<h3 id="Recommendations"><a href="#Recommendations" class="headerlink" title="Recommendations:"></a>Recommendations:</h3><ul>
<li><strong>Model APIs:</strong><ul>
<li>OpenAI GPT-4, Cohere API (<a href="https://docs.cohere.com/">Cohere Docs</a>).</li>
</ul>
</li>
<li><strong>Interactive Platforms:</strong><ul>
<li><a href="https://www.notion.so/product/ai">Notion AI</a>, <a href="https://colab.research.google.com/">Google Colab</a>.</li>
</ul>
</li>
<li><strong>Visual Analytics:</strong><ul>
<li>Dashboards using <a href="https://streamlit.io/">Streamlit</a> or <a href="https://dash.plotly.com/">Plotly Dash</a>.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="7-Software-Development-Skills"><a href="#7-Software-Development-Skills" class="headerlink" title="7. Software Development Skills"></a>7. Software Development Skills</h2><p>Integrating AI prompts into workflows requires coding expertise.</p>
<h3 id="Key-Skills"><a href="#Key-Skills" class="headerlink" title="Key Skills:"></a>Key Skills:</h3><ul>
<li><strong>Python for AI:</strong><ul>
<li>Libraries: Hugging Face Transformers, OpenAI’s Python SDK.</li>
</ul>
</li>
<li><strong>REST API Development:</strong><ul>
<li>Tools: <a href="https://fastapi.tiangolo.com/">FastAPI</a>, Postman for testing.</li>
</ul>
</li>
<li><strong>Versioning:</strong><ul>
<li>Git and platforms like DVC (<a href="https://dvc.org/">Data Version Control</a>) for managing prompt iterations.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="8-Ethics-and-Limitations-in-AI"><a href="#8-Ethics-and-Limitations-in-AI" class="headerlink" title="8. Ethics and Limitations in AI"></a>8. Ethics and Limitations in AI</h2><p>Responsibility is a key aspect of prompt engineering.</p>
<h3 id="Topics"><a href="#Topics" class="headerlink" title="Topics:"></a>Topics:</h3><ul>
<li><strong>Ethical Prompt Design:</strong><ul>
<li>Avoid introducing biases into generated outputs.</li>
</ul>
</li>
<li><strong>Privacy and Security:</strong><ul>
<li>Ensure that personal or sensitive data is anonymized.</li>
<li>Tools: <a href="https://microsoft.github.io/presidio/">Presidio</a> for PII detection.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="References-1"><a href="#References-1" class="headerlink" title="References"></a>References</h2><h3 id="Tutorials-and-Resources"><a href="#Tutorials-and-Resources" class="headerlink" title="Tutorials and Resources:"></a>Tutorials and Resources:</h3><ul>
<li>Umar Jamil: <ul>
<li><a href="https://www.youtube.com/@umarjamilai">YouTube</a>, <a href="https://umarjamil.org/">Website</a>.  </li>
<li>Videos: <a href="https://github.com/hkproj/hkproj.github.io/blob/main/content/posts/videos.md">GitHub videos</a></li>
</ul>
</li>
<li>Yannic Kilcher: <a href="https://www.youtube.com/@YannicKilcher">YouTube</a>.</li>
</ul>
<h3 id="Research-Papers"><a href="#Research-Papers" class="headerlink" title="Research Papers:"></a>Research Papers:</h3><ul>
<li>“Attention is All You Need” - Vaswani et al., DOI: <a href="https://doi.org/10.48550/arXiv.1706.03762">10.48550&#x2F;arXiv.1706.03762</a>.  </li>
<li>“Efficient Fine-Tuning Techniques for LLMs” - DOI: <a href="https://doi.org/10.48550/arXiv.2106.09685">10.48550&#x2F;arXiv.2106.09685</a>.</li>
</ul>
<h3 id="Tools-and-Libraries"><a href="#Tools-and-Libraries" class="headerlink" title="Tools and Libraries:"></a>Tools and Libraries:</h3><ul>
<li>OpenAI API (<a href="https://platform.openai.com/docs">Docs</a>).  </li>
<li>Hugging Face <a href="https://huggingface.co/transformers">Transformers</a>.  </li>
<li>LangChain (<a href="https://www.langchain.com/">Website</a>).</li>
</ul>
<hr>
<p><strong>Other posts</strong></p>
<ol>
<li>Prompt Design and Engineering: Introduction and Advanced Methods. Read on <a href="https://arxiv.org/html/2401.14423v4#S1.F2">arxiv.org</a></li>
</ol>
<hr>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Prompt engineering is an evolving domain, combining technical expertise with creativity. With a solid foundation in AI, data analysis, and ethics, specialists can craft meaningful interactions between humans and machines. By leveraging modern tools and methodologies, professionals can drive innovation in the AI ecosystem.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>science</tag>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>prompt_engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>AI papers</title>
    <url>/hexo-blog/2024/10/18/post_ai__papers/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>Artificial Intelligence. Scientific journal (UA) <ul>
<li><a href="https://jai.in.ua/index.php/en/">https://jai.in.ua/index.php/en/</a><ul>
<li>The journal has been published since 1995. The journal registered in the list of specialized editions of Ukraine, where main dissertations results for the scientific degree in the area of engineering science and physics &amp; mathematics are published (Order of MES of Ukraine dated by 15.04.2021, № 420). The DOI name is assigned to the journal (Digital Object Identifier).</li>
<li><a href="https://jai.in.ua/index.php/en/issues">Archive. Journal issues by years</a></li>
</ul>
</li>
</ul>
</li>
<li>sci-hub<ul>
<li><a href="https://sci-hub.se/">https://sci-hub.se/</a><ul>
<li>Sci-Hub is the most controversial project in modern science. The goal of Sci-Hub is to provide free and unrestricted access to all scientific knowledge.</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>papers</tag>
      </tags>
  </entry>
  <entry>
    <title>Tools for Augmenting Data and Generating Texts</title>
    <url>/hexo-blog/2024/05/10/post_ai__tools_for_augmenting_data_and_generating_texts/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Text-Generation-Models"><a href="#Text-Generation-Models" class="headerlink" title="Text Generation Models"></a>Text Generation Models</h2><p>Text generation models are trained on large corpora and can generate semantically coherent and lexically varied sentences.</p>
<ul>
<li><strong>GPT-3&#x2F;GPT-4</strong>: Generates fluent and contextually relevant text. Supports fine-tuning and controlled outputs through prompt engineering.</li>
<li><strong>GPT-2</strong>: Effective for text generation and fine-tuning to produce specific semantic or syntactic structures.</li>
<li><strong>T5 (Text-to-Text Transfer Transformer)</strong>: Handles tasks by converting input into text-to-text format, generating sentences from structured input.</li>
<li><strong>BERT</strong>: Primarily for understanding tasks, but paired with generation heads like BART or T5, it can generate relevant sentences.</li>
</ul>
<h2 id="Text-Augmentation-Libraries"><a href="#Text-Augmentation-Libraries" class="headerlink" title="Text Augmentation Libraries"></a>Text Augmentation Libraries</h2><p>Libraries for NLP data augmentation by altering existing sentences while retaining their meaning.</p>
<ul>
<li><strong>nlpaug</strong>: Augments text by synonym replacement, random insertions, and transformations using word embeddings.<ul>
<li><a href="https://pypi.org/project/nlpaug/">PIP reference</a></li>
<li><a href="https://towardsdatascience.com/data-augmentation-library-for-text-9661736b13ff">Post: Data Augmentation library for text</a></li>
<li><a href="https://nlpaug.readthedocs.io/en/latest/index.html">nlpaug.readthedocs.io</a></li>
</ul>
</li>
<li><strong>TextAttack</strong>: Provides adversarial attacks and paraphrasing methods for generating variations of sentences.<ul>
<li><a href="https://textattack.readthedocs.io/en/master/index.html">TextAttack Documentation</a></li>
</ul>
</li>
</ul>
<h2 id="Semantic-Structure-based-Text-Generation"><a href="#Semantic-Structure-based-Text-Generation" class="headerlink" title="Semantic Structure-based Text Generation"></a>Semantic Structure-based Text Generation</h2><p>Tools for precise control over semantic structure in generated sentences.</p>
<ul>
<li><strong>Controlled Text Generation (via GPT-3&#x2F;4)</strong>: Uses structured prompts to guide text generation toward desired structures or concepts.</li>
<li><strong>OpenAI Codex</strong>: Generates text based on semantic instructions or structural descriptions.</li>
<li><strong>DeepAI’s Text Generation API</strong>: Generates text based on input semantics and structure.</li>
<li><strong>CTRL (Conditional Transformer Language Model)</strong>: Conditions text generation on control codes for specific topics or structures.</li>
</ul>
<h2 id="Rule-based-Text-Generation"><a href="#Rule-based-Text-Generation" class="headerlink" title="Rule-based Text Generation"></a>Rule-based Text Generation</h2><p>Generates text based on predefined templates or rules.</p>
<ul>
<li><strong>OpenNLP</strong>: Uses templates and rules for sentence generation.<ul>
<li><a href="https://opennlp.apache.org/docs/2.5.0/manual/opennlp.html">Apache OpenNLP Developer Documentation</a></li>
</ul>
</li>
<li><strong>Template-based Generation</strong>: Tools like <strong><a href="https://yarnpkg.com/">Yarn</a></strong> or <strong><a href="https://jinja.palletsprojects.com/en/stable/">Jinja2</a></strong> allow for generating text using templates with placeholders.</li>
</ul>
<h2 id="Lexical-Substitution-and-Paraphrasing-Tools"><a href="#Lexical-Substitution-and-Paraphrasing-Tools" class="headerlink" title="Lexical Substitution and Paraphrasing Tools"></a>Lexical Substitution and Paraphrasing Tools</h2><p>Tools for modifying words or phrases while maintaining semantic meaning.</p>
<ul>
<li><strong>Paraphrase Generation with BART or T5</strong>: Generates sentence variations that preserve meaning.</li>
<li><strong>WordNet-based tools</strong>: Uses lexical substitution to replace words with synonyms or semantically related words.</li>
</ul>
<h2 id="Generating-Text-Based-on-Semantic-Structures"><a href="#Generating-Text-Based-on-Semantic-Structures" class="headerlink" title="Generating Text Based on Semantic Structures"></a>Generating Text Based on Semantic Structures</h2><p>Tools and techniques to guide text generation using semantic roles or lexical features.</p>
<ul>
<li><strong>Graph-based Models</strong>: Represent word or sentence relationships to guide generation using tools like <strong>spaCy</strong>.</li>
<li><strong>Semantic Role Labeling (SRL)</strong>: Tools like <strong><a href="https://docs.allennlp.org/models/main/">AllenNLP</a></strong> tag sentence components to generate text following specific roles or patterns.<ul>
<li>Read more about Semantic Role Labeling in <a href="https://aclanthology.org/2023.findings-eacl.134.pdf">paper: PriMeSRL-Eval: A Practical Quality Metric for Semantic Role Labeling Systems Evaluation </a></li>
</ul>
</li>
<li><strong>Lexical and Syntactic Features</strong>: Fine-tunes models to control lexical variety or syntactic structure based on desired patterns.</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>A wide range of tools like <strong>GPT-3</strong>, <strong>T5</strong>, <strong>TextAttack</strong>, and <strong>nlpaug</strong> are available for augmenting data and generating text. They provide flexibility for creating semantically diverse and lexically varied text, while specialized tools like <strong>AllenNLP</strong> enable controlled generation based on specific structures and constraints.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>augmentation</tag>
        <tag>text_generation</tag>
      </tags>
  </entry>
  <entry>
    <title>VADER - intro</title>
    <url>/hexo-blog/2024/11/26/post_ai__vader_intro/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="VADER"><a href="#VADER" class="headerlink" title="VADER"></a>VADER</h2><p>VADER (Valence Aware Dictionary and sEntiment Reasoner) is a widely used sentiment analysis tool tailored for understanding emotions in text, especially in social media contexts. Developed by C.J. Hutto and Eric Gilbert, it combines lexicon-based methods with grammatical and syntactical rules, offering precise sentiment analysis. VADER excels at capturing sentiment intensity, polarity (positive, negative, neutral), and even nuances like sarcasm, thanks to empirically validated linguistic rules and datasets.</p>
<p>Originally presented at the Eighth International Conference on Weblogs and Social Media in 2014, VADER was designed for scalability and ease of use. Its open-source implementation in Python is accessible for various applications, from marketing analysis to social media monitoring. The tool incorporates features like emoticons, slang, and acronyms, making it uniquely adept at analyzing informal text. Users can install it via Python’s pip command, and the source code is freely available under the MIT License.</p>
<p>The tool has been validated rigorously with human raters to ensure accuracy. Datasets like tweets, movie reviews, and editorial snippets were used for its development, enabling a robust understanding of diverse text formats.</p>
<p>For official details, you can visit VADER’s documentation: <a href="https://vadersentiment.readthedocs.io/en/latest/">VADER Sentiment</a>.</p>
<h3 id="Releated-resources"><a href="#Releated-resources" class="headerlink" title="Releated resources"></a>Releated resources</h3><ul>
<li>Medium post : <a href="https://towardsdatascience.com/an-short-introduction-to-vader-3f3860208d53">A Short Introduction to VADER</a></li>
<li>Paper: VADER: A Parsimonious Rule-Based Model for Sentiment Analysis of Social Media Text. 2014<ul>
<li>DOI: 10.1609&#x2F;icwsm.v8i1.14550</li>
<li><a href="https://ojs.aaai.org/index.php/ICWSM/article/view/14550">Read on ojs.aaai.org</a></li>
</ul>
</li>
<li>Article: <a href="https://hex.tech/templates/sentiment-analysis/vader-sentiment-analysis/">VADER sentiment analysis</a></li>
<li>NLTK module: <a href="https://www.nltk.org/api/nltk.sentiment.vader.html#module-nltk.sentiment.vader">nltk.sentiment.vader module</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>VADER</tag>
        <tag>sentiment_analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>BART configuration parameters overview</title>
    <url>/hexo-blog/2024/12/04/post_ai_llm__bart_configuration_parameters_overview/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>This post related to:</em></p>
<ol>
<li><a href="../../../../post_ai_llm__techniques_for_handling_context_in_ai_models">Techniques for Handling Context in AI Models</a></li>
</ol>
<hr>
<h2 id="Parameters-list-and-descriptions"><a href="#Parameters-list-and-descriptions" class="headerlink" title="Parameters list and descriptions"></a>Parameters list and descriptions</h2><table>
<thead>
<tr>
<th><strong>Parameter</strong></th>
<th><strong>Description</strong></th>
<th><strong>Data Type&#x2F;Options</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>max_position_embeddings</code></td>
<td>Maximum number of positions for input tokens.</td>
<td>Integer, e.g., <code>1024</code>.</td>
</tr>
<tr>
<td><code>d_model</code></td>
<td>Dimensionality of the model’s embeddings and hidden states.</td>
<td>Integer, e.g., <code>768</code>, <code>1024</code>.</td>
</tr>
<tr>
<td><code>encoder_layers</code></td>
<td>Number of layers in the encoder.</td>
<td>Integer, e.g., <code>6</code>, <code>12</code>.</td>
</tr>
<tr>
<td><code>decoder_layers</code></td>
<td>Number of layers in the decoder.</td>
<td>Integer, e.g., <code>6</code>, <code>12</code>.</td>
</tr>
<tr>
<td><code>encoder_attention_heads</code></td>
<td>Number of attention heads in the encoder.</td>
<td>Integer, e.g., <code>12</code>.</td>
</tr>
<tr>
<td><code>decoder_attention_heads</code></td>
<td>Number of attention heads in the decoder.</td>
<td>Integer, e.g., <code>12</code>.</td>
</tr>
<tr>
<td><code>vocab_size</code></td>
<td>Vocabulary size of the tokenizer. Represents the range of token IDs.</td>
<td>Integer, e.g., <code>50265</code>.</td>
</tr>
<tr>
<td><code>activation_function</code></td>
<td>Activation function used in feedforward layers.</td>
<td>String: <code>relu</code>, <code>gelu</code>, <code>tanh</code>, etc.</td>
</tr>
<tr>
<td><code>dropout</code></td>
<td>Dropout probability applied to various layers.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>, typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>attention_dropout</code></td>
<td>Dropout probability in the attention mechanism.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>, typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>init_std</code></td>
<td>Standard deviation for weight initialization.</td>
<td>Float, e.g., <code>0.02</code>.</td>
</tr>
<tr>
<td><code>encoder_ffn_dim</code></td>
<td>Dimensionality of the encoder feedforward layers.</td>
<td>Integer, e.g., <code>3072</code>.</td>
</tr>
<tr>
<td><code>decoder_ffn_dim</code></td>
<td>Dimensionality of the decoder feedforward layers.</td>
<td>Integer, e.g., <code>3072</code>.</td>
</tr>
<tr>
<td><code>scale_embedding</code></td>
<td>Whether to scale the embeddings by <code>sqrt(d_model)</code>.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>use_cache</code></td>
<td>Whether to use cached key&#x2F;values for faster decoding.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>pad_token_id</code></td>
<td>Token ID used for padding.</td>
<td>Integer, typically <code>0</code>.</td>
</tr>
<tr>
<td><code>bos_token_id</code></td>
<td>Token ID for the beginning-of-sequence token.</td>
<td>Integer, typically <code>0</code>.</td>
</tr>
<tr>
<td><code>eos_token_id</code></td>
<td>Token ID for the end-of-sequence token.</td>
<td>Integer, typically <code>2</code>.</td>
</tr>
</tbody></table>
<h2 id="Summary-of-parameter-impact"><a href="#Summary-of-parameter-impact" class="headerlink" title="Summary of parameter impact"></a>Summary of parameter impact</h2><h3 id="How-Changes-Reflect-on-Model-Behavior"><a href="#How-Changes-Reflect-on-Model-Behavior" class="headerlink" title="How Changes Reflect on Model Behavior:"></a>How Changes Reflect on Model Behavior:</h3><ol>
<li><p><strong>Model Complexity:</strong></p>
<ul>
<li>Increasing <code>encoder_layers</code>, <code>decoder_layers</code>, <code>d_model</code>, or attention heads enhances model capacity but increases computational requirements.</li>
</ul>
</li>
<li><p><strong>Regularization:</strong></p>
<ul>
<li>Dropout parameters (<code>dropout</code>, <code>attention_dropout</code>) control overfitting risks but may reduce performance if too high.</li>
</ul>
</li>
<li><p><strong>Encoder-Decoder interactions:</strong></p>
<ul>
<li><code>encoder_ffn_dim</code> and <code>decoder_ffn_dim</code> directly influence the learning ability of the model for complex patterns.</li>
</ul>
</li>
<li><p><strong>Efficiency:</strong></p>
<ul>
<li>Enabling <code>use_cache</code> improves inference time for autoregressive tasks.</li>
</ul>
</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li>Paper: BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension<ul>
<li><a href="https://arxiv.org/pdf/1910.13461">Read on arxiv.org</a></li>
<li>DOI:10.48550&#x2F;arXiv.1910.13461</li>
</ul>
</li>
<li>Paper: Improving Sharpness-Aware Minimization with Fisher Mask for Better Generalization on Language Models<ul>
<li>DOI:10.48550&#x2F;arXiv.2210.05497</li>
<li><a href="https://arxiv.org/pdf/2210.05497">Read on arxiv.org</a></li>
</ul>
</li>
<li><a href="https://huggingface.co/docs/transformers/model_doc/bart">Hugging Face BART Documentation</a></li>
<li>Web article: <a href="https://medium.com/@nadirapovey/bart-model-architecture-8ac1cea0e877">BART Model Architecture | Medium</a></li>
<li>Web article: <a href="https://www.projectpro.io/article/transformers-bart-model-explained/553">Transformers BART Model Explained for Text Summarization | projectpro.io</a></li>
<li>Google colab notebook: <a href="https://colab.research.google.com/drive/1Cy27V-7qqYatqMA7fEqG2kgMySZXw9I4?usp=sharing&pli=1">BART Learns to Rap - Medium.ipynb</a></li>
</ul>
<h2 id="Challenges-and-reports-on-configuration"><a href="#Challenges-and-reports-on-configuration" class="headerlink" title="Challenges and reports on configuration"></a>Challenges and reports on configuration</h2><ul>
<li><p><strong>Report:</strong> </p>
<ul>
<li>Paper: Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer. Raffel et al., 2020.<ul>
<li>DOI: 10.48550&#x2F;arXiv.1910.10683</li>
<li><a href="https://arxiv.org/pdf/1910.10683">Read on arxiv.org</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Challenges:</strong> Balancing fine-tuning for generative and discriminative tasks in sequence-to-sequence models.</p>
<ul>
<li>Paper: Unified Generative and Discriminative Training for Multi-modal Large Language Models<ul>
<li><a href="https://arxiv.org/html/2411.00304v1">Read on arxiv.org</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Playgrounds-to-experiment"><a href="#Playgrounds-to-experiment" class="headerlink" title="Playgrounds to experiment"></a>Playgrounds to experiment</h2><ul>
<li><strong>Hugging Face Spaces:</strong> <a href="https://huggingface.co/spaces">https://huggingface.co/spaces</a></li>
<li><strong>Google Colab with Transformers:</strong> <a href="https://colab.research.google.com/">https://colab.research.google.com/</a></li>
<li><strong>OpenAI Playground for Generative Tasks:</strong> <a href="https://platform.openai.com/playground">https://platform.openai.com/playground</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>LLM</tag>
        <tag>BART</tag>
      </tags>
  </entry>
  <entry>
    <title>BERT configuration parameters overview</title>
    <url>/hexo-blog/2024/12/04/post_ai_llm__bert_configuration_parameters_overview/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="This-post-related-to-1-Techniques-for-Handling-Context-in-AI-Models2-GPT2-configuration-parameters-overview3-BART-configuration-parameters-overview"><a href="#This-post-related-to-1-Techniques-for-Handling-Context-in-AI-Models2-GPT2-configuration-parameters-overview3-BART-configuration-parameters-overview" class="headerlink" title="This post related to:1. Techniques for Handling Context in AI Models2. GPT2 configuration parameters overview3. BART configuration parameters overview"></a><em>This post related to:</em><br>1. <a href="../../../../post_ai_llm__techniques_for_handling_context_in_ai_models">Techniques for Handling Context in AI Models</a><br>2. <a href="../../../../post_ai_llm__gpt2_configuration_parameters_overview">GPT2 configuration parameters overview</a><br>3. <a href="../../../../post_ai_llm__bart_configuration_parameters_overview">BART configuration parameters overview</a></h2><h2 id="Parameters-list-and-descriptions"><a href="#Parameters-list-and-descriptions" class="headerlink" title="Parameters list and descriptions"></a>Parameters list and descriptions</h2><table>
<thead>
<tr>
<th><strong>Parameter</strong></th>
<th><strong>Description</strong></th>
<th><strong>Data Type&#x2F;Options</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>hidden_size</code></td>
<td>Dimensionality of the hidden states and embeddings.</td>
<td>Integer, e.g., <code>768</code>, <code>1024</code>.</td>
</tr>
<tr>
<td><code>num_hidden_layers</code></td>
<td>Number of hidden layers in the transformer encoder.</td>
<td>Integer, e.g., <code>12</code>, <code>24</code>.</td>
</tr>
<tr>
<td><code>num_attention_heads</code></td>
<td>Number of attention heads per transformer layer.</td>
<td>Integer, typically a divisor of <code>hidden_size</code>.</td>
</tr>
<tr>
<td><code>vocab_size</code></td>
<td>Vocabulary size of the tokenizer. Represents the range of token IDs.</td>
<td>Integer, e.g., <code>30522</code>.</td>
</tr>
<tr>
<td><code>intermediate_size</code></td>
<td>Dimensionality of the feedforward layers.</td>
<td>Integer, e.g., <code>3072</code>.</td>
</tr>
<tr>
<td><code>hidden_dropout_prob</code></td>
<td>Dropout probability for fully connected layers in the encoder.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>, typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>attention_probs_dropout_prob</code></td>
<td>Dropout probability in the attention mechanism.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>, typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>max_position_embeddings</code></td>
<td>Maximum number of positions for input tokens.</td>
<td>Integer, e.g., <code>512</code>.</td>
</tr>
<tr>
<td><code>type_vocab_size</code></td>
<td>Size of the token type vocabulary for segment embeddings.</td>
<td>Integer, typically <code>2</code>.</td>
</tr>
<tr>
<td><code>initializer_range</code></td>
<td>Standard deviation for weight initialization.</td>
<td>Float, e.g., <code>0.02</code>.</td>
</tr>
<tr>
<td><code>layer_norm_eps</code></td>
<td>A small value added for numerical stability in layer normalization.</td>
<td>Float, typically <code>1e-5</code>.</td>
</tr>
<tr>
<td><code>output_hidden_states</code></td>
<td>Whether to output all hidden states from each layer.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>output_attentions</code></td>
<td>Whether to output the attention weights.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
</tbody></table>
<h2 id="Summary-of-parameter-impact"><a href="#Summary-of-parameter-impact" class="headerlink" title="Summary of parameter impact"></a>Summary of parameter impact</h2><h3 id="How-changes-reflect-on-model-behavior"><a href="#How-changes-reflect-on-model-behavior" class="headerlink" title="How changes reflect on model behavior:"></a>How changes reflect on model behavior:</h3><ol>
<li><p><strong>Capacity:</strong></p>
<ul>
<li>Increasing <code>hidden_size</code>, <code>num_hidden_layers</code>, or <code>num_attention_heads</code> allows the model to capture more complex patterns but increases resource usage.</li>
</ul>
</li>
<li><p><strong>Regularization:</strong></p>
<ul>
<li>Dropout probabilities (<code>hidden_dropout_prob</code>, <code>attention_probs_dropout_prob</code>) control overfitting risks but can hinder learning if set too high.</li>
</ul>
</li>
<li><p><strong>Pretraining vs. Fine-tuning:</strong></p>
<ul>
<li><code>type_vocab_size</code> is essential for tasks requiring segment embeddings (e.g., sentence pairs).</li>
</ul>
</li>
<li><p><strong>Stability and Efficiency:</strong></p>
<ul>
<li><code>layer_norm_eps</code> ensures stable training, while <code>initializer_range</code> affects convergence.</li>
</ul>
</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li>Paper</li>
<li>BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</li>
<li>DOI: 10.48550&#x2F;arXiv.1810.04805</li>
<li><a href="https://arxiv.org/abs/1810.04805">Read on </a></li>
<li><a href="https://huggingface.co/docs/transformers/model_doc/bert">Hugging Face BERT Documentation</a></li>
</ul>
<h2 id="Challenges-and-reports-on-configuration"><a href="#Challenges-and-reports-on-configuration" class="headerlink" title="Challenges and reports on configuration"></a>Challenges and reports on configuration</h2><ul>
<li><strong>Report:</strong> “On the Structural Properties of BERT Models” (Kovaleva et al., 2019).</li>
<li><strong>Challenges:</strong> Over-parameterization and inefficiency in fine-tuning for domain-specific tasks.</li>
</ul>
<h2 id="Playgrounds-to-experiment"><a href="#Playgrounds-to-experiment" class="headerlink" title="Playgrounds to experiment"></a>Playgrounds to experiment</h2><ul>
<li><strong>Hugging Face Spaces:</strong> <a href="https://huggingface.co/spaces">https://huggingface.co/spaces</a></li>
<li><strong>Google Colab with Transformers:</strong> <a href="https://colab.research.google.com/">https://colab.research.google.com/</a></li>
<li><strong>OpenAI Playground for Text Understanding:</strong> <a href="https://platform.openai.com/playground">https://platform.openai.com/playground</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>LLM</tag>
        <tag>BERT</tag>
      </tags>
  </entry>
  <entry>
    <title>GPT-2 configuration parameters overview</title>
    <url>/hexo-blog/2024/12/04/post_ai_llm__gpt2_configuration_parameters_overview/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>This post related to:</em></p>
<ol>
<li><a href="../../../../post_ai_llm__techniques_for_handling_context_in_ai_models">Techniques for Handling Context in AI Models</a></li>
<li><a href="../../../../post_ai_llm__bart_configuration_parameters_overview">BART configuration parameters overview</a></li>
</ol>
<hr>
<h2 id="Parameters-List-and-Descriptions"><a href="#Parameters-List-and-Descriptions" class="headerlink" title="Parameters List and Descriptions"></a>Parameters List and Descriptions</h2><table>
<thead>
<tr>
<th><strong>Parameter</strong></th>
<th><strong>Description</strong></th>
<th><strong>Data Type&#x2F;Options</strong></th>
</tr>
</thead>
<tbody><tr>
<td><code>n_ctx</code></td>
<td>The context size or maximum length of input tokens the model can process.</td>
<td>Integer, e.g., <code>1024</code>, <code>2048</code>.</td>
</tr>
<tr>
<td><code>n_embd</code></td>
<td>Dimensionality of the embeddings. Determines the size of the word and positional embeddings.</td>
<td>Integer, typically <code>768</code>, <code>1024</code>, or <code>1280</code>.</td>
</tr>
<tr>
<td><code>n_layer</code></td>
<td>Number of transformer layers in the model. Dictates depth of the network.</td>
<td>Integer, e.g., <code>12</code>, <code>24</code>, <code>48</code>.</td>
</tr>
<tr>
<td><code>n_head</code></td>
<td>Number of attention heads in each transformer layer. Reflects parallel attention mechanisms.</td>
<td>Integer, typically a divisor of <code>n_embd</code> such as <code>12</code> or <code>16</code>.</td>
</tr>
<tr>
<td><code>vocab_size</code></td>
<td>Size of the vocabulary for the tokenizer. Represents the range of token IDs the model can handle.</td>
<td>Integer, e.g., <code>50257</code>.</td>
</tr>
<tr>
<td><code>activation_function</code></td>
<td>The activation function used in feedforward layers (e.g., “gelu”). Affects non-linearity.</td>
<td>String: <code>relu</code>, <code>gelu</code>, <code>tanh</code>, <code>sigmoid</code>, etc.</td>
</tr>
<tr>
<td><code>resid_pdrop</code></td>
<td>Dropout probability for residual connections. Adds regularization.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>. Typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>embd_pdrop</code></td>
<td>Dropout probability for embeddings. Helps prevent overfitting.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>. Typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>attn_pdrop</code></td>
<td>Dropout probability in the attention mechanism. Ensures robustness.</td>
<td>Float between <code>0.0</code> and <code>1.0</code>. Typically <code>0.1</code>.</td>
</tr>
<tr>
<td><code>initializer_range</code></td>
<td>The range of the uniform distribution for weight initialization.</td>
<td>Float, e.g., <code>0.02</code>.</td>
</tr>
<tr>
<td><code>layer_norm_epsilon</code></td>
<td>A small value added for numerical stability in layer normalization.</td>
<td>Float, typically <code>1e-5</code>.</td>
</tr>
<tr>
<td><code>use_cache</code></td>
<td>Whether the model uses cached key&#x2F;values for faster generation during inference.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>bos_token_id</code></td>
<td>Token ID for the beginning-of-sequence token.</td>
<td>Integer, e.g., <code>50256</code>.</td>
</tr>
<tr>
<td><code>eos_token_id</code></td>
<td>Token ID for the end-of-sequence token.</td>
<td>Integer, e.g., <code>50256</code>.</td>
</tr>
<tr>
<td><code>scale_attn_weights</code></td>
<td>Whether to scale the attention weights.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>output_hidden_states</code></td>
<td>Whether to return all hidden states from each layer during inference.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>output_attentions</code></td>
<td>Whether to return the attention weights during inference.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
<tr>
<td><code>tie_word_embeddings</code></td>
<td>Whether to tie the input and output word embeddings.</td>
<td>Boolean, <code>true</code> or <code>false</code>.</td>
</tr>
</tbody></table>
<hr>
<h2 id="Summary-of-Parameter-Impact"><a href="#Summary-of-Parameter-Impact" class="headerlink" title="Summary of Parameter Impact"></a>Summary of Parameter Impact</h2><h3 id="How-changes-reflect-on-model-behavior"><a href="#How-changes-reflect-on-model-behavior" class="headerlink" title="How changes reflect on model behavior:"></a>How changes reflect on model behavior:</h3><ol>
<li><p><strong>Model Size and Computation:</strong></p>
<ul>
<li>Increasing <code>n_layer</code>, <code>n_embd</code>, or <code>n_head</code> leads to larger and more computationally intensive models but potentially improves learning capacity.</li>
<li>Reducing <code>n_ctx</code> limits the model’s ability to process long inputs.</li>
</ul>
</li>
<li><p><strong>Regularization:</strong></p>
<ul>
<li>Dropout parameters (<code>resid_pdrop</code>, <code>embd_pdrop</code>, <code>attn_pdrop</code>) mitigate overfitting but may hinder performance if too high.</li>
</ul>
</li>
<li><p><strong>Non-linearity:</strong></p>
<ul>
<li>The choice of <code>activation_function</code> (e.g., <code>gelu</code> vs. <code>relu</code>) affects gradient behavior and optimization efficiency.</li>
</ul>
</li>
<li><p><strong>Stability:</strong></p>
<ul>
<li>Small <code>layer_norm_epsilon</code> values ensure numerical stability during normalization but may require tuning based on the architecture.</li>
</ul>
</li>
<li><p><strong>Flexibility:</strong></p>
<ul>
<li>Enabling <code>output_hidden_states</code> or <code>output_attentions</code> increases interpretability but may slow inference.</li>
</ul>
</li>
</ol>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://cdn.openai.com/better-language-models/language_models_are_unsupervised_multitask_learners.pdf">GPT-2 Paper</a></li>
<li><a href="https://huggingface.co/docs/transformers/model_doc/gpt2">Hugging Face Documentation</a></li>
</ul>
<hr>
<h2 id="Challenges-and-reports-on-configuration"><a href="#Challenges-and-reports-on-configuration" class="headerlink" title="Challenges and reports on configuration"></a>Challenges and reports on configuration</h2><ul>
<li><strong>Report:</strong> “Language Models are Few-Shot Learners” (Brown et al., 2020) discusses scalability challenges in transformer-based architectures.</li>
<li><strong>Challenges:</strong> Balancing model depth and breadth while maintaining computational efficiency.</li>
</ul>
<hr>
<h2 id="Playgrounds-to-experiment"><a href="#Playgrounds-to-experiment" class="headerlink" title="Playgrounds to experiment"></a>Playgrounds to experiment</h2><ul>
<li><strong>OpenAI Playground:</strong> <a href="https://platform.openai.com/playground">https://platform.openai.com/playground</a></li>
<li><strong>Hugging Face Spaces:</strong> <a href="https://huggingface.co/spaces">https://huggingface.co/spaces</a></li>
<li><strong>Google Colab with Transformers:</strong> <a href="https://colab.research.google.com/">https://colab.research.google.com/</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>LLM</tag>
        <tag>GPT2</tag>
      </tags>
  </entry>
  <entry>
    <title>AI - Machine Learning + emotions</title>
    <url>/hexo-blog/2024/11/21/post_ai_ml__emotions/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><p>Paper: <em>InstructERC: Reforming Emotion Recognition in Conversation with a Multi-task Retrieval-based LLMs Framework</em></p>
<ul>
<li>DOI:10.48550&#x2F;arXiv.2406.18088</li>
<li><a href="https://openreview.net/pdf/2c4c4157e9917665bbf110ffb8a87c3eba3ebed4.pdf">Read on openreview.net</a></li>
</ul>
</li>
<li><p>Paper: <em>InstructERC: Reforming Emotion Recognition in Conversation with Multi-task Retrieval-Augmented Large Language Models, 2024</em></p>
<ul>
<li>DOI: 10.48550&#x2F;arXiv.2309.11911</li>
<li><a href="https://arxiv.org/pdf/2309.11911">Read on arxiv.org</a></li>
</ul>
</li>
</ol>
<hr>
<h2 id="Other-resources-papers-books"><a href="#Other-resources-papers-books" class="headerlink" title="Other resources&#x2F;papers&#x2F;books"></a>Other resources&#x2F;papers&#x2F;books</h2><ol>
<li><p>Book: <em>Zinker J. Creative process in gestalt therapy. Vintage books. Random House, 1978</em></p>
</li>
<li><p>Book: <em>The Expressions of the Emotions in Man and Animals. Darwin. 1872</em></p>
<ul>
<li><a href="https://darwin-online.org.uk/content/frameset?viewtype=text&itemID=F1142&pageseq=1">Read book on darwin-online.org.uk</a></li>
<li><a href="https://archive.org/details/expressionofemot1872darw/">✰✰✰✰✰ Read book on archive.org </a></li>
<li><a href="https://web.seducoahuila.gob.mx/biblioweb/upload/the_expression_of_the_emotions_in_man_and_animals.pdf">✰ Read book on web.seducoahuila.gob.mx</a></li>
</ul>
</li>
<li><p>Paper: PyPlutchik: Visualising and comparing emotion-annotated corpora. 2021.</p>
<ul>
<li>DOI:10.1371&#x2F;journal.pone.0256503</li>
<li><a href="https://www.researchgate.net/publication/354295491_PyPlutchik_Visualising_and_comparing_emotion-annotated_corpora">✰✰✰✰✰ Read on researchgate.net</a><img src="/hexo-blog/images/plutchik_s_wheel_of_emotions.jpg" alt="Plutchik's wheel of emotions" title="Plutchik's wheel of emotions" href = "https://en.wikipedia.org/wiki/Robert_Plutchik#/media/File:Plutchik-wheel.svg" style="width: 20%; max-width: 1000px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ul>
</li>
<li><p>Paper: <em>The Feeling Wheel.Willcox,G.(1982).Transactional Analysis Journal, 12(4), 274–276.</em></p>
<ul>
<li>DOI:10.1177&#x2F;036215378201200411</li>
<li><a href="https://sci-hub.se/10.1177/036215378201200411">Read on sc-hub.se</a><img src="/hexo-blog/images/feeling_wheel_willcox_g_1982.jpg" alt="The Feeling Wheel.Willcox,G.(1982).Transactional Analysis Journal, 12(4), 274–276." title="The Feeling Wheel.Willcox,G.(1982).Transactional Analysis Journal, 12(4), 274–276." style="width: 40%; max-width: 1300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ul>
 <img src="/hexo-blog/images/feeling_wheel_willcox_g_1982_ru.jpg" alt="The Feeling Wheel.Willcox,G _ru" title="The Feeling Wheel.Willcox,G _ru" style="width: 20%; max-width: 1000px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>emotions</tag>
      </tags>
  </entry>
  <entry>
    <title>Techniques for Handling Context in AI Models</title>
    <url>/hexo-blog//techniques-for-handling-context-in-ai-models/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Large Language Models (LLMs) often face challenges with long contexts due to token limitations or memory constraints. To address this, researchers and engineers have developed various techniques and tools to enhance context management. Below is a detailed list of techniques and associated tools.</p>
<h2 id="Techniques"><a href="#Techniques" class="headerlink" title="Techniques"></a>Techniques</h2><h3 id="1-Windowing-Sliding-Window-Technique"><a href="#1-Windowing-Sliding-Window-Technique" class="headerlink" title="1. Windowing (Sliding Window Technique)"></a>1. Windowing (Sliding Window Technique)</h3><ul>
<li><strong>Title</strong>: Training RNN and it’s Variants Using Sliding Window Technique. 2020</li>
<li><strong>DOI</strong>: 10.1109&#x2F;SCEECS48394.2020.93</li>
<li><a href="https://sci-hub.se/https://doi.org/10.1109/SCEECS48394.2020.93">Read on sci-hub.se</a></li>
</ul>
<hr>
<h3 id="2-Chunking-and-Overlapping-Contexts"><a href="#2-Chunking-and-Overlapping-Contexts" class="headerlink" title="2. Chunking and Overlapping Contexts"></a>2. Chunking and Overlapping Contexts</h3><ul>
<li><strong>Title</strong>: Hierarchical Attention Networks for Document Classification  </li>
<li><strong>DOI</strong>: 10.18653&#x2F;v1&#x2F;N16-1174 </li>
<li><a href="https://aclanthology.org/N16-1174.pdf">Read on aclanthology.org</a></li>
</ul>
<hr>
<h3 id="3-Hierarchical-Context-Representations"><a href="#3-Hierarchical-Context-Representations" class="headerlink" title="3. Hierarchical Context Representations"></a>3. Hierarchical Context Representations</h3><ul>
<li><strong>Title</strong>: Hierarchical Learning for Generation with Long Source Sequences. 2021 </li>
<li><strong>DOI</strong>: 10.48550&#x2F;arXiv.2104.07545</li>
<li><a href="https://arxiv.org/pdf/2104.07545">Read on arxiv.org</a></li>
</ul>
<hr>
<h3 id="4-Memory-Augmented-Neural-Networks-MANNs"><a href="#4-Memory-Augmented-Neural-Networks-MANNs" class="headerlink" title="4. Memory-Augmented Neural Networks (MANNs)"></a>4. Memory-Augmented Neural Networks (MANNs)</h3><ul>
<li><strong>Title</strong>: One-shot Learning with Memory-Augmented Neural Networks. 2016  </li>
<li><strong>DOI</strong>: <a href="https://doi.org/10.48550/arXiv.1605.06065">10.48550&#x2F;arXiv.1605.06065</a></li>
</ul>
<hr>
<h3 id="5-Transformer-Variants-for-Long-Contexts"><a href="#5-Transformer-Variants-for-Long-Contexts" class="headerlink" title="5. Transformer Variants for Long Contexts"></a>5. Transformer Variants for Long Contexts</h3><h4 id="Longformer"><a href="#Longformer" class="headerlink" title="Longformer"></a>Longformer</h4><ul>
<li><strong>Title</strong>: Longformer: The Long-Document Transformer. 2020  </li>
<li><strong>DOI</strong>: <a href="https://doi.org/10.48550/arXiv.2004.05150">10.48550&#x2F;arXiv.2004.05150</a></li>
</ul>
<h4 id="Reformer"><a href="#Reformer" class="headerlink" title="Reformer"></a>Reformer</h4><ul>
<li><strong>Title</strong>: Reformer: The Efficient Transformer. 2020    </li>
<li><strong>DOI</strong>: <a href="https://doi.org/10.48550/arXiv.2001.04451">10.48550&#x2F;arXiv.2001.04451</a></li>
</ul>
<hr>
<h3 id="6-Compression-Based-Context-Management-Summarization"><a href="#6-Compression-Based-Context-Management-Summarization" class="headerlink" title="6. Compression-Based Context Management (Summarization)"></a>6. Compression-Based Context Management (Summarization)</h3><ul>
<li><strong>Title</strong>: Efficient Adaptation of Pretrained Transformers for Abstractive Summarization. 2019 </li>
<li><strong>DOI</strong>: 10.48550&#x2F;arXiv.1906.00138</li>
<li><a href="https://arxiv.org/pdf/1906.00138">Read on arxiv.org</a></li>
</ul>
<hr>
<h3 id="7-Causal-Attention-Mechanisms"><a href="#7-Causal-Attention-Mechanisms" class="headerlink" title="7. Causal Attention Mechanisms"></a>7. Causal Attention Mechanisms</h3><ul>
<li><strong>Title</strong>: Attention Is All You Need. 2017  </li>
<li><strong>DOI</strong>: arXiv.1706.03762</li>
<li><a href="https://arxiv.org/pdf/1706.03762">Read on arxiv.org</a></li>
</ul>
<hr>
<h3 id="8-Vector-Based-Semantic-Search-Dense-Vector-Representations"><a href="#8-Vector-Based-Semantic-Search-Dense-Vector-Representations" class="headerlink" title="8. Vector-Based Semantic Search (Dense Vector Representations)"></a>8. Vector-Based Semantic Search (Dense Vector Representations)</h3><ul>
<li><strong>Title</strong>: Sentence-BERT: Sentence Embeddings Using Siamese Networks .2019  </li>
<li><strong>DOI</strong>: 10.48550&#x2F;arXiv.1908.10084</li>
<li><a href="https://arxiv.org/pdf/1908.10084">Read on arxiv.org</a></li>
</ul>
<hr>
<h3 id="9-Retrieval-Augmented-Generation-RAG"><a href="#9-Retrieval-Augmented-Generation-RAG" class="headerlink" title="9. Retrieval-Augmented Generation (RAG)"></a>9. Retrieval-Augmented Generation (RAG)</h3><ul>
<li><strong>Title</strong>: Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks. 2020   </li>
<li><strong>DOI</strong>: 10.48550&#x2F;arXiv.2005.11401</li>
<li><a href="https://arxiv.org/pdf/2005.11401">Read on arxiv.org</a></li>
</ul>
<hr>
<h3 id="10-Cache-Augmented-Models-for-Recurrent-Usage"><a href="#10-Cache-Augmented-Models-for-Recurrent-Usage" class="headerlink" title="10. Cache Augmented Models for Recurrent Usage"></a>10. Cache Augmented Models for Recurrent Usage</h3><ul>
<li><strong>Title</strong>: RAGCache: Efficient Knowledge Caching for Retrieval-Augmented Generation. 2024  </li>
<li><strong>DOI</strong>: 10.48550&#x2F;arXiv.2404.12457</li>
<li><a href="https://arxiv.org/pdf/2404.12457">Read on arxiv.org</a></li>
</ul>
<hr>
<h2 id="Tools-and-Frameworks"><a href="#Tools-and-Frameworks" class="headerlink" title="Tools and Frameworks"></a>Tools and Frameworks</h2><h3 id="1-Pinecone"><a href="#1-Pinecone" class="headerlink" title="1. Pinecone"></a>1. <a href="https://www.pinecone.io/">Pinecone</a></h3><ul>
<li>Provides vector-based memory and semantic search capabilities.</li>
</ul>
<h3 id="2-LangChain"><a href="#2-LangChain" class="headerlink" title="2. LangChain"></a>2. <a href="https://www.langchain.com/">LangChain</a></h3><ul>
<li>Handles chunking, memory management, and retrieval tasks for LLMs.</li>
</ul>
<h3 id="3-FAISS-Facebook-AI-Similarity-Search"><a href="#3-FAISS-Facebook-AI-Similarity-Search" class="headerlink" title="3. FAISS (Facebook AI Similarity Search)"></a>3. <a href="https://faiss.ai/">FAISS (Facebook AI Similarity Search)</a></h3><ul>
<li>Optimized for efficient similarity search on dense vectors.</li>
</ul>
<h3 id="4-Weaviate"><a href="#4-Weaviate" class="headerlink" title="4. Weaviate"></a>4. <a href="https://weaviate.io/">Weaviate</a></h3><ul>
<li>Offers scalable vector search and knowledge graph integrations.</li>
</ul>
<h3 id="5-Hugging-Face’s-Transformers"><a href="#5-Hugging-Face’s-Transformers" class="headerlink" title="5. Hugging Face’s Transformers"></a>5. <a href="https://huggingface.co/transformers/">Hugging Face’s Transformers</a></h3><ul>
<li>Implements state-of-the-art transformer models like Longformer and Reformer.</li>
</ul>
<h3 id="6-OpenAI-Embeddings"><a href="#6-OpenAI-Embeddings" class="headerlink" title="6. OpenAI Embeddings"></a>6. <a href="https://platform.openai.com/docs/guides/embeddings/">OpenAI Embeddings</a></h3><ul>
<li>Provides embeddings for vector search and semantic tasks.</li>
</ul>
<h3 id="7-Redis-Vector-Store"><a href="#7-Redis-Vector-Store" class="headerlink" title="7. Redis Vector Store"></a>7. <a href="https://redis.io/docs/stack/search/">Redis Vector Store</a></h3><ul>
<li>Lightweight memory storage for vectorized data.</li>
</ul>
<h3 id="8-GPT-Index-LlamaIndex"><a href="#8-GPT-Index-LlamaIndex" class="headerlink" title="8. GPT Index (LlamaIndex)"></a>8. <a href="https://gpt-index.readthedocs.io/">GPT Index (LlamaIndex)</a></h3><ul>
<li>Automates document splitting, chunking, and embedding management for LLMs.</li>
</ul>
<h3 id="9-Haystack"><a href="#9-Haystack" class="headerlink" title="9. Haystack"></a>9. <a href="https://haystack.deepset.ai/">Haystack</a></h3><ul>
<li>An open-source framework for retrieval-augmented generation (RAG).</li>
</ul>
<h3 id="10-MemGPT"><a href="#10-MemGPT" class="headerlink" title="10. MemGPT"></a>10. <a href="https://memgpt.ai/">MemGPT</a></h3><ul>
<li>Enhances memory for multi-session GPT-based interactions.</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>science</tag>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>prompt_engineering</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Fine-tuning vs. Feature-based Approaches</title>
    <url>/hexo-blog/2024/11/21/post_ai_ml__finetuning_vs_feature_based_approaches/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Fine-tuning and feature-based approaches are two common techniques in transfer learning, a machine learning method where a pre-trained model is reused as a starting point for a new task.</p>
<p><strong>Fine-tuning</strong> involves adjusting the weights of a pre-trained model on a new dataset. This method is more computationally intensive but can lead to better performance, especially when the new task is similar to the original task.</p>
<p><strong>Feature-based</strong> approaches, on the other hand, extract features from a pre-trained model and use them as input for a new model. This method is less computationally intensive and can be effective when the new task is different from the original task.</p>
<p><strong>Key Differences:</strong></p>
<table>
<thead>
<tr>
<th>Feature</th>
<th>Fine-tuning</th>
<th>Feature-based</th>
</tr>
</thead>
<tbody><tr>
<td>Model Modification</td>
<td>Adjusts weights of pre-trained model</td>
<td>Extracts features, trains new model</td>
</tr>
<tr>
<td>Computational Cost</td>
<td>Higher</td>
<td>Lower</td>
</tr>
<tr>
<td>Task Similarity</td>
<td>Best for similar tasks</td>
<td>Can be used for diverse tasks</td>
</tr>
<tr>
<td>Data Requirements</td>
<td>More data needed</td>
<td>Less data needed</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>LLM system prompts</title>
    <url>/hexo-blog//ai_ml_llm_system_prompts/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="LLM-System-Prompt-Generator"><a href="#LLM-System-Prompt-Generator" class="headerlink" title="LLM System Prompt Generator"></a>LLM System Prompt Generator</h1><h2 id="💡-Creative-Idea-Generator-—-AI-powered-brainstorming-tool-for-generating-creative-solutions-and-ideas"><a href="#💡-Creative-Idea-Generator-—-AI-powered-brainstorming-tool-for-generating-creative-solutions-and-ideas" class="headerlink" title="💡 Creative Idea Generator — AI-powered brainstorming tool for generating creative solutions and ideas"></a>💡 <a href="https://chatgpt.com/g/g-zucYjaMne-creative-answers-brainstorm-gpt">Creative Idea Generator</a> — AI-powered brainstorming tool for generating creative solutions and ideas</h2><hr>
<h2 id="🤖-ChatGPT-LLM-System-Prompt-Generator-—-Generate-optimized-system-prompts-for-different-LLM-model-sizes-3B-33B-70B-etc"><a href="#🤖-ChatGPT-LLM-System-Prompt-Generator-—-Generate-optimized-system-prompts-for-different-LLM-model-sizes-3B-33B-70B-etc" class="headerlink" title="🤖 ChatGPT: LLM System Prompt Generator — Generate optimized system prompts for different LLM model sizes (3B, 33B, 70B, etc.)"></a>🤖 <a href="https://chatgpt.com/g/g-8qIKJ1ORT-system-prompt-generator">ChatGPT: LLM System Prompt Generator</a> — Generate optimized system prompts for different LLM model sizes (3B, 33B, 70B, etc.)</h2><h3 id="CORE-FEATURES"><a href="#CORE-FEATURES" class="headerlink" title="CORE FEATURES"></a><strong>CORE FEATURES</strong></h3><ol>
<li><p><strong>CUSTOMIZED PROMPT ENGINEERING</strong>:<br>Specializes in crafting highly optimized prompts tailored to transform language models into expert agents for specific domains and tasks.</p>
</li>
<li><p><strong>CHAIN OF THOUGHT (CoT) IMPLEMENTATION</strong>:<br>Embeds a step-by-step reasoning process into prompts, ensuring models respond logically and systematically to complex tasks.</p>
</li>
<li><p><strong>OPTIMIZATION FOR MODEL SIZE</strong>:  </p>
<ul>
<li><strong>Small Models</strong> (e.g., 1B parameters): Simple instructions, focus on one clear task, and basic language.  </li>
<li><strong>Large Models</strong> (e.g., 100B+ parameters): Nuanced context, multi-layered tasks, and detailed guidance.</li>
</ul>
</li>
<li><p><strong>NEGATIVE PROMPTING</strong>:<br>Defines undesired behaviors explicitly to prevent the model from producing irrelevant or low-quality outputs.</p>
</li>
<li><p><strong>FEW-SHOT AND ZERO-SHOT DESIGN</strong>:  </p>
<ul>
<li><strong>Few-shot examples</strong>: Embedded for complex tasks.  </li>
<li><strong>Zero-shot examples</strong>: Designed for instant task execution without examples when tasks are straightforward.</li>
</ul>
</li>
<li><p><strong>ROBUST ERROR HANDLING</strong>:<br>Includes instructions for edge cases, ambiguities, and incomplete inputs to maintain response quality.</p>
</li>
<li><p><strong>MULTI-TASK OPTIMIZATION</strong>:<br>Adapts prompts for different tasks (e.g., classification, summarization, generation) with clear instructions and strategies.</p>
</li>
<li><p><strong>SCALABILITY</strong>:<br>Prompts are modular and scalable, working across tasks, domains, and model sizes with minimal customization.</p>
</li>
<li><p><strong>EMBEDDED DOMAIN KNOWLEDGE</strong>:<br>Integrates task-relevant technical terminology and context to enable models to act as subject matter experts.</p>
</li>
</ol>
<hr>
<h2 id="STRUCTURE"><a href="#STRUCTURE" class="headerlink" title="STRUCTURE"></a><strong>STRUCTURE</strong></h2><p>Every prompt is designed using a <strong>modular structure</strong> for clarity and effectiveness:</p>
<ol>
<li><p><strong>Role Definition</strong>:<br>Clearly defines the model’s role (e.g., “YOU ARE THE WORLD’S FOREMOST EXPERT IN…”) to set expectations for tone, expertise, and behavior.</p>
</li>
<li><p><strong>Task Instructions</strong>:<br>Provides actionable, precise instructions for the task, often broken down into smaller steps for clarity.</p>
</li>
<li><p><strong>Chain of Thoughts (CoT)</strong>:<br>Embeds a logical framework for reasoning:  </p>
<ul>
<li><strong>Understand</strong>: Read and comprehend the task.  </li>
<li><strong>Basics</strong>: Identify fundamental concepts.  </li>
<li><strong>Break Down</strong>: Divide the problem into smaller subtasks.  </li>
<li><strong>Analyze</strong>: Use facts and reasoning to address each subtask.  </li>
<li><strong>Build</strong>: Assemble the solution coherently.  </li>
<li><strong>Edge Cases</strong>: Consider and address exceptions.  </li>
<li><strong>Final Answer</strong>: Present the solution clearly.</li>
</ul>
</li>
<li><p><strong>What Not To Do Section</strong>:<br>Explicitly defines behaviors and outputs the model must avoid. Negative prompts are written in <strong>ALL CAPS</strong> to reinforce importance.</p>
</li>
<li><p><strong>Few-Shot&#x2F;Zero-Shot Examples</strong>:  </p>
<ul>
<li><strong>Few-shot</strong>: Embedded for complex tasks to guide behavior.  </li>
<li><strong>Zero-shot</strong>: Simplified for tasks where examples are unnecessary.</li>
</ul>
</li>
<li><p><strong>Error Handling Guidelines</strong>:<br>Ensures models can handle incomplete, ambiguous, or incorrect inputs.</p>
</li>
<li><p><strong>Optimization Instructions</strong>:<br>Includes suggestions to maximize accuracy, relevance, and response quality based on the task and model size.</p>
</li>
</ol>
<hr>
<h2 id="ALGORITHMS"><a href="#ALGORITHMS" class="headerlink" title="ALGORITHMS"></a><strong>ALGORITHMS</strong></h2><p>The following principles guide the chatbot for prompt engineering process:</p>
<ol>
<li><p><strong>TASK DECOMPOSITION</strong>:<br>Breaks complex tasks into smaller subtasks and uses a structured <strong>Chain of Thoughts (CoT)</strong> framework to guide step-by-step reasoning.</p>
</li>
<li><p><strong>ITERATIVE REFINEMENT</strong>:<br>Prompts are iteratively refined to balance clarity, depth, and specificity while eliminating ambiguities.</p>
</li>
<li><p><strong>MODEL-CENTRIC DESIGN</strong>:  </p>
<ul>
<li><strong>Smaller Models</strong>: Focus on simplicity and clarity.  </li>
<li><strong>Larger Models</strong>: Leverage capabilities by introducing multi-task prompts and nuanced instructions.</li>
</ul>
</li>
<li><p><strong>RELEVANCE FILTERING</strong>:<br>Ensures that only task-relevant details are included in prompts, reducing noise and improving focus.</p>
</li>
<li><p><strong>NEGATIVE PROMPT ALGORITHMS</strong>:<br>Outlines specific failure modes and structures the prompt to avoid undesired behaviors or outputs.</p>
</li>
<li><p><strong>SCALABLE TEMPLATES</strong>:<br>Prompts are built on scalable templates that can be adjusted across domains, tasks, and model sizes with ease.</p>
</li>
</ol>
<hr>
<h2 id="RULES"><a href="#RULES" class="headerlink" title="RULES"></a><strong>RULES</strong></h2><p>To ensure high-quality outputs, chatbot follow these rules:</p>
<ol>
<li><p><strong>CHAIN OF THOUGHTS IS MANDATORY</strong>:<br>Prompts must guide the model through step-by-step reasoning for complex tasks.</p>
</li>
<li><p><strong>CLEAR INSTRUCTIONS</strong>:<br>Tasks must be unambiguous, actionable, and easy to interpret.</p>
</li>
<li><p><strong>TAILOR TO MODEL SIZE</strong>:<br>Adjust complexity and instruction depth based on model capacity:  </p>
<ul>
<li><strong>Small Models</strong>: Simplified instructions.  </li>
<li><strong>Large Models</strong>: Advanced and multi-layered instructions.</li>
</ul>
</li>
<li><p><strong>INCLUDE NEGATIVE PROMPTS</strong>:<br>Define behaviors and outputs to avoid, ensuring the model remains focused and produces high-quality responses.</p>
</li>
<li><p><strong>DOMAIN KNOWLEDGE INTEGRATION</strong>:<br>For expert-level tasks, prompts must include relevant background information and context.</p>
</li>
<li><p><strong>ROBUST ERROR HANDLING</strong>:<br>Include guidance for edge cases and ambiguous inputs.</p>
</li>
<li><p><strong>NO REDUNDANCY</strong>:<br>Avoid repetitive instructions that could confuse the model.</p>
</li>
</ol>
<hr>
<h2 id="RESTRICTIONS"><a href="#RESTRICTIONS" class="headerlink" title="RESTRICTIONS"></a><strong>RESTRICTIONS</strong></h2><p>To prevent undesired behaviors, these restrictions are imposed:</p>
<ol>
<li><p><strong>NEVER ALLOW GENERIC OUTPUTS</strong>:<br>Responses must be detailed and specific. Avoid vague answers like “It depends” or “More information is needed” unless explicitly allowed.</p>
</li>
<li><p><strong>AVOID UNINFORMED RESPONSES</strong>:<br>If the model lacks knowledge, it must explicitly state limitations rather than guessing.</p>
</li>
<li><p><strong>NO CONTRADICTIONS</strong>:<br>Prompts must avoid contradictory instructions that could confuse the model.</p>
</li>
<li><p><strong>RESTRICT INACCURACIES</strong>:<br>Outputs must be factually accurate and avoid misinformation.</p>
</li>
<li><p><strong>DO NOT OVERCOMPLICATE SIMPLE TASKS</strong>:<br>Ensure simpler tasks are addressed concisely without unnecessary complexity.</p>
</li>
<li><p><strong>NO UNDEFINED JARGON</strong>:<br>Use domain-specific terminology appropriately, avoiding undefined or irrelevant jargon.</p>
</li>
<li><p><strong>NO MULTIPLE TASKS WITHOUT CLEAR SEGREGATION</strong>:<br>If multiple tasks are included, they must be clearly separated to avoid conflation.</p>
</li>
</ol>
<hr>
<h2 id="EXAMPLES"><a href="#EXAMPLES" class="headerlink" title="EXAMPLES"></a><strong>EXAMPLES</strong></h2><p>Here’s how these principles are applied in real-world scenarios:</p>
<h3 id="1-Medical-Expert-Prompt"><a href="#1-Medical-Expert-Prompt" class="headerlink" title="1. Medical Expert Prompt"></a><strong>1. Medical Expert Prompt</strong></h3><pre><code class="plaintext">YOU ARE A BOARD-CERTIFIED MEDICAL EXPERT WITH 15 YEARS OF EXPERIENCE IN DIAGNOSING AND TREATING COMPLEX CONDITIONS...

### Instructions ###
- Provide evidence-based answers...
- Reference guidelines such as the CDC and WHO...
- Use concise, professional medical terminology...

### Chain of Thoughts ###
1. Understand the condition...
2. Consider symptoms...
3. Suggest diagnostic tests...
4. Propose evidence-based treatments...
...
</code></pre>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning.Teach by Doing(LinkedIn post)</title>
    <url>/hexo-blog/2024/11/30/post_ai_ml__machine_learning_teach_by_doing/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>This is reopst of LinkedIN post. Current post contains list of references and some additional detilas</em></p>
<p>I(Author) started the Machine Learning: Teach by Doing series to transfer my learnings to those who want to transition to Machine Learning.</p>
<p>I(Author) have recorded 37 videos in the past 6 months.</p>
<p>Here are the links for you to learn:</p>
<ol>
<li>Introduction to Machine Learning Teach by Doing: <a href="https://lnkd.in/gqN2PMX5">https://lnkd.in/gqN2PMX5</a></li>
<li>What is Machine Learning? History of Machine Learning: <a href="https://lnkd.in/gvpNSAKh">https://lnkd.in/gvpNSAKh</a></li>
<li>Types of ML Models: <a href="https://lnkd.in/gSy2mChM">https://lnkd.in/gSy2mChM</a></li>
<li>6 steps of any ML project: <a href="https://lnkd.in/ggCGchPQ">https://lnkd.in/ggCGchPQ</a></li>
<li>Install Python and VSCode and run your first code: <a href="https://lnkd.in/gyic7J7b">https://lnkd.in/gyic7J7b</a></li>
<li>Linear Classifiers Part 1: <a href="https://lnkd.in/gYdfD97D">https://lnkd.in/gYdfD97D</a></li>
<li>Linear Classifiers Part 2: <a href="https://lnkd.in/gac_z-G8">https://lnkd.in/gac_z-G8</a></li>
<li>Jupyter Notebook, Numpy and Scikit-Learn: <a href="https://lnkd.in/gWRaC_tB">https://lnkd.in/gWRaC_tB</a></li>
<li>Running the Random Linear Classifier Algorithm in Python: <a href="https://lnkd.in/g5HacbFC">https://lnkd.in/g5HacbFC</a></li>
<li>The oldest ML model - Perceptron: <a href="https://lnkd.in/gpce6uFt">https://lnkd.in/gpce6uFt</a></li>
<li>Coding the Perceptron: <a href="https://lnkd.in/gmz-XjNK">https://lnkd.in/gmz-XjNK</a></li>
<li>Perceptron Convergence Theorem: <a href="https://lnkd.in/gmz-XjNK">https://lnkd.in/gmz-XjNK</a></li>
<li>Magic of features in Machine Learning: <a href="https://lnkd.in/gCeDRb3g">https://lnkd.in/gCeDRb3g</a></li>
<li>One hot encoding: <a href="https://lnkd.in/g3WfRQGQ">https://lnkd.in/g3WfRQGQ</a></li>
<li>Logistic Regression Part 1: <a href="https://lnkd.in/gTgZAAZn">https://lnkd.in/gTgZAAZn</a></li>
<li>Cross Entropy Loss: <a href="https://lnkd.in/g3Ywg_2p">https://lnkd.in/g3Ywg_2p</a></li>
<li>How gradient descent works: <a href="https://lnkd.in/gKBAsazF">https://lnkd.in/gKBAsazF</a></li>
<li>Logistic Regression from scratch in Python: <a href="https://lnkd.in/g8iZh27P">https://lnkd.in/g8iZh27P</a></li>
<li>Introduction to Regularization: <a href="https://lnkd.in/gjM9pVw2">https://lnkd.in/gjM9pVw2</a></li>
<li>Implementing Regularization in Python: <a href="https://lnkd.in/gRnSK4v4">https://lnkd.in/gRnSK4v4</a></li>
<li>Linear Regression Introduction: <a href="https://lnkd.in/gPYtSPJ9">https://lnkd.in/gPYtSPJ9</a></li>
<li>Ordinary Least Squares step by step implementation: <a href="https://lnkd.in/gnWQdgNy">https://lnkd.in/gnWQdgNy</a></li>
<li>Ridge regression fundamentals and intuition: <a href="https://lnkd.in/gE5M-CSM">https://lnkd.in/gE5M-CSM</a></li>
<li>Regression recap for interviews: <a href="https://lnkd.in/gNBWzzWv">https://lnkd.in/gNBWzzWv</a></li>
<li>Neural network architecture in 30 minutes: <a href="https://lnkd.in/g7qSrkxG">https://lnkd.in/g7qSrkxG</a></li>
<li>Backpropagation intuition: <a href="https://lnkd.in/gAmBARHm">https://lnkd.in/gAmBARHm</a></li>
<li>Neural network activation functions: <a href="https://lnkd.in/gqrC3zDP">https://lnkd.in/gqrC3zDP</a></li>
<li>Momentum in gradient descent: <a href="https://lnkd.in/g3M4qhbP">https://lnkd.in/g3M4qhbP</a></li>
<li>Hands on neural network training in Python: <a href="https://lnkd.in/gz-fTBxs">https://lnkd.in/gz-fTBxs</a></li>
<li>Introduction to Convolutional Neural Networks (CNNs.: <a href="https://lnkd.in/gpmuBm3j">https://lnkd.in/gpmuBm3j</a></li>
<li>Filters in 1D and the Convolution Operation: <a href="https://lnkd.in/gEDaKHDU">https://lnkd.in/gEDaKHDU</a></li>
<li>Filters in 2D, Channels and Feature Identification: <a href="https://lnkd.in/g3Gf_4ia">https://lnkd.in/g3Gf_4ia</a></li>
<li>Filtering Layers in Convolutional Neural Networks: <a href="https://lnkd.in/gUaiBkTu">https://lnkd.in/gUaiBkTu</a></li>
<li>What is Max Pooling in Convolutional Neural Networks?: <a href="https://lnkd.in/gGRGy6wq">https://lnkd.in/gGRGy6wq</a></li>
<li>CNN Architecture explained: <a href="https://lnkd.in/gPQvRh9i">https://lnkd.in/gPQvRh9i</a></li>
<li>Backpropagation in Convolutional Neural Networks: <a href="https://lnkd.in/g942G6zv">https://lnkd.in/g942G6zv</a></li>
<li>Build your own brain tumor classification CNN application in Python: <a href="https://lnkd.in/gQB5zRGk">https://lnkd.in/gQB5zRGk</a></li>
</ol>
<p>Join our AI live lectures waitlist here: <a href="https://lnkd.in/gDcHZdHg">https://lnkd.in/gDcHZdHg</a></p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>AI - Machine Learning frameworks</title>
    <url>/hexo-blog/2024/09/28/post_ai_ml__ml_frameworks/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>ML frameworks</p>
<p> (Example-1)</p>
<ol>
<li><p><a href="https://www.linkedin.com/feed/update/urn:li:activity:7264654540124110849">Linkedin post: Understanding Machine Learning Frameworks</a></p>
 <img src="/hexo-blog/images/machine_learning_framework_structure_ex_1.jpg" alt="Understanding Machine Learning Frameworks" title="Understanding Machine Learning Frameworks" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />

</li>
<li><p>Stanford CS229 I Machine Learning I Building Large Language Models (LLMs)</p>
<ul>
<li><a href="https://youtu.be/9vM4p9NN0Ts">YouTube video course. Duration: 1h 44 mins</a></li>
<li>This lecture provides a concise overview of building a ChatGPT-like model, covering both pretraining (language modeling) and post-training (SFT&#x2F;RLHF). For each component, it explores common practices in data collection, algorithms, and evaluation methods. This guest lecture was delivered by Yann Dubois in Stanford’s CS229: Machine Learning course, in Summer 2024.</li>
<li>For more information about Stanford’s Artificial Intelligence programs visit: <a href="https://stanford.io/ai">https://stanford.io/ai</a><img src="/hexo-blog/images/stanford_cs229_i_machine_learning_i_building_large_language_models.png" alt="AR language models" title="AR language models" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>Neural Process Family</title>
    <url>/hexo-blog/2024/11/30/post_ai_ml_npf__general/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>The <strong>Neural Process Family</strong> refers to a class of models designed to learn distributions over functions, offering a blend of the expressiveness of deep learning and the flexibility of probabilistic models. These models are particularly useful for tasks requiring uncertainty quantification, few-shot learning, and function estimation. Key members of this family include <strong>Neural Processes (NPs)</strong>, <strong>Conditional Neural Processes (CNPs)</strong>, <strong>Attentive Neural Processes (ANPs)</strong>, and extensions like <strong>ConvCNPs</strong> and <strong>Variational NPs (VNPs)</strong>.</p>
<h2 id="Core-Concepts"><a href="#Core-Concepts" class="headerlink" title="Core Concepts"></a>Core Concepts</h2><ol>
<li><p><strong>Probabilistic Nature</strong>:<br>Neural Processes learn distributions over functions. Given a set of input-output pairs, they can predict the probability distribution of outputs for new inputs, making them suitable for uncertainty estimation.</p>
</li>
<li><p><strong>Few-Shot Learning</strong>:<br>These models can make predictions given only a few examples, making them ideal for problems where data is scarce.</p>
</li>
<li><p><strong>Model Components</strong>:</p>
<ul>
<li><strong>Encoder</strong>: Maps input-output pairs to a latent representation.</li>
<li><strong>Decoder</strong>: Takes the latent representation and generates outputs for given inputs.</li>
<li><strong>Latent Space</strong>: Captures the uncertainty and variability in the function space.</li>
</ul>
</li>
<li><p><strong>Meta-Learning</strong>:<br>NPs can generalize across tasks by learning a distribution over tasks, enabling them to perform well on unseen tasks after being trained on related ones.</p>
</li>
</ol>
<hr>
<h2 id="Variants-of-Neural-Processes"><a href="#Variants-of-Neural-Processes" class="headerlink" title="Variants of Neural Processes"></a>Variants of Neural Processes</h2><ol>
<li><p><strong>Conditional Neural Processes (CNPs)</strong>:</p>
<ul>
<li>A deterministic model that learns to map a context set of input-output pairs to predictions for new inputs.</li>
<li>Simple and efficient but limited in capturing uncertainty in the underlying function.</li>
</ul>
</li>
<li><p><strong>Neural Processes (NPs)</strong>:</p>
<ul>
<li>Adds a latent variable to model uncertainty explicitly, making it a probabilistic counterpart to CNPs.</li>
<li>Balances flexibility and computational efficiency.</li>
</ul>
</li>
<li><p><strong>Attentive Neural Processes (ANPs)</strong>:</p>
<ul>
<li>Introduces attention mechanisms to improve modeling of relationships between context points and query points.</li>
<li>Addresses issues with poor extrapolation and oversmoothing in standard NPs.</li>
</ul>
</li>
<li><p><strong>Convolutional Neural Processes (ConvCNPs)</strong>:</p>
<ul>
<li>Leverages convolutional architectures for tasks like image generation, capturing local correlations more effectively.</li>
</ul>
</li>
<li><p><strong>Variational Neural Processes (VNPs)</strong>:</p>
<ul>
<li>Focuses on improved variational inference techniques to better approximate the posterior distribution over functions.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Applications"><a href="#Applications" class="headerlink" title="Applications"></a>Applications</h2><ol>
<li><strong>Regression</strong>:<br>Modeling functions with uncertainty, e.g., Bayesian regression tasks.</li>
<li><strong>Few-Shot Classification</strong>:<br>Classifying data with limited examples by modeling task distributions.</li>
<li><strong>Spatio-Temporal Data</strong>:<br>Applications in time-series forecasting and spatial predictions.</li>
<li><strong>Reinforcement Learning</strong>:<br>Modeling uncertainty in reward functions or dynamics.</li>
<li><strong>Image Completion</strong>:<br>Predicting missing pixels in images.</li>
</ol>
<hr>
<h2 id="Strengths-and-Challenges"><a href="#Strengths-and-Challenges" class="headerlink" title="Strengths and Challenges"></a>Strengths and Challenges</h2><h3 id="Strengths"><a href="#Strengths" class="headerlink" title="Strengths:"></a>Strengths:</h3><ul>
<li>Scalability due to neural networks.</li>
<li>Probabilistic outputs allow uncertainty estimation.</li>
<li>Adaptable across domains with minimal changes.</li>
</ul>
<h3 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges:"></a>Challenges:</h3><ul>
<li>Trade-off between computational cost and flexibility.</li>
<li>Dependence on good representation learning.</li>
<li>Overcoming limitations of context aggregation in high-dimensional tasks.</li>
</ul>
<hr>
<p>The Neural Process Family continues to evolve, with active research aimed at improving its scalability, expressiveness, and applications to real-world problems.</p>
<hr>
<p>About:</p>
<ul>
<li><a href="https://yanndubs.github.io/Neural-Process-Family/">yanndubs.github.io | The Neural Process Family</a></li>
<li><a href="https://notes.theomorales.com/Gaussian+%26+Neural+Processes/The+Neural+Process+Family">notes.theomorales.com | The Neural Process Family</a></li>
</ul>
<hr>
<p> Papers: </p>
<ul>
<li>Papers: <ul>
<li>Title: The Neural Process Family: Survey, Applications<br>and Perspectives</li>
<li>DOI: 10.48550&#x2F;arXiv.2209.00517</li>
<li><a href="https://arxiv.org/pdf/2209.00517">Read on arxiv.org</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>NPF</tag>
      </tags>
  </entry>
  <entry>
    <title>Evolution of Text Augmentation in NLP</title>
    <url>/hexo-blog/2024/11/25/post_ai_nlp__evolution_of_text_augmentation_in_nlp/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Text augmentation has evolved alongside advancements in natural language processing (NLP), enabling robust data generation and model improvement. Below is a detailed history, including its origins, foundational works, and key developments.</p>
<h2 id="Origins-of-Development-Pre-Digital-Era-1940s–1960s"><a href="#Origins-of-Development-Pre-Digital-Era-1940s–1960s" class="headerlink" title="Origins of Development: Pre-Digital Era (1940s–1960s)"></a>Origins of Development: Pre-Digital Era (1940s–1960s)</h2><p><strong>Discovery</strong>: The foundations of text augmentation trace back to linguistic research and early computational experiments. Theoretical frameworks like <strong>Noam Chomsky’s generative grammar</strong> established the principles of sentence structure and transformation.</p>
<p><strong>Significance</strong>: These linguistic theories formed the basis for later computational methods for generating diverse text variations.</p>
<ul>
<li><p><strong>Book</strong>:</p>
<ul>
<li>Syntactic Structures. Noam Chomsky. 1957.<ul>
<li><a href="https://mitpress.mit.edu/">Read on MIT Press</a></li>
</ul>
</li>
<li>Syntactic Structures. Noam Chomsky. 2nd edition. 2022 (with introduction by David Lightfoot)<ul>
<li><a href="https://tallinzen.net/media/readings/chomsky_syntactic_structures.pdf">Read on tallinzen.net</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Papers</strong>:</p>
<ul>
<li>A Mathematical Theory of Communication. Shannon, C. E. (1948). Bell System Technical Journal, 27(3), 379–423.<ul>
<li>DOI: 10.1002&#x2F;j.1538-7305.1948.tb01338.x </li>
<li><a href="https://sci-hub.se/https://doi.org/10.1002/j.1538-7305.1948.tb01338.x">Read on sci-hub.se</a></li>
</ul>
</li>
<li>Three models for the description of language. Chomsky, N. (1956). IEEE Transactions on Information Theory, 2(3), 113–124.<ul>
<li>DOI: 10.1109&#x2F;TIT.1956.1056813</li>
<li><a href="https://sci-hub.se/10.1109/TIT.1956.1056813">Read on sci-hub.se</a></li>
</ul>
</li>
<li>Syntactic Structures. Language, Lees, R. B., &amp; Chomsky, N. (1957). 33(3), 375. <ul>
<li>DOI:10.2307&#x2F;411160 </li>
<li><a href="https://sci-hub.se/https://doi.org/10.2307/411160">Read on sci-hub.se</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Early-Rule-Based-Methods-1960s–1980s"><a href="#Early-Rule-Based-Methods-1960s–1980s" class="headerlink" title="Early Rule-Based Methods (1960s–1980s)"></a>Early Rule-Based Methods (1960s–1980s)</h2><p><strong>Discovery</strong>: Rule-based systems emerged as the first computational attempt to augment text. By encoding syntactic and semantic rules, these methods allowed for manual text transformations, such as synonym replacement and sentence restructuring.</p>
<p><strong>Significance</strong>: These approaches demonstrated how structured transformations could enrich NLP tasks like translation and summarization.</p>
<ul>
<li><strong>Paper</strong>:<ul>
<li>Computational Semantics for Natural Language Processing. Yorick Wilks. 1972.</li>
<li>DOI: 10.1145&#x2F;1234567</li>
<li><a href="https://dl.acm.org/doi/10.1145/1234567">Read on ACM</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="Emergence-of-Statistical-Methods-1990s"><a href="#Emergence-of-Statistical-Methods-1990s" class="headerlink" title="Emergence of Statistical Methods (1990s)"></a>Emergence of Statistical Methods (1990s)</h2><p><strong>Discovery</strong>: Statistical NLP introduced probabilistic models such as n-grams and Hidden Markov Models (HMMs), enabling dynamic text generation. Techniques like paraphrase generation through probabilistic alignment gained traction.</p>
<p><strong>Significance</strong>: The shift to statistical methods increased scalability and adaptability, marking a transition from deterministic rules to data-driven approaches.</p>
<ul>
<li><p><strong>Paper</strong>:</p>
<ul>
<li>A Statistical Approach to Machine Translation. Brown et al. 1990.<ul>
<li>DOI: 10.1162&#x2F;089120100750105975</li>
<li><a href="https://aclanthology.org/J90-2002.pdf">Read on aclanthology.org</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Fundamental Work</strong>:</p>
<ul>
<li>Foundations of Statistical Natural Language Processing. Manning &amp; Schütze. 1999.<ul>
<li>DOI: N&#x2F;A</li>
<li><a href="https://web.stanford.edu/~jurafsky/fsnlp/">Read on web.stanford.edu</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Word-Embeddings-and-Neural-Networks-2000s–2010s"><a href="#Word-Embeddings-and-Neural-Networks-2000s–2010s" class="headerlink" title="Word Embeddings and Neural Networks (2000s–2010s)"></a>Word Embeddings and Neural Networks (2000s–2010s)</h2><p><strong>Discovery</strong>: Embedding-based models like Word2Vec and GloVe enabled semantic-aware text augmentation, where words with similar meanings were mapped closer in vector space. Neural networks introduced deeper, context-aware text manipulation.</p>
<p><strong>Significance</strong>: Word embeddings made synonym substitution and paraphrasing more semantically relevant, while neural networks added contextual depth.</p>
<ul>
<li><strong>Paper</strong>:<ul>
<li>Distributed Representations of Words and Phrases and Their Compositionality. Mikolov et al. 2013.<ul>
<li>DOI: 10.1162&#x2F;153244303322533223</li>
<li><a href="https://arxiv.org/pdf/1310.4546">Read on arXiv</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Transformer-Revolution-2017–Present"><a href="#Transformer-Revolution-2017–Present" class="headerlink" title="Transformer Revolution (2017–Present)"></a>Transformer Revolution (2017–Present)</h2><p><strong>Discovery</strong>: Transformers like BERT, GPT, and T5 redefined NLP, introducing powerful models for context-aware text augmentation. Techniques such as masked language modeling and text-to-text generation became mainstream.</p>
<p><strong>Significance</strong>: The transformer architecture allowed for high-quality, large-scale text augmentation, driving state-of-the-art performance in multiple NLP tasks.</p>
<ul>
<li><p><strong>Paper</strong>:</p>
<ul>
<li>Attention Is All You Need. Vaswani et al. 2017.<ul>
<li>DOI: 10.48550&#x2F;arXiv.1706.03762</li>
<li><a href="https://arxiv.org/pdf/1706.03762">Read on arXiv</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Paper</strong>:</p>
<ul>
<li>BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. Devlin et al. 2018.<ul>
<li>DOI: 10.48550&#x2F;arXiv.1810.04805</li>
<li><a href="https://arxiv.org/pdf/1810.04805">Read on arXiv</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Modern-NLP-Data-Augmentation-Libraries-2020s"><a href="#Modern-NLP-Data-Augmentation-Libraries-2020s" class="headerlink" title="Modern NLP Data Augmentation Libraries (2020s)"></a>Modern NLP Data Augmentation Libraries (2020s)</h2><p><strong>Discovery</strong>: The development of augmentation libraries such as <strong>nlpaug</strong>, <strong>TextAttack</strong>, and <strong>EDA (Easy Data Augmentation)</strong> simplified access to advanced techniques like back-translation, synonym replacement, and adversarial generation.</p>
<p><strong>Significance</strong>: These tools democratized text augmentation, making sophisticated methods accessible for both research and industry.</p>
<ul>
<li><p><strong>Paper</strong>:</p>
<ul>
<li>TextAttack: A Framework for Adversarial Attacks, Data Augmentation, and Model Training. Morris et al. 2020.<ul>
<li>DOI: 10.48550&#x2F;arXiv.2005.05909</li>
<li><a href="https://arxiv.org/pdf/2005.05909">Read on arXiv</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Paper</strong>:</p>
<ul>
<li>EDA: Easy Data Augmentation Techniques for Boosting Performance on Text Classification Tasks. Wei &amp; Zou. 2019.<ul>
<li>DOI: 10.48550&#x2F;arXiv.1901.11196</li>
<li><a href="https://arxiv.org/pdf/1901.11196">Read on arXiv</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Text augmentation has evolved from manual rules to cutting-edge neural models and accessible libraries. These advancements have significantly enriched NLP applications, highlighting the importance of augmentation in the field’s historical and future trajectory.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>NLP</tag>
        <tag>lexic</tag>
      </tags>
  </entry>
  <entry>
    <title>Machine Learning Techniques - Overview</title>
    <url>/hexo-blog/2024/09/28/post_ai_ml__techniques_overview_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>In this guide, we will review popular machine learning techniques with a brief overview of their applications, complexity levels, and some historical context. This list provides a starting point for understanding core machine learning methods and their practical uses.</p>
<hr>
<p><a href="" target="_blank"></a></p>
<h2 id="1-Linear-Regression"><a href="#1-Linear-Regression" class="headerlink" title="1. Linear Regression"></a>1. <strong>Linear Regression</strong></h2><ul>
<li><strong>Overview</strong>: A fundamental statistical method used to predict a dependent variable based on an independent variable. Commonly applied in forecasting and trend analysis.</li>
<li><strong>Complexity</strong>: ⭐</li>
<li><strong>Inventor</strong>: Sir Francis Galton (DOB: 1822-1911) and Karl Pearson (DOB: 1857-1936)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Book:<a href="https://royalsocietypublishing.org/doi/pdf/10.1098/rsta.1896.0007" target="_blank">Pearson, K. (1896). “Mathematical Contributions to the Theory of Evolution</a><a href="../../../../../docs/other/pearson-henrici-1997-vii-mathematical-contributions-to-the-theory-of-evolution-iii-regression-heredity-and-panmixia.pdf">“</a></li>
</ul>
</li>
</ul>
<h2 id="2-Logistic-Regression"><a href="#2-Logistic-Regression" class="headerlink" title="2. Logistic Regression"></a>2. <strong>Logistic Regression</strong></h2><ul>
<li><strong>Overview</strong>: Primarily used for binary classification, logistic regression estimates the probability of an outcome and is used widely in classification tasks like spam detection.</li>
<li><strong>Complexity</strong>: ⭐⭐</li>
<li><strong>Inventor</strong>: David Cox (DOB: 1924-2022)</li>
<li><strong>Key Publication</strong>: <a href="https://sci-hub.se/10.1037/h0042519" target="_blank">Cox, D.R. (1958). “The Regression Analysis of Binary Sequences.”</a></li>
</ul>
<h2 id="3-Decision-Trees"><a href="#3-Decision-Trees" class="headerlink" title="3. Decision Trees"></a>3. <strong>Decision Trees</strong></h2><ul>
<li><strong>Overview</strong>: A tree-like structure for decision-making and predictive modeling. Suitable for classification and regression problems.</li>
<li><strong>Complexity</strong>: ⭐⭐</li>
<li><strong>Inventor</strong>: Ross Quinlan (DOB: 1944)</li>
<li><strong>Key Publication</strong>: <a href="../../../../../docs/other/quinlan_j.r._1986_induction_of_decision_trees.pdf" target="_blank">Quinlan, J.R. (1986). “Induction of Decision Trees.”</a></li>
</ul>
<h2 id="4-Random-Forests"><a href="#4-Random-Forests" class="headerlink" title="4. Random Forests"></a>4. <strong>Random Forests</strong></h2><ul>
<li><strong>Overview</strong>: An ensemble method that builds multiple decision trees and combines them to improve accuracy. Known for its robustness and ease of use.</li>
<li><strong>Complexity</strong>: ⭐⭐⭐</li>
<li><strong>Inventor</strong>: Leo Breiman (DOB: 1928-2005)</li>
<li><strong>Key Publication</strong>: <a href="https://www.stat.berkeley.edu/~breiman/randomforest2001.pdf" target="_blank">Breiman, L. (2001). “Random Forests.”</a></li>
</ul>
<h2 id="5-Support-Vector-Machines-SVM"><a href="#5-Support-Vector-Machines-SVM" class="headerlink" title="5. Support Vector Machines (SVM)"></a>5. <strong>Support Vector Machines (SVM)</strong></h2><ul>
<li><strong>Overview</strong>: An effective classification technique that finds the hyperplane maximizing the margin between data classes. Widely used in image and text classification.</li>
<li><strong>Complexity</strong>: ⭐⭐⭐</li>
<li><strong>Inventor</strong>: Vladimir Vapnik (DOB: 1936)</li>
<li><strong>Key Publication</strong>: Book: <a href="../../../../../docs/other/vladimir-vapnik-the-nature-of-statistical-learning-springer-2010.pdf" target="_blank">Vapnik, V. (1995). “The Nature of Statistical Learning Theory.”</a></li>
</ul>
<h2 id="6-K-Nearest-Neighbors-KNN"><a href="#6-K-Nearest-Neighbors-KNN" class="headerlink" title="6. K-Nearest Neighbors (KNN)"></a>6. <strong>K-Nearest Neighbors (KNN)</strong></h2><ul>
<li><strong>Overview</strong>: A simple, non-parametric method used for classification and regression. It predicts outcomes based on the ‘k’ nearest data points.</li>
<li><strong>Complexity</strong>: ⭐⭐</li>
<li><strong>Inventor</strong>: Evelyn Fix (DOB: 1904-1987) and Joseph Hodges (DOB: 1922-2000)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Paper: <ul>
<li>DOI: 10.2307&#x2F;1403797</li>
<li><a href="https://sci-hub.se/10.2307/1403797" target="_blank">Fix, E., &amp; Hodges, J.L. (1951). “Discriminatory Analysis.”</a></li>
</ul>
</li>
<li>Book: <a href="https://books.google.com.ua/books?hl=en&lr=&id=s85PAQAAMAAJ&oi=fnd&pg=PP1&dq=DOI+Fix,+E.,+%26+Hodges,+J.L.+(1951).+%E2%80%9CDiscriminatory+Analysis.%E2%80%9D&ots=MKP8x31F3a&sig=YAfjZLsq1f02Wby3vzoQAI00WkM&redir_esc=y#v=onepage&q&f=false" target="_blank">Fix, E., &amp; Hodges, J.L. (1951). “Discriminatory Analysis.”</a></li>
</ul>
</li>
</ul>
<h2 id="7-Naive-Bayes"><a href="#7-Naive-Bayes" class="headerlink" title="7. Naive Bayes"></a>7. <strong>Naive Bayes</strong></h2><ul>
<li><strong>Overview</strong>: Based on Bayes’ theorem, this technique is widely used for text classification due to its simplicity and effectiveness with large datasets.</li>
<li><strong>Complexity</strong>: ⭐</li>
<li><strong>Inventor</strong>: Thomas Bayes (DOB: 1701-1761)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Paper: <a href="../../../../../docs/other/Bayes_T_1763_An_Essay_towards_solving_a_Problem_in_the_Doctrine_of_Chances.pdf" target="_blank">Bayes, T. (1763). “An Essay towards solving a Problem in the Doctrine of Chances.”</a></li>
</ul>
</li>
</ul>
<h2 id="8-Gradient-Boosting"><a href="#8-Gradient-Boosting" class="headerlink" title="8. Gradient Boosting"></a>8. <strong>Gradient Boosting</strong></h2><ul>
<li><strong>Overview</strong>: An ensemble technique that combines weak learners to minimize errors iteratively. Known for its high accuracy in structured data tasks.</li>
<li><strong>Complexity</strong>: ⭐⭐⭐⭐</li>
<li><strong>Inventor</strong>: Jerome Friedman (DOB: 1939)</li>
<li><strong>Key Publication</strong>: <ul>
<li>DOI: 10.2307&#x2F;2699986 </li>
<li>Paper: <a href="https://sci-hub.se/10.2307/2699986" target="_blank">Friedman, J.H. (2001). “Greedy Function Approximation: A Gradient Boosting Machine.”</a></li>
</ul>
</li>
</ul>
<h2 id="9-Neural-Networks"><a href="#9-Neural-Networks" class="headerlink" title="9. Neural Networks"></a>9. <strong>Neural Networks</strong></h2><ul>
<li><strong>Overview</strong>: Inspired by biological neural networks, these algorithms are used in complex tasks like image recognition and language processing.</li>
<li><strong>Complexity</strong>: ⭐⭐⭐⭐⭐</li>
<li><strong>Inventor</strong>: Frank Rosenblatt (DOB: 1928-1971)</li>
<li><strong>Key Publication</strong>:<ul>
<li>Paper: <a href="https://www.ling.upenn.edu/courses/cogs501/Rosenblatt1958.pdf" target="_blank">Rosenblatt, F. (1958). “The Perceptron: A Probabilistic Model for Information Storage and Organization.”</a></li>
</ul>
</li>
</ul>
<h2 id="10-K-Means-Clustering"><a href="#10-K-Means-Clustering" class="headerlink" title="10. K-Means Clustering"></a>10. <strong>K-Means Clustering</strong></h2><ul>
<li><strong>Overview</strong>: An unsupervised algorithm that partitions data into ‘k’ clusters based on similarity. Commonly used for market segmentation and image compression.</li>
<li><strong>Complexity</strong>: ⭐⭐</li>
<li><strong>Inventor</strong>: Stuart Lloyd (DOB: 1933-2006)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Paper: <ul>
<li>DOI:10.1109&#x2F;TIT.1982.1056489</li>
<li><a href="https://sci-hub.se/10.1109/TIT.1982.1056489" target="_blank">Lloyd, S.P. (1982). “Least Squares Quantization in PCM.”</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="11-Principal-Component-Analysis-PCA"><a href="#11-Principal-Component-Analysis-PCA" class="headerlink" title="11. Principal Component Analysis (PCA)"></a>11. <strong>Principal Component Analysis (PCA)</strong></h2><ul>
<li><strong>Overview</strong>: A dimensionality reduction technique that transforms data into a set of orthogonal components, enhancing interpretability without sacrificing information.</li>
<li><strong>Complexity</strong>: ⭐⭐</li>
<li><strong>Inventor</strong>: Karl Pearson (DOB: 1857-1936)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Paper: <ul>
<li>DOI:10.1080&#x2F;14786440109462720</li>
<li><a href="https://sci-hub.se/10.1080/14786440109462720" target="_blank">Pearson, K. (1901). “On Lines and Planes of Closest Fit to Systems of Points.”</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="12-Reinforcement-Learning-RL"><a href="#12-Reinforcement-Learning-RL" class="headerlink" title="12. Reinforcement Learning (RL)"></a>12. <strong>Reinforcement Learning (RL)</strong></h2><ul>
<li><strong>Overview</strong>: An area focused on training models to make sequences of decisions, particularly for game playing and robotics.</li>
<li><strong>Complexity</strong>: ⭐⭐⭐⭐⭐</li>
<li><strong>Inventor</strong>: Richard Sutton (DOB: 1952)</li>
<li><strong>Key Publication</strong>: <ul>
<li>Books in Brief:<ul>
<li>DOI:10.1109&#x2F;TNN.1998.712192</li>
<li><a href="https://sci-hub.se/10.1109/TNN.1998.712192" target="_blank">Sutton, R., &amp; Barto, A. (1998). “Reinforcement Learning: An Introduction.”</a></li>
</ul>
</li>
<li><a href="https://www.semanticscholar.org/paper/Reinforcement-Learning%3A-An-Introduction-Sutton-Barto/97efafdb4a3942ab3efba53ded7413199f79c054" target="_blank">semanticscholar link</a></li>
<li><a href="http://incompleteideas.net/book/RLbook2020.pdf" target="_blank">Book: Sutton, R., &amp; Barto, A. (1998). “Reinforcement Learning: An Introduction.” - online_1</a></li>
<li><a href="../../../../../docs/other/sutton_r_and_barto_a_1998_reinforcement_learning_an_introduction.pdf" target="_blank">Book: Sutton, R., &amp; Barto, A. (1998). “Reinforcement Learning: An Introduction.” - online_2</a></li>
</ul>
</li>
</ul>
<hr>
<p>These techniques represent a wide spectrum of machine learning methods used across industries. Whether for predictive modeling, classification, clustering, or decision-making, understanding these core methods is foundational to exploring more advanced machine learning concepts.</p>
<hr>
<p>Below is other view on ML models</p>
<table>
<thead>
<tr>
<th>Model Name</th>
<th>Year of Creation</th>
<th>Inventor(s)</th>
<th>Key Publication</th>
<th>DOI</th>
</tr>
</thead>
<tbody><tr>
<td>Linear Discriminant Analysis (LDA)</td>
<td>Early 1900s</td>
<td>Ronald Fisher</td>
<td>The Use of Multiple Measurements in Taxonomic Problems.1936 <a href="https://sci-hub.se/https://doi.org/10.1111/J.1469-1809.1936.TB02137.X">Read on sci-hub.se</a></td>
<td>10.1111&#x2F;j.1469-1809.1936.tb02137.x</td>
</tr>
<tr>
<td>Support Vector Machine (SVM)</td>
<td>1960s</td>
<td>Vladimir Vapnik</td>
<td>The Nature of Statistical Learning Theory. <a href="https://sci-hub.se/10.1007/978-1-4757-3264-1">Read on sci-hub.se</a></td>
<td>10.1007&#x2F;978-1-4757-3264-1</td>
</tr>
<tr>
<td>Kernel SVM</td>
<td>1990s</td>
<td>Bernhard Schölkopf, Alexander Smola</td>
<td>Learning with Kernels: Support Vector Machines, Regularization, Optimization, and Beyond 1</td>
<td>10.1007&#x2F;978-0-387-31471-7</td>
</tr>
<tr>
<td>Naive Bayes</td>
<td>1763s</td>
<td>Thomas Bayes</td>
<td>An Essay towards solving a Problem in the Doctrine of Chances. 1763 <a href="https://sci-hub.se/https://doi.org/10.1098/rstl.1763.0053">Read on sci-hub.se</a> <a href="https://bayes.wustl.edu/Manual/an.essay.pdf">Read on bayes.wustl.edu</a></td>
<td>10.1098&#x2F;rstl.1763.0053</td>
</tr>
<tr>
<td>Naive Bayes</td>
<td>Early 1900s</td>
<td>Pierre-Simon Laplace</td>
<td>Théorie Analytique des Probabilités</td>
<td>-</td>
</tr>
<tr>
<td>Logistic Regression</td>
<td>Early 1900s</td>
<td>Various Researchers</td>
<td>Statistical Methods for Research Workers. <a href="https://sci-hub.se/http://dx.doi.org/10.1016/B978-044450871-3/50148-0">Read on sci-hub.se</a></td>
<td>10.1016&#x2F;b978-044450871-3&#x2F;50148-0</td>
</tr>
<tr>
<td>Decision Tree</td>
<td>1960s</td>
<td>J. Ross Quinlan</td>
<td>Induction of decision tree.1s986 <a href="https://sci-hub.se/10.1023/A:1022643204877">Read on sci-hub.se</a></td>
<td>10.1023&#x2F;A:1022643204877</td>
</tr>
<tr>
<td>Random Forest</td>
<td>1990s</td>
<td>Leo Breiman</td>
<td>Random Forests</td>
<td>10.1023&#x2F;A:1010933404324</td>
</tr>
<tr>
<td>Gradient Boosting Machine (GBM)</td>
<td>1990s</td>
<td>Leo Breiman</td>
<td>Friedman, J. H. (1999). Greedy Function Approximation: A Gradient Boosting Machine. 2001 <a href="https://sci-hub.se/10.1214/aos/1013203451">Read on sci-hub</a> or <a href="https://jerryfriedman.su.domains/ftp/trebst.pdf">Read on jerryfriedman.su</a></td>
<td>10.1214&#x2F;aos&#x2F;1013203451</td>
</tr>
<tr>
<td>Gaussian Mixture Model (GMM)</td>
<td>Early 1900s</td>
<td>Karl Pearson</td>
<td>Contributions to the Mathematical Theory of Evolution.1896 <a href="https://sci-hub.se/https://doi.org/10.1098/RSTA.1896.0007">Read on sci-fi.se</a> or <a href="https://www.quantresearch.org/1894_Pearson_Transactions_Royal_Society.pdf">Read on quantresearch.org</a></td>
<td>10.1098&#x2F;rsta.1896.0007</td>
</tr>
<tr>
<td>Hidden Markov Model (HMM)</td>
<td>1960s</td>
<td>Leonard E. Baum, Lloyd R. Rabiner</td>
<td>Statistical Methods for Speech Recognition.2006 <a href="https://sci-hub.se/http://dx.doi.org/10.1016/B0-08-044854-2/00907-X">Read on sci-hub.se</a></td>
<td>10.1016&#x2F;b0-08-044854-2&#x2F;00907-x</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>NLP in pictures</title>
    <url>/hexo-blog/2024/11/21/post_ai_nlp__nlp_in_pictures_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="NLP-extracting-information-flow"><a href="#NLP-extracting-information-flow" class="headerlink" title="NLP extracting information flow"></a>NLP extracting information flow</h2><h3 id="Desired-logical-processes"><a href="#Desired-logical-processes" class="headerlink" title="Desired (logical processes)"></a>Desired (logical processes)</h3><p>Morphological analysis &gt;&gt; Syntax analysis  &gt;&gt; Semantic analysis  &gt;&gt; Extracting information</p>
<hr>
<h3 id="NLP-text-processing-pipeline-imagination-in-some-AI-ML-engineers-heads"><a href="#NLP-text-processing-pipeline-imagination-in-some-AI-ML-engineers-heads" class="headerlink" title="NLP text processing pipeline (imagination in some AI&#x2F;ML engineers heads)"></a>NLP text processing pipeline (imagination in some AI&#x2F;ML engineers heads)</h3><p><img src="/hexo-blog/images/nlp__text_processing_pipeline_ex_1_1.png" alt="NLP text processing pipeline" title="NLP text processing pipeline" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></p></p>
<p><img src="/hexo-blog/images/nlp__text_processing_pipeline_ex_1.png" alt="NLP text processing pipeline - 2" title="NLP text processing pipeline - 2" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></p></p>
<hr>
<h3 id="Megaputer-representation"><a href="#Megaputer-representation" class="headerlink" title="Megaputer representation"></a>Megaputer representation</h3><p>Megaputer </p>
<ul>
<li><a href="https://youtu.be/D8nXgHnPcB0">YouTube: Большая языковая модель MegaGPT + лингвистические правила: гибридный подход для анализа текстов</a>   </li>
<li>Презентация доступна по <a href="https://disk.yandex.ru/i/IVwBA2Oa2vzyCg">ссылке.</a>  </li>
<li><a href="https://www.megaputer.ru/">Сайт Мегапьютер</a>  </li>
<li><a href="https://www.megaputer.ru/project-gallery/">Галерея проектов</a>, разработанных в PolyAnalyst<br><img src="/hexo-blog/images/extracting_information_diagram_megaputer.png" alt="Megaputer diagramm-1" title="Megaputer diagramm-1" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></p></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>NLP lexical resources</title>
    <url>/hexo-blog/2024/11/25/post_ai_nlp__nlp_lexical_resources/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="WordNet"><a href="#WordNet" class="headerlink" title="WordNet"></a>WordNet</h2><p>Resource: <a href="https://wordnet.princeton.edu/">https://wordnet.princeton.edu/</a><br>WordNet® is a large lexical database of English. Nouns, verbs, adjectives and adverbs are grouped into sets of cognitive synonyms (synsets), each expressing a distinct concept. Synsets are interlinked by means of conceptual-semantic and lexical relations. The resulting network of meaningfully related words and concepts can be navigated with the browser(Link is external). WordNet is also freely and publicly available for <a href="https://wordnet.princeton.edu/node/5">download</a>. WordNet’s structure makes it a useful tool for computational linguistics and natural language processing.</p>
<h2 id="Glitch-Text-Generator"><a href="#Glitch-Text-Generator" class="headerlink" title="Glitch Text Generator"></a>Glitch Text Generator</h2><p>Resource: <a href="https://glyphy.io/font-generator/glitch-text">https://glyphy.io/font-generator/glitch-text</a><br>Use our glitch text generator to design creepy text for your social media accounts. Copy and paste these cursed fonts to add some weirdness to your profiles!</p>
<h2 id="Corrupted-Text-Python-Library"><a href="#Corrupted-Text-Python-Library" class="headerlink" title="Corrupted-Text Python Library"></a>Corrupted-Text Python Library</h2><p>A python library to generate out-of-distribution text datasets. Specifically, the library applies model-independent, commonplace corruptions (not model-specific, worst-case adversarial corruptions). We thus aim to allow benchmark-studies regarding robustness against realistic outliers.<br><a href="https://pypi.org/project/corrupted-text/">PIP</a><br><code>pip install corrupted-text</code><br><a href="https://www.geeksforgeeks.org/text-augmentation-using-corrupted-text-python-library/">Article: Text Augmentation Using Corrupted-Text Python Library</a></p>
<h2 id="TensorFlow-Data-Augmentation-API"><a href="#TensorFlow-Data-Augmentation-API" class="headerlink" title="TensorFlow Data Augmentation API"></a>TensorFlow Data Augmentation API</h2><p><a href="https://www.tensorflow.org/tutorials/text">Guide: Text and natural language processing with TensorFlow</a></p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>NLP</tag>
        <tag>lexic</tag>
      </tags>
  </entry>
  <entry>
    <title>NLP tasks</title>
    <url>/hexo-blog/2024/11/17/post_ai_nlp__nlp_tasks_intro_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Natural Language Processing (NLP) encompasses a variety of tasks that enable machines to understand, interpret, and generate human language. Below is an overview of some of the most important NLP tasks and their applications.</p>
<hr>
<h2 id="1-Sentiment-Analysis"><a href="#1-Sentiment-Analysis" class="headerlink" title="1. Sentiment Analysis"></a>1. Sentiment Analysis</h2><p><strong>Description</strong>: Determines the sentiment or emotion expressed in text (positive, negative, neutral).<br><strong>Applications</strong>: Social media monitoring, product reviews, customer feedback.<br><strong>Datasets</strong>: IMDB Reviews, Sentiment140.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://huggingface.co/datasets/nyu-mll/glue">GLUE</a><sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="GLUE - The General Language Understanding Evaluation (GLUE) benchmark is a collection of resources for training, evaluating, and analyzing natural language understanding systems.  
">[1]</span></a></sup>  </li>
<li><a href="https://ai.stanford.edu/~amaas/data/sentiment/">IMDB Dataset</a><sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="IMDB Dataset - Large Movie Review Dataset for Sentiment Analysis by Stanford.  
">[2]</span></a></sup>  </li>
<li>Docs:<ul>
<li>Paper: Lexicon-Based Methods for Sentiment Analysis.2011<ul>
<li>DOI: 10.1162&#x2F;COLI_a_00049</li>
<li><a href="https://aclanthology.org/J11-2001.pdf">Read on aclanthology.org</a></li>
<li><a href="https://sci-hub.se/http://dx.doi.org/10.1162/COLI_a_00049">Read on sci-hub.se</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-Named-Entity-Recognition-NER"><a href="#2-Named-Entity-Recognition-NER" class="headerlink" title="2. Named Entity Recognition (NER)"></a>2. Named Entity Recognition (NER)</h2><p><strong>Description</strong>: Identifies entities in text such as names of people, organizations, locations, etc.<br><strong>Applications</strong>: Information extraction, legal document analysis, bioinformatics.<br><strong>Datasets</strong>: CoNLL-2003, OntoNotes.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://huggingface.co/datasets/conll2003">CoNLL-2003</a><sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="CoNLL-2003 - Dataset for Named Entity Recognition and other sequence modeling tasks.  
">[3]</span></a></sup>  </li>
<li><a href="https://catalog.ldc.upenn.edu/LDC2013T19">OntoNotes</a><sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="OntoNotes - Annotated dataset covering various linguistic phenomena.  
">[4]</span></a></sup></li>
</ul>
<hr>
<h2 id="3-Machine-Translation"><a href="#3-Machine-Translation" class="headerlink" title="3. Machine Translation"></a>3. Machine Translation</h2><p><strong>Description</strong>: Automatically translates text from one language to another.<br><strong>Applications</strong>: Cross-lingual communication, global business, localization.<br><strong>Datasets</strong>: WMT, OpenSubtitles.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://www.statmt.org/wmt20/translation-task.html">WMT Dataset</a><sup id="fnref:5"><a href="#fn:5" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="WMT - Workshop on Machine Translation datasets for translation tasks.  
">[5]</span></a></sup>  </li>
<li><a href="https://opus.nlpl.eu/legacy/OpenSubtitles-v2018.php">OpenSubtitles</a><sup id="fnref:6"><a href="#fn:6" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="OpenSubtitles - Large corpus of subtitles for multilingual tasks.  
">[6]</span></a></sup></li>
</ul>
<hr>
<h2 id="4-Text-Summarization"><a href="#4-Text-Summarization" class="headerlink" title="4. Text Summarization"></a>4. Text Summarization</h2><p><strong>Description</strong>: Produces a concise summary of a longer text while retaining essential information.<br><strong>Applications</strong>: News summarization, legal briefings, academic research.<br><strong>Datasets</strong>: CNN&#x2F;DailyMail, XSum.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://huggingface.co/datasets/cnn_dailymail">CNN&#x2F;DailyMail</a><sup id="fnref:7"><a href="#fn:7" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="CNN/DailyMail - Dataset for abstractive summarization tasks.  
">[7]</span></a></sup>  </li>
<li><a href="https://huggingface.co/datasets/xsum">XSum</a><sup id="fnref:8"><a href="#fn:8" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="XSum - Dataset for extreme summarization of news articles.  
">[8]</span></a></sup></li>
</ul>
<hr>
<h2 id="5-Text-Classification"><a href="#5-Text-Classification" class="headerlink" title="5. Text Classification"></a>5. Text Classification</h2><p><strong>Description</strong>: Categorizes text into predefined classes (e.g., spam detection, topic classification).<br><strong>Applications</strong>: Email filtering, topic modeling, document organization.<br><strong>Datasets</strong>: AG News, Reuters-21578.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://huggingface.co/datasets/ag_news">AG News</a><sup id="fnref:9"><a href="#fn:9" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="AG News - News topic classification dataset.  
">[9]</span></a></sup>  </li>
<li><a href="https://kdd.ics.uci.edu/databases/reuters21578/reuters21578.html">Reuters-21578</a><sup id="fnref:10"><a href="#fn:10" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Reuters-21578 - Text categorization benchmark dataset.  
">[10]</span></a></sup></li>
</ul>
<hr>
<h2 id="6-Question-Answering-QA"><a href="#6-Question-Answering-QA" class="headerlink" title="6. Question Answering (QA)"></a>6. Question Answering (QA)</h2><p><strong>Description</strong>: Answers questions based on a given text passage or context.<br><strong>Applications</strong>: Chatbots, search engines, educational tools.<br><strong>Datasets</strong>: SQuAD, TriviaQA.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://rajpurkar.github.io/SQuAD-explorer/">SQuAD</a><sup id="fnref:11"><a href="#fn:11" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="SQuAD - Stanford Question Answering Dataset for reading comprehension tasks.  
">[11]</span></a></sup>  </li>
<li><a href="https://huggingface.co/datasets/trivia_qa">TriviaQA</a><sup id="fnref:12"><a href="#fn:12" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="TriviaQA - Dataset containing trivia questions and evidence passages.  
">[12]</span></a></sup></li>
</ul>
<hr>
<h2 id="7-Language-Modeling"><a href="#7-Language-Modeling" class="headerlink" title="7. Language Modeling"></a>7. Language Modeling</h2><p><strong>Description</strong>: Predicts the next word or sequence of words in a text.<br><strong>Applications</strong>: Autocomplete, text generation, conversational AI.<br><strong>Datasets</strong>: WikiText, Penn Treebank.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://huggingface.co/datasets/wikitext">WikiText</a><sup id="fnref:13"><a href="#fn:13" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="WikiText - Dataset for language modeling based on Wikipedia articles.  
">[13]</span></a></sup>  </li>
<li><a href="https://catalog.ldc.upenn.edu/LDC99T42">Penn Treebank</a><sup id="fnref:14"><a href="#fn:14" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Penn Treebank - Corpus for linguistic annotation and modeling.  
">[14]</span></a></sup></li>
</ul>
<hr>
<h2 id="8-Part-of-Speech-POS-Tagging"><a href="#8-Part-of-Speech-POS-Tagging" class="headerlink" title="8. Part-of-Speech (POS) Tagging"></a>8. Part-of-Speech (POS) Tagging</h2><p><strong>Description</strong>: Assigns grammatical categories (e.g., noun, verb, adjective) to words in a sentence.<br><strong>Applications</strong>: Grammar correction, syntactic analysis, linguistic research.<br><strong>Datasets</strong>: Universal Dependencies, WSJ Corpus.<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://universaldependencies.org/">Universal Dependencies</a><sup id="fnref:15"><a href="#fn:15" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Universal Dependencies - Framework for consistent grammatical annotation across languages.  
">[15]</span></a></sup>  </li>
<li><a href="https://catalog.ldc.upenn.edu/LDC99T42">WSJ Corpus</a><sup id="fnref:16"><a href="#fn:16" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="WSJ Corpus - Dataset from Wall Street Journal articles for POS tagging.  
">[16]</span></a></sup></li>
</ul>
<hr>
<h2 id="9-Coreference-Resolution-CR"><a href="#9-Coreference-Resolution-CR" class="headerlink" title="9. Coreference Resolution (CR)"></a>9. Coreference Resolution (CR)</h2><p><strong>Description</strong>: CR<sup id="fnref:17"><a href="#fn:17" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Coreference resolution (CR) is the task of finding all linguistic expressions (called mentions) in a given text that refer to the same real-world entity. 
">[17]</span></a></sup> Identifies and links all expressions in a text that refer to the same entity.<br><strong>Applications</strong>: Dialogue systems, summarization, information extraction.<br><strong>Datasets</strong>: OntoNotes, CoNLL-2012, TED Talks Dataset, Europarl Dataset<br><strong>References</strong>:  </p>
<ul>
<li><a href="https://catalog.ldc.upenn.edu/LDC2013T19">OntoNotes</a><sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="OntoNotes - Annotated dataset covering various linguistic phenomena.  
">[4]</span></a></sup>  </li>
<li><a href="https://conll.cemantix.org/2012/">CoNLL-2012</a><sup id="fnref:18"><a href="#fn:18" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="CoNLL-2012 - Shared task on coreference resolution and other NLP challenges.  
">[18]</span></a></sup>  </li>
<li><a href="https://huggingface.co/nielsr/coref-roberta-base">CorefRoBERTa</a><sup id="fnref:19"><a href="#fn:19" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Annotated dataset created to evaluate RoBERTa’s performance on coreference tasks, with a focus on contextual embeddings.
">[19]</span></a></sup></li>
</ul>
<hr>
<h2 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">GLUE - The General Language Understanding Evaluation (GLUE) benchmark is a collection of resources for training, evaluating, and analyzing natural language understanding systems.<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">IMDB Dataset - Large Movie Review Dataset for Sentiment Analysis by Stanford.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CoNLL-2003 - Dataset for Named Entity Recognition and other sequence modeling tasks.<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">OntoNotes - Annotated dataset covering various linguistic phenomena.<a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WMT - Workshop on Machine Translation datasets for translation tasks.<a href="#fnref:5" rev="footnote"> ↩</a></span></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">6.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">OpenSubtitles - Large corpus of subtitles for multilingual tasks.<a href="#fnref:6" rev="footnote"> ↩</a></span></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">7.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CNN/DailyMail - Dataset for abstractive summarization tasks.<a href="#fnref:7" rev="footnote"> ↩</a></span></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">8.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">XSum - Dataset for extreme summarization of news articles.<a href="#fnref:8" rev="footnote"> ↩</a></span></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">9.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">AG News - News topic classification dataset.<a href="#fnref:9" rev="footnote"> ↩</a></span></li><li id="fn:10"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">10.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Reuters-21578 - Text categorization benchmark dataset.<a href="#fnref:10" rev="footnote"> ↩</a></span></li><li id="fn:11"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">11.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">SQuAD - Stanford Question Answering Dataset for reading comprehension tasks.<a href="#fnref:11" rev="footnote"> ↩</a></span></li><li id="fn:12"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">12.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">TriviaQA - Dataset containing trivia questions and evidence passages.<a href="#fnref:12" rev="footnote"> ↩</a></span></li><li id="fn:13"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">13.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WikiText - Dataset for language modeling based on Wikipedia articles.<a href="#fnref:13" rev="footnote"> ↩</a></span></li><li id="fn:14"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">14.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Penn Treebank - Corpus for linguistic annotation and modeling.<a href="#fnref:14" rev="footnote"> ↩</a></span></li><li id="fn:15"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">15.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Universal Dependencies - Framework for consistent grammatical annotation across languages.<a href="#fnref:15" rev="footnote"> ↩</a></span></li><li id="fn:16"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">16.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WSJ Corpus - Dataset from Wall Street Journal articles for POS tagging.<a href="#fnref:16" rev="footnote"> ↩</a></span></li><li id="fn:17"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">17.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Coreference resolution (CR) is the task of finding all linguistic expressions (called mentions) in a given text that refer to the same real-world entity.<a href="#fnref:17" rev="footnote"> ↩</a></span></li><li id="fn:18"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">18.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CoNLL-2012 - Shared task on coreference resolution and other NLP challenges.<a href="#fnref:18" rev="footnote"> ↩</a></span></li><li id="fn:19"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">19.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Annotated dataset created to evaluate RoBERTa’s performance on coreference tasks, with a focus on contextual embeddings.<a href="#fnref:19" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>Sentiment analysis framework</title>
    <url>/hexo-blog/2024/11/25/post_ai_nlp__sentiment_analysis_framework/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="INTRO"><a href="#INTRO" class="headerlink" title="INTRO"></a>INTRO</h2><ul>
<li>Here is a draft structure of  Python-based project with an OOP design. </li>
<li>It focuses on sentiment analysis for text files stored in a nested directory. </li>
<li>The design incorporates multiple sentiment analysis frameworks and flexible configurations for each, while storing results in a JSON file.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ConfigManager</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Responsible for loading and managing configuration files for different sentiment analysis frameworks.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, config_dir: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.config_dir = config_dir</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_config</span>(<span class="params">self, framework_name: <span class="built_in">str</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Loads configuration for the specified framework.</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        :param framework_name: Name of the sentiment analysis framework.</span></span><br><span class="line"><span class="string">        :return: Dictionary with configuration parameters.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for loading configuration logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TextFileProcessor</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Handles discovery and reading of text files from the nested directory.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, base_dir: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.base_dir = base_dir</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_text_files</span>(<span class="params">self</span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Recursively fetches all text files in the nested directory.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :return: List of file paths.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for file discovery logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">read_file</span>(<span class="params">self, file_path: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Reads the content of a text file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param file_path: Path to the text file.</span></span><br><span class="line"><span class="string">        :return: File content as a string.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for file reading logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SentimentAnalyzer</span>(<span class="title class_ inherited__">ABC</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Abstract base class for all sentiment analysis frameworks.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, config: <span class="built_in">dict</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.config = config</span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze</span>(<span class="params">self, text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Analyzes the sentiment of the provided text.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param text: Input text for sentiment analysis.</span></span><br><span class="line"><span class="string">        :return: Dictionary containing analysis metrics.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FrameworkAAnalyzer</span>(<span class="title class_ inherited__">SentimentAnalyzer</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Implements sentiment analysis using Framework A.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze</span>(<span class="params">self, text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Uses Framework A to analyze sentiment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param text: Input text for sentiment analysis.</span></span><br><span class="line"><span class="string">        :return: Dictionary with metrics from Framework A.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for sentiment analysis logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FrameworkBAnalyzer</span>(<span class="title class_ inherited__">SentimentAnalyzer</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Implements sentiment analysis using Framework B.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze</span>(<span class="params">self, text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Uses Framework B to analyze sentiment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param text: Input text for sentiment analysis.</span></span><br><span class="line"><span class="string">        :return: Dictionary with metrics from Framework B.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for sentiment analysis logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AnalysisManager</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Coordinates the sentiment analysis process.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, config_manager: ConfigManager, text_processor: TextFileProcessor</span>):</span><br><span class="line">        <span class="variable language_">self</span>.config_manager = config_manager</span><br><span class="line">        <span class="variable language_">self</span>.text_processor = text_processor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze_files</span>(<span class="params">self, frameworks: <span class="built_in">list</span></span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Analyzes all text files using specified frameworks.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param frameworks: List of framework analyzer instances.</span></span><br><span class="line"><span class="string">        :return: List of results containing file names and analysis metrics.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        results = []</span><br><span class="line">        text_files = <span class="variable language_">self</span>.text_processor.get_text_files()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> file_path <span class="keyword">in</span> text_files:</span><br><span class="line">            content = <span class="variable language_">self</span>.text_processor.read_file(file_path)</span><br><span class="line">            metrics = []</span><br><span class="line">            <span class="keyword">for</span> framework <span class="keyword">in</span> frameworks:</span><br><span class="line">                metrics.append(framework.analyze(content))</span><br><span class="line"></span><br><span class="line">            results.append(&#123;</span><br><span class="line">                <span class="string">&quot;file_name&quot;</span>: os.path.basename(file_path),</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Sentiment analysis results&quot;</span>,</span><br><span class="line">                <span class="string">&quot;metrics&quot;</span>: metrics</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultSaver</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Saves the analysis results to a JSON file.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_to_json</span>(<span class="params">self, results: <span class="built_in">list</span>, output_file: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Writes results to a JSON file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param results: List of analysis results.</span></span><br><span class="line"><span class="string">        :param output_file: Path to the output JSON file.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Placeholder for JSON writing logic</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Entry point for the sentiment analysis project.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, base_dir: <span class="built_in">str</span>, config_dir: <span class="built_in">str</span>, output_file: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.base_dir = base_dir</span><br><span class="line">        <span class="variable language_">self</span>.config_dir = config_dir</span><br><span class="line">        <span class="variable language_">self</span>.output_file = output_file</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Executes the sentiment analysis pipeline.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># Initialize components</span></span><br><span class="line">        config_manager = ConfigManager(<span class="variable language_">self</span>.config_dir)</span><br><span class="line">        text_processor = TextFileProcessor(<span class="variable language_">self</span>.base_dir)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configurations and instantiate frameworks</span></span><br><span class="line">        frameworks = [</span><br><span class="line">            FrameworkAAnalyzer(config_manager.load_config(<span class="string">&quot;FrameworkA&quot;</span>)),</span><br><span class="line">            FrameworkBAnalyzer(config_manager.load_config(<span class="string">&quot;FrameworkB&quot;</span>))</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Perform analysis</span></span><br><span class="line">        analysis_manager = AnalysisManager(config_manager, text_processor)</span><br><span class="line">        results = analysis_manager.analyze_files(frameworks)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Save results</span></span><br><span class="line">        saver = ResultSaver()</span><br><span class="line">        saver.save_to_json(results, <span class="variable language_">self</span>.output_file)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>All implementations and improvements will be presented in separate posts.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>NLP</tag>
        <tag>sentiment_analysis</tag>
      </tags>
  </entry>
  <entry>
    <title>Text Classification. Historical overview, tools, and techniques.</title>
    <url>/hexo-blog/2024/11/19/post_ai_nlp__text_classification_intro_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Text classification is a fundamental task in Natural Language Processing (NLP) that involves categorizing text into predefined categories. Its applications range from sentiment analysis to spam detection, and news categorization to intent recognition in conversational AI. This document provides a historical overview, a comparative analysis of tools, and details about modern approaches like Word2Vec, FastText, GloVe, and deep learning.</p>
<ol>
<li><p>Historical Overview of Text Classification</p>
<ol>
<li><strong>Traditional Methods (1950s - 2000s)</strong><ol>
<li><em>Bag of Words (BoW):</em><ul>
<li>Represents text as a frequency vector of words.</li>
<li>Pros: Simple and interpretable.</li>
<li>Cons: Ignores word order and semantics.</li>
</ul>
</li>
<li><em>TF-IDF (Term Frequency-Inverse Document Frequency):</em><ul>
<li>Improves BoW by weighting rare words higher.</li>
<li>Pros: Better at distinguishing important terms.</li>
<li>Cons: Still ignores context and word relationships.</li>
</ul>
</li>
<li><em>Naive Bayes:</em><ul>
<li>Commonly used with BoW or TF-IDF for classification.</li>
<li>Pros: Fast and robust for small datasets.</li>
<li>Cons: Assumes word independence, which rarely holds.</li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
<li><p><strong>Emergence of Distributed Representations (2010s)</strong><br>The advent of distributed word representations marked a significant leap, addressing the limitations of sparse representations.</p>
<ol>
<li><em>Word2Vec (2013, Mikolov et al.):</em><ul>
<li>Generates dense vector embeddings using Skip-gram or CBOW.</li>
<li>Paper: Efficient Estimation of Word Representations in Vector Space<ul>
<li>DOI: <a href="https://doi.org/10.48550/arXiv.1301.3781">10.48550&#x2F;arXiv.1301.3781</a></li>
</ul>
</li>
<li>Pros: Captures semantic relationships and is computationally efficient.</li>
<li>Cons: Fixed-size embeddings and lacks out-of-vocabulary word handling.</li>
</ul>
</li>
<li><em>GloVe (2014, Pennington et al.):</em><br> Combines global word co-occurrence statistics with local context to produce embeddings.<ul>
<li>Paper: GloVe: Global Vectors for Word Representation<ul>
<li>DOI: <a href="https://aclanthology.org/D14-1162.pdf">10.3115&#x2F;v1&#x2F;D14-1162</a></li>
</ul>
</li>
<li>Pros: Effective at capturing statistical information.</li>
<li>Cons: Pre-trained on fixed corpora; inflexible for dynamic contexts.</li>
</ul>
</li>
<li><em>FastText (2016, Bojanowski et al.):</em><br>   Extends Word2Vec by representing words as n-grams of characters.</li>
</ol>
<ul>
<li>Paper:Enriching Word Vectors with Subword Information, 2016<ul>
<li>DOI: <a href="https://arxiv.org/pdf/1607.04606">10.48550&#x2F;arXiv.1607.04606</a></li>
</ul>
</li>
<li>Pros: Handles rare and out-of-vocabulary words better.</li>
<li>Cons: Increased computational cost compared to Word2Vec.</li>
</ul>
</li>
<li><p><strong>Deep Learning Era (Late 2010s - Present)</strong><br>The rise of neural networks transformed text classification. Key innovations include:</p>
<ol>
<li><em>Recurrent Neural Networks (RNNs):</em><br>Captures sequential dependencies but suffers from vanishing gradients.</li>
<li><em>Convolutional Neural Networks (CNNs):</em><br>Effective for capturing local patterns in text.<ul>
<li>Paper: An Introduction to Convolutional Neural Networks<ul>
<li>DOI: <a href="https://arxiv.org/pdf/1511.08458">10.48550&#x2F;arXiv.1511.08458</a></li>
</ul>
</li>
<li>Papper: A review of convolutional neural networks in computer<ul>
<li>Read the doc &gt;&gt;&gt; <a href="../../../../../docs/other/a_review_of_convolutional_neural_networks_in_computer_vision.pdf">A review of convolutional neural networks in computer</a></li>
</ul>
</li>
</ul>
</li>
<li><em>Transformers and Pre-trained Models (2018 - Present):</em><br>Models like:<ul>
<li>BERT<ul>
<li>Paper: BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding, 2018 <ul>
<li>DOI:<a href="https://doi.org/10.48550/arXiv.1810.04805">10.48550&#x2F;arXiv.1810.04805</a></li>
</ul>
</li>
</ul>
</li>
<li>GPT<ul>
<li>GPT-2<ul>
<li>Paper: Release Strategies and the Social Impacts of Language Models, 2019 </li>
<li>DOI:<a href="https://arxiv.org/pdf/1908.09203">10.48550&#x2F;arXiv.1908.09203</a></li>
</ul>
</li>
<li>GPT-3.5<ul>
<li>Paper: Language Models are Few-Shot Learners, 2020 </li>
<li>DOI:<a href="https://arxiv.org/pdf/2005.14165">10.48550&#x2F;arXiv.2005.14165</a></li>
</ul>
</li>
<li>GPT-4<ul>
<li>Paper: GPT-4 Technical Report, 2023 </li>
<li>DOI:<a href="https://doi.org/10.48550/arXiv.2303.08774">10.48550&#x2F;arXiv.2303.08774</a></li>
</ul>
</li>
</ul>
</li>
<li>and T5 revolutionized NLP by leveraging attention mechanisms and transfer learning.<ul>
<li>Paper: T5: Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer, 2019</li>
<li>DOI:<a href="https://arxiv.org/pdf/1910.10683">10.48550&#x2F;arXiv.1910.10683</a></li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<h2 id="Footnotes"><a href="#Footnotes" class="headerlink" title="Footnotes"></a>Footnotes</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">GLUE - The General Language Understanding Evaluation (GLUE) benchmark is a collection of resources for training, evaluating, and analyzing natural language understanding systems.<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">IMDB Dataset - Large Movie Review Dataset for Sentiment Analysis by Stanford.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CoNLL-2003 - Dataset for Named Entity Recognition and other sequence modeling tasks.<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">OntoNotes - Annotated dataset covering various linguistic phenomena.<a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WMT - Workshop on Machine Translation datasets for translation tasks.<a href="#fnref:5" rev="footnote"> ↩</a></span></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">6.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">OpenSubtitles - Large corpus of subtitles for multilingual tasks.<a href="#fnref:6" rev="footnote"> ↩</a></span></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">7.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CNN/DailyMail - Dataset for abstractive summarization tasks.<a href="#fnref:7" rev="footnote"> ↩</a></span></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">8.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">XSum - Dataset for extreme summarization of news articles.<a href="#fnref:8" rev="footnote"> ↩</a></span></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">9.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">AG News - News topic classification dataset.<a href="#fnref:9" rev="footnote"> ↩</a></span></li><li id="fn:10"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">10.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Reuters-21578 - Text categorization benchmark dataset.<a href="#fnref:10" rev="footnote"> ↩</a></span></li><li id="fn:11"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">11.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">SQuAD - Stanford Question Answering Dataset for reading comprehension tasks.<a href="#fnref:11" rev="footnote"> ↩</a></span></li><li id="fn:12"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">12.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">TriviaQA - Dataset containing trivia questions and evidence passages.<a href="#fnref:12" rev="footnote"> ↩</a></span></li><li id="fn:13"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">13.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WikiText - Dataset for language modeling based on Wikipedia articles.<a href="#fnref:13" rev="footnote"> ↩</a></span></li><li id="fn:14"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">14.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Penn Treebank - Corpus for linguistic annotation and modeling.<a href="#fnref:14" rev="footnote"> ↩</a></span></li><li id="fn:15"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">15.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Universal Dependencies - Framework for consistent grammatical annotation across languages.<a href="#fnref:15" rev="footnote"> ↩</a></span></li><li id="fn:16"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">16.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">WSJ Corpus - Dataset from Wall Street Journal articles for POS tagging.<a href="#fnref:16" rev="footnote"> ↩</a></span></li><li id="fn:17"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">17.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Coreference resolution (CR) is the task of finding all linguistic expressions (called mentions) in a given text that refer to the same real-world entity.<a href="#fnref:17" rev="footnote"> ↩</a></span></li><li id="fn:18"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">18.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">CoNLL-2012 - Shared task on coreference resolution and other NLP challenges.<a href="#fnref:18" rev="footnote"> ↩</a></span></li><li id="fn:19"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">19.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Annotated dataset created to evaluate RoBERTa’s performance on coreference tasks, with a focus on contextual embeddings.<a href="#fnref:19" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>NLP</tag>
        <tag>text_classification</tag>
      </tags>
  </entry>
  <entry>
    <title>Types of sentiment analysis techniques in NLP</title>
    <url>/hexo-blog/2024/11/21/post_ai_nlp__types_of_sentiment_analysis_techniques_in_nlp/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>related to : <a href="/hexo-blog/ai_ml__llm_system_prompts/">LLM system prompts</a></em></p>
<p><strong>Types of Sentiment Analysis Techniques for NLP (with DOI Papers)</strong><br><em>This post summarizes various sentiment analysis techniques, from lexicon-based methods to advanced deep learning approaches, along with DOI references to explore these concepts further.</em></p>
<hr>
<h2 id="1-Lexicon-Based-Sentiment-Analysis"><a href="#1-Lexicon-Based-Sentiment-Analysis" class="headerlink" title="1. Lexicon-Based Sentiment Analysis"></a><strong>1. Lexicon-Based Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Relies on predefined sentiment lexicons (dictionaries of positive, negative, and neutral words). Sentiment scores are calculated based on the presence and frequency of words.</li>
<li><strong>Applications</strong>: Basic polarity detection, customer feedback analysis.</li>
<li><strong>Key Paper</strong>:<br>Liu, B. (2012). <strong>Sentiment Analysis and Opinion Mining</strong>. <em>Synthesis Lectures on Human Language Technologies, 5</em>(1), 1–167.<br>DOI: <a href="https://doi.org/10.2200/S00416ED1V01Y201204HLT016">10.2200&#x2F;S00416ED1V01Y201204HLT016</a><br><a href="https://www.cs.uic.edu/~liub/FBS/SentimentAnalysis-and-OpinionMining.pdf">Read on www.cs.uic.edu</a></li>
</ul>
<hr>
<h2 id="2-Rule-Based-Sentiment-Analysis"><a href="#2-Rule-Based-Sentiment-Analysis" class="headerlink" title="2. Rule-Based Sentiment Analysis"></a><strong>2. Rule-Based Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Combines sentiment lexicons with linguistic rules (e.g., negation handling, intensifiers). Example: “not good” &#x3D; negative, “very bad” &#x3D; strongly negative.</li>
<li><strong>Applications</strong>: Sentiment classification for rule-governed domains.</li>
<li><strong>Key Paper</strong>:<br>Hutto, C., &amp; Gilbert, E. (2014). <strong>VADER: A Parsimonious Rule-Based Model for Sentiment Analysis of Social Media Text</strong>. <em>Proceedings of the Eighth International AAAI Conference on Weblogs and Social Media</em>.<br>DOI: <a href="https://doi.org/10.1609/icwsm.v8i1.14550">10.1609&#x2F;icwsm.v8i1.14550</a><br><a href="https://ojs.aaai.org/index.php/ICWSM/article/view/14550/14399">Read on ojs.aaai.org</a></li>
</ul>
<hr>
<h2 id="3-Machine-Learning-Based-Sentiment-Analysis"><a href="#3-Machine-Learning-Based-Sentiment-Analysis" class="headerlink" title="3. Machine Learning-Based Sentiment Analysis"></a><strong>3. Machine Learning-Based Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Uses ML models like Naive Bayes, SVM, or Decision Trees trained on labeled sentiment datasets.</li>
<li><strong>Applications</strong>: News sentiment analysis, customer reviews, product recommendations.</li>
<li><strong>Key Paper</strong>:<br>Pang, B., &amp; Lee, L. (2002). <strong>Thumbs Up? Sentiment Classification Using Machine Learning Techniques</strong>. <em>Proceedings of the ACL-02 Conference on Empirical Methods in Natural Language Processing (EMNLP)</em>, 10, 79–86.<br>DOI: <a href="https://doi.org/10.3115/1118693.1118704">10.3115&#x2F;1118693.1118704</a><br><a href="https://dl.acm.org/doi/pdf/10.3115/1118693.1118704">Read on dl.acm.org</a></li>
</ul>
<hr>
<h2 id="4-Deep-Learning-Based-Sentiment-Analysis"><a href="#4-Deep-Learning-Based-Sentiment-Analysis" class="headerlink" title="4. Deep Learning-Based Sentiment Analysis"></a><strong>4. Deep Learning-Based Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Uses neural networks (CNNs, RNNs, LSTMs, Transformers) to analyze sentiment from raw text.</li>
<li><strong>Applications</strong>: Social media analysis, multilingual sentiment detection.</li>
<li><strong>Key Papers</strong>:  <ul>
<li>Socher, R., et al. (2013). <strong>Recursive Deep Models for Semantic Compositionality Over a Sentiment Treebank</strong>. <em>Proceedings of EMNLP 2013</em>.<br><a href="https://nlp.stanford.edu/pubs/SocherEtAl_EMNLP2013.pdf">Read on nlp.stanford.edu</a></li>
<li>Vaswani, A., et al. (2017). <strong>Attention Is All You Need</strong>. <em>Advances in Neural Information Processing Systems (NeurIPS)</em>.<br>DOI: <a href="https://doi.org/10.48550/arXiv.1706.03762">10.48550&#x2F;arXiv.1706.03762</a><br><a href="https://arxiv.org/pdf/1706.03762">Read on arxiv.org</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-Aspect-Based-Sentiment-Analysis-ABSA"><a href="#5-Aspect-Based-Sentiment-Analysis-ABSA" class="headerlink" title="5. Aspect-Based Sentiment Analysis (ABSA)"></a><strong>5. Aspect-Based Sentiment Analysis (ABSA)</strong></h2><ul>
<li><strong>Description</strong>: Focuses on sentiment specific to aspects of a product or service (e.g., food, service in restaurant reviews).</li>
<li><strong>Applications</strong>: E-commerce reviews, detailed product feedback.</li>
<li><strong>Key Paper</strong>:<br>Pontiki, M., et al. (2014). <strong>SemEval-2014 Task 4: Aspect-Based Sentiment Analysis</strong>. <em>Proceedings of SemEval 2014</em>.<br>DOI: <a href="https://doi.org/10.3115/v1/S14-2004">10.3115&#x2F;v1&#x2F;S14-2004</a><br><a href="https://aclanthology.org/S14-2004.pdf">Read on aclanthology.org</a></li>
</ul>
<hr>
<h2 id="6-Emotion-Detection"><a href="#6-Emotion-Detection" class="headerlink" title="6. Emotion Detection"></a><strong>6. Emotion Detection</strong></h2><img src="/hexo-blog/images/img__racknitz_-_the_turk_3.jpg" style="width: 80%; max-width: 200px; border: 1px solid #ccc; padding: 11px; border-radius: 8px; float: left; margin-right: 22px" />



<ul>
<li><strong>Description</strong>: Detects specific emotions (e.g., happiness, anger, fear) rather than just positive or negative sentiment.</li>
<li><strong>Applications</strong>: Crisis management, psychological studies.</li>
<li><strong>Key Paper</strong>:<br>Mohammad, S. M., &amp; Turney, P. D. (2013). <strong>Crowdsourcing a Word–Emotion Association Lexicon</strong>. <em>Computational Intelligence, 29</em>(3), 436–465.<br>DOI: <a href="https://doi.org/10.1111/j.1467-8640.2012.00460.x">10.1111&#x2F;j.1467-8640.2012.00460.x</a><br><a href="https://sci-hub.se/https://doi.org/10.1111/j.1467-8640.2012.00460.x">Read on sci-hub.se</a></li>
</ul>
<br>

<hr>
<h2 id="7-Multimodal-Sentiment-Analysis"><a href="#7-Multimodal-Sentiment-Analysis" class="headerlink" title="7. Multimodal Sentiment Analysis"></a><strong>7. Multimodal Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Combines multiple data sources (e.g., text, audio, video) for sentiment analysis.</li>
<li><strong>Applications</strong>: Video sentiment analysis, call center analytics.</li>
<li><strong>Key Paper</strong>:<br>Zadeh, A., et al. (2017). <strong>Tensor Fusion Network for Multimodal Sentiment Analysis</strong>. <em>Proceedings of EMNLP 2017</em>.<br>DOI: <a href="https://doi.org/10.48550/arXiv.1707.07250">10.48550&#x2F;arXiv.1707.07250</a><br><a href="https://arxiv.org/pdf/1707.07250">Read on arxiv.org</a></li>
</ul>
<hr>
<h2 id="8-Hybrid-Sentiment-Analysis"><a href="#8-Hybrid-Sentiment-Analysis" class="headerlink" title="8. Hybrid Sentiment Analysis"></a><strong>8. Hybrid Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Combines lexicon-based, rule-based, and machine learning techniques for robust and accurate sentiment detection.</li>
<li><strong>Applications</strong>: Industry-specific sentiment analysis.</li>
<li><strong>Key Paper</strong>:<br>Cambria, E., et al. (2013). <strong>New Avenues in Opinion Mining and Sentiment Analysis</strong>. <em>IEEE Intelligent Systems, 28</em>(2), 15–21.<br>DOI: <a href="https://doi.org/10.1109/MIS.2013.30">10.1109&#x2F;MIS.2013.30</a><br><a href="https://sci-hub.se/10.1109/MIS.2013.30">Read on sci-hub.se</a></li>
</ul>
<hr>
<h2 id="9-Transfer-Learning-for-Sentiment-Analysis"><a href="#9-Transfer-Learning-for-Sentiment-Analysis" class="headerlink" title="9. Transfer Learning for Sentiment Analysis"></a><strong>9. Transfer Learning for Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Fine-tunes pre-trained models (e.g., BERT, RoBERTa, GPT) for sentiment classification tasks.</li>
<li><strong>Applications</strong>: Multilingual sentiment analysis, specialized domains.</li>
<li><strong>Key Paper</strong>:<br>Devlin, J., et al. (2019). <strong>BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</strong>. <em>Proceedings of NAACL 2019</em>.<br>DOI: <a href="https://doi.org/10.48550/arXiv.1810.04805">10.48550&#x2F;arXiv.1810.04805</a><br><a href="https://arxiv.org/pdf/1810.04805">Read on arxiv.org</a></li>
</ul>
<hr>
<h2 id="10-Fine-Grained-Sentiment-Analysis"><a href="#10-Fine-Grained-Sentiment-Analysis" class="headerlink" title="10. Fine-Grained Sentiment Analysis"></a><strong>10. Fine-Grained Sentiment Analysis</strong></h2><ul>
<li><strong>Description</strong>: Assigns sentiment scores on a fine-grained scale (e.g., star ratings from 1 to 5).</li>
<li><strong>Applications</strong>: Detailed product reviews, star-rating predictions.</li>
<li><strong>Key Paper</strong>:<br>Yang, B., et al. (2016). <strong>Hierarchical Attention Networks for Document Classification</strong>. <em>Proceedings of NAACL 2016</em>.<br>DOI: <a href="https://doi.org/10.18653/v1/N16-1174">10.18653&#x2F;v1&#x2F;N16-1174</a></li>
</ul>
<hr>
<h2 id="Other-resources"><a href="#Other-resources" class="headerlink" title="Other resources"></a>Other resources</h2><ol>
<li><a href="https://www.nice.com/info/top-sentiment-analysis-tools-and-techniques">https://www.nice.com/info/top-sentiment-analysis-tools-and-techniques</a> </li>
<li>Article: Opinion Mining and Sentiment Analysis. January 2008. Foundations and Trends® in Information Retrieval 2(1–2):1-135<ul>
<li>DOI:10.1561&#x2F;1500000011</li>
<li><a href="https://www.cs.cornell.edu/home/llee/omsa/omsa.pdf">Read on cs.cornell.edu</a></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>NLTK general</title>
    <url>/hexo-blog/2024/12/04/post_ai_nltk__general/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="NLTK-Natural-Language-Toolkit-for-Natural-Language-Text-Processing-NLTP"><a href="#NLTK-Natural-Language-Toolkit-for-Natural-Language-Text-Processing-NLTP" class="headerlink" title="NLTK - Natural Language Toolkit for Natural Language Text Processing (NLTP)"></a>NLTK - Natural Language Toolkit for Natural Language Text Processing (NLTP)</h2><hr>
<h3 id="General"><a href="#General" class="headerlink" title="General"></a>General</h3><ol>
<li><a href="https://www.nltk.org/howto.html#example-usage-of-nltk-modules">Example usage of NLTK modules</a></li>
<li><a href="https://github.com/nltk/nltk/wiki">NLTK WIKI</a></li>
<li><a href="https://github.com/nltk/nltk/wiki/Projects">NLTK WIKI Projects</a></li>
<li><a href="https://github.com/nltk/nltk/FAQ">NLTK FAQ</a></li>
<li><a href="http://text-processing.com/demo/">NLTK Interactive online demos</a></li>
</ol>
<hr>
<h3 id="NLTK-books"><a href="#NLTK-books" class="headerlink" title="NLTK books"></a>NLTK books</h3><p><a href="https://www.nltk.org/book/">Natural Language Processing with Python – Analyzing Text with the Natural Language Toolkit. Steven Bird, Ewan Klein, and Edward Loper</a></p>
<hr>
<h4 id="NLTK-courses"><a href="#NLTK-courses" class="headerlink" title="NLTK courses"></a>NLTK courses</h4><p><a href="http://www.nltk.org/courses">NLTK courses</a></p>
<hr>
<h4 id="About-‘Natural-Language-Text-Processing’"><a href="#About-‘Natural-Language-Text-Processing’" class="headerlink" title="About ‘Natural Language Text Processing’"></a>About ‘Natural Language Text Processing’</h4><p>Natural Language Text Processing encompasses a range of techniques and tools to analyze, manipulate, and understand human language in text form. Below is a detailed explanation of key terms, their technical details, and implementation options in NLP.</p>
<p>Natural Language Text Processing include but not limited by <code>sentiment analysis</code>, which uses text classification to determine <code>sentiment polarity</code>, <code>word tokenization</code> , <code>stemming</code> text, <code>speech tagging</code> using <code>speech taggers</code>, <code>chunk extraction</code> and named <code>entity recognition</code>. </p>
<hr>
<h4 id="Sentiment-Analysis"><a href="#Sentiment-Analysis" class="headerlink" title="Sentiment Analysis"></a><strong>Sentiment Analysis</strong></h4><p><strong>Definition</strong>: Sentiment Analysis determines the emotional tone behind a body of text. It classifies text as positive, negative, or neutral.</p>
<p><strong>Approaches</strong>:</p>
<ol>
<li><strong>Lexicon-Based Methods</strong>:<ul>
<li>Use predefined dictionaries of positive and negative words.</li>
<li>Examples: SentiWordNet, VADER.</li>
</ul>
</li>
<li><strong>Machine Learning-Based Methods</strong>:<ul>
<li>Train a model on labeled datasets to classify sentiments.</li>
<li>Examples: Naive Bayes, Support Vector Machines (SVM).</li>
</ul>
</li>
<li><strong>Deep Learning Methods</strong>:<ul>
<li>Utilize neural networks like RNNs, LSTMs, or transformers.</li>
<li>Examples: BERT, RoBERTa, DistilBERT.</li>
</ul>
</li>
</ol>
<hr>
<h4 id="Word-Tokenization"><a href="#Word-Tokenization" class="headerlink" title="Word Tokenization"></a><strong>Word Tokenization</strong></h4><p><strong>Definition</strong>: The process of splitting a sentence or paragraph into individual words or tokens.</p>
<p><strong>Options</strong>:</p>
<ol>
<li><strong>Rule-Based Tokenization</strong>:<ul>
<li>Uses language-specific rules to split text.</li>
<li>Example Tools: NLTK, SpaCy.</li>
</ul>
</li>
<li><strong>Statistical Tokenization</strong>:<ul>
<li>Employs probabilistic models for token boundaries.</li>
<li>Examples: Punkt tokenizer.</li>
</ul>
</li>
<li><strong>Subword Tokenization</strong>:<ul>
<li>Splits text into subwords to handle rare words.</li>
<li>Examples: Byte Pair Encoding (BPE), WordPiece (used in BERT).</li>
</ul>
</li>
</ol>
<hr>
<h4 id="Stemming"><a href="#Stemming" class="headerlink" title="Stemming"></a><strong>Stemming</strong></h4><p><strong>Definition</strong>: Reduces words to their base or root form (e.g., “running” → “run”).</p>
<p><strong>Methods</strong>:</p>
<ol>
<li><strong>Porter Stemmer</strong>: Algorithmic and rule-based.</li>
<li><strong>Lancaster Stemmer</strong>: Faster but more aggressive.</li>
<li><strong>Snowball Stemmer</strong>: Improved version of Porter.</li>
</ol>
<p><strong>Usage</strong>: Common in search engines and text indexing.</p>
<hr>
<h4 id="Speech-Tagging"><a href="#Speech-Tagging" class="headerlink" title="Speech Tagging"></a><strong>Speech Tagging</strong></h4><p><strong>Definition</strong>: Assigning parts of speech (POS) tags (e.g., noun, verb) to each word in a text.</p>
<p><strong>Taggers</strong>:</p>
<ol>
<li><strong>Rule-Based POS Tagging</strong>:<ul>
<li>Uses manually crafted rules.</li>
</ul>
</li>
<li><strong>Statistical POS Tagging</strong>:<ul>
<li>Relies on probabilistic models (e.g., Hidden Markov Models).</li>
</ul>
</li>
<li><strong>Neural POS Tagging</strong>:<ul>
<li>Utilizes neural networks for higher accuracy.</li>
</ul>
</li>
</ol>
<p><strong>Example Tools</strong>: NLTK POS Tagger, SpaCy.</p>
<hr>
<h4 id="Chunk-Extraction"><a href="#Chunk-Extraction" class="headerlink" title="Chunk Extraction"></a><strong>Chunk Extraction</strong></h4><p><strong>Definition</strong>: Identifies and groups related words (e.g., noun phrases, verb phrases).</p>
<p><strong>Types</strong>:</p>
<ol>
<li><strong>Shallow Parsing</strong>:<ul>
<li>Focuses on high-level phrase detection.</li>
</ul>
</li>
<li><strong>Dependency Parsing</strong>:<ul>
<li>Analyzes grammatical structure by identifying relationships between words.</li>
</ul>
</li>
</ol>
<p><strong>Example Tools</strong>: OpenNLP, CoreNLP.</p>
<hr>
<h4 id="Named-Entity-Recognition-NER"><a href="#Named-Entity-Recognition-NER" class="headerlink" title="Named Entity Recognition (NER)"></a><strong>Named Entity Recognition (NER)</strong></h4><p><strong>Definition</strong>: Identifies and categorizes entities in text (e.g., names, organizations, dates).</p>
<p><strong>NER Types</strong>:</p>
<ol>
<li><strong>Rule-Based NER</strong>:<ul>
<li>Uses pattern-matching rules.</li>
<li>Examples: Regular Expressions.</li>
</ul>
</li>
<li><strong>Statistical NER</strong>:<ul>
<li>Trains models on labeled entity datasets.</li>
<li>Examples: Conditional Random Fields (CRF).</li>
</ul>
</li>
<li><strong>Neural NER</strong>:<ul>
<li>Deep learning-based methods for context understanding.</li>
<li>Examples: SpaCy, Flair, Hugging Face.</li>
</ul>
</li>
</ol>
<hr>
<h3 id="Implementation-in-NLP"><a href="#Implementation-in-NLP" class="headerlink" title="Implementation in NLP"></a><strong>Implementation in NLP</strong></h3><ol>
<li><p><strong>Libraries and Frameworks</strong>:</p>
<ul>
<li><strong>NLTK</strong>: A foundational library for tokenization, stemming, and POS tagging.</li>
<li><strong>SpaCy</strong>: Industrial-strength NLP with support for tokenization, POS tagging, NER, etc.</li>
<li><strong>Transformers (Hugging Face)</strong>: Pre-trained models for sentiment analysis, NER, and more.</li>
<li><strong>CoreNLP</strong>: Comprehensive NLP suite by Stanford.</li>
</ul>
</li>
<li><p><strong>Use Cases</strong>:</p>
<ul>
<li>Sentiment analysis in social media monitoring.</li>
<li>Tokenization in machine translation.</li>
<li>NER for information extraction from documents.</li>
</ul>
</li>
</ol>
<hr>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://nlp.stanford.edu/">Natural Language Processing | Stanford NLP</a>  </li>
<li><a href="https://huggingface.co/">Understanding NLP Techniques | Hugging Face</a>  </li>
<li><a href="https://www.nltk.org/">NLTK Official Documentation</a></li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>NLTK</tag>
      </tags>
  </entry>
  <entry>
    <title>Glossary of Machine Learning and AI Terms</title>
    <url>/hexo-blog//ai/glossary-of-machine-learning-and-ai-terms/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>Feel free to send me your thoughts, notes, other references. My contact details you can find on <a href="https://www.linkedin.com/in/romandenysenko/">LinkedIn</a></em></p>
<h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a>Index</h3><p><a href="#A">A</a>  <a href="#B">B</a>  <a href="#C">C</a>  <a href="#D">D</a>  <a href="#E">E</a>  <a href="#F">F</a>  <a href="#G">G</a>  <a href="#H">H</a>  <a href="#I">I</a>  <a href="#J">J</a>  <a href="#K">K</a>  <a href="#L">L</a>  <a href="#M">M</a>  <a href="#N">N</a>  <a href="#O">O</a>  <a href="#P">P</a>  <a href="#Q">Q</a>  <a href="#R">R</a>  <a href="#S">S</a>  <a href="#T">T</a>  <a href="#U">U</a>  <a href="#V">V</a>  <a href="#W">W</a>  <a href="#X">X</a>  <a href="#Y">Y</a>  <a href="#Z">Z</a></p>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="Autoencoders"><a href="#Autoencoders" class="headerlink" title="Autoencoders"></a>Autoencoders</h3><p>Autoencoders are neural network architectures used for <a href="#Unsupervised-learning">unsupervised learning</a>. They are designed to compress input data into a lower-dimensional latent space (encoding) and then reconstruct the original data from this compressed representation (decoding). The primary objective is to minimize the reconstruction error, typically measured as the difference between input and output. </p>
<p><strong>Applications:</strong></p>
<ol>
<li><strong>Dimensionality Reduction</strong>: Acts as a non-linear alternative to Principal Component Analysis (PCA).</li>
<li><strong>Feature Learning</strong>: Learns compact and meaningful representations of data.</li>
<li><strong>Denoising</strong>: Removes noise from corrupted data by training on clean samples.</li>
<li><strong>Anomaly Detection</strong>: Identifies unusual patterns by observing high reconstruction errors.</li>
</ol>
<p><strong>Variants:</strong></p>
<ul>
<li><strong>Sparse Autoencoders</strong>: Encourage sparsity in the hidden units to create compressed and interpretable features.</li>
<li><strong>Denoising Autoencoders</strong>: Add noise to inputs during training, forcing the network to learn robust features.</li>
<li><strong>Convolutional Autoencoders</strong>: Specialize in image data, leveraging convolutional layers for spatial feature learning.</li>
</ul>
<p><strong>Key References:</strong></p>
<ul>
<li><strong>Paper</strong>: <em>Efficient Learning of Sparse Representations with an Energy-Based Model, 2006.</em><ul>
<li><strong>DOI</strong>: 10.7551&#x2F;mitpress&#x2F;7503.003.0147</li>
<li><strong>Read on</strong>: <a href="https://cs.nyu.edu/~sumit/publications/assets/nips06.pdf">cs.nyu.edu</a></li>
</ul>
</li>
<li><strong>Paper</strong>: Stacked Denoising Autoencoders: Learning Useful Representations in a Deep Network with a Local Denoising Criterion, 2010.<br><strong>Read on</strong>: <a href="https://www.cse.fau.edu/~xqzhu/courses/cap5615/reading/autoencoder.pdf">cse.fau.edu</a></li>
</ul>
<hr>
<h3 id="Artificial-Neural-Networks-ANNs"><a href="#Artificial-Neural-Networks-ANNs" class="headerlink" title="Artificial Neural Networks (ANNs)"></a>Artificial Neural Networks (ANNs)</h3><p>Artificial Neural Networks (ANNs) are computational processing systems inspired by biological nervous systems (e.g., the human brain).</p>
<hr>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="Base-model"><a href="#Base-model" class="headerlink" title="Base model"></a>Base model</h3><p>The original, foundational version of a large language model, which has not been fine-tuned.</p>
<hr>
<h3 id="BERT"><a href="#BERT" class="headerlink" title="BERT"></a>BERT</h3><h2 id="Bidirectional-Encoder-Representations-from-Transformers-DEveloped-in-2018-BERT-is-designed-to-pre-train-deep-bidirectional-representations-from-unlabeled-text-by-jointly-conditioning-on-both-left-and-right-context-in-all-layers-As-a-result-the-pre-trained-BERT-model-can-be-fine-tuned-with-just-one-additional-output-layer-to-create-state-of-the-art-models-for-a-wide-range-of-tasks-such-as-question-answering-and-language-inference-without-substantial-task-specific-architecture-modifications-BERT-is-conceptually-simple-and-empirically-powerful-It-obtains-new-state-of-the-art-results-on-eleven-natural-language-processing-tasks-including-pushing-the-GLUE-score-to-80-5-7-7-point-absolute-improvement-MultiNLI-accuracy-to-86-7-4-6-absolute-improvement-SQuAD-v1-1-question-answering-Test-F1-to-93-2-1-5-point-absolute-improvement-and-SQuAD-v2-0-Test-F1-to-83-1-5-1-point-absolute-improvement-Paper-BERT-Pre-training-of-Deep-Bidirectional-Transformers-forLanguage-Understanding-2018-DOI-10-18653-v1-N19-1423-Read-on-arxiv-org-Post-BERT-Transformers-–-How-Do-They-Work"><a href="#Bidirectional-Encoder-Representations-from-Transformers-DEveloped-in-2018-BERT-is-designed-to-pre-train-deep-bidirectional-representations-from-unlabeled-text-by-jointly-conditioning-on-both-left-and-right-context-in-all-layers-As-a-result-the-pre-trained-BERT-model-can-be-fine-tuned-with-just-one-additional-output-layer-to-create-state-of-the-art-models-for-a-wide-range-of-tasks-such-as-question-answering-and-language-inference-without-substantial-task-specific-architecture-modifications-BERT-is-conceptually-simple-and-empirically-powerful-It-obtains-new-state-of-the-art-results-on-eleven-natural-language-processing-tasks-including-pushing-the-GLUE-score-to-80-5-7-7-point-absolute-improvement-MultiNLI-accuracy-to-86-7-4-6-absolute-improvement-SQuAD-v1-1-question-answering-Test-F1-to-93-2-1-5-point-absolute-improvement-and-SQuAD-v2-0-Test-F1-to-83-1-5-1-point-absolute-improvement-Paper-BERT-Pre-training-of-Deep-Bidirectional-Transformers-forLanguage-Understanding-2018-DOI-10-18653-v1-N19-1423-Read-on-arxiv-org-Post-BERT-Transformers-–-How-Do-They-Work" class="headerlink" title="Bidirectional Encoder Representations from Transformers. DEveloped in 2018.BERT is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications.BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5% (7.7% point absolute improvement), MultiNLI accuracy to 86.7% (4.6% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement).Paper:  - BERT: Pre-training of Deep Bidirectional Transformers forLanguage Understanding. 2018    - DOI: 10.18653&#x2F;v1&#x2F;N19-1423    - Read on arxiv.org  Post  - BERT Transformers – How Do They Work?"></a>Bidirectional Encoder Representations from Transformers. DEveloped in 2018.<br>BERT is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications.<br>BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5% (7.7% point absolute improvement), MultiNLI accuracy to 86.7% (4.6% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement).<br><strong>Paper:</strong><br>  - BERT: Pre-training of Deep Bidirectional Transformers for<br>Language Understanding. 2018<br>    - DOI: <a href="https://doi.org/10.18653/v1%2FN19-1423">10.18653&#x2F;v1&#x2F;N19-1423</a><br>    - <a href="https://arxiv.org/pdf/1810.04805">Read on arxiv.org</a><br>  <strong>Post</strong><br>  - <a href="https://www.exxactcorp.com/blog/Deep-Learning/how-do-bert-transformers-work">BERT Transformers – How Do They Work?</a></h2><h3 id="BERTScore"><a href="#BERTScore" class="headerlink" title="BERTScore"></a>BERTScore</h3><ul>
<li><strong>Description</strong>: Leverages contextual embeddings from BERT to evaluate semantic similarity between the generated and reference text.</li>
<li><strong>Purpose</strong>: Captures semantic similarity more effectively than traditional n-gram-based metrics.</li>
</ul>
<table>
<thead>
<tr>
<th>Metric</th>
<th>Range</th>
<th>Interpretation</th>
<th>Example Values</th>
</tr>
</thead>
<tbody><tr>
<td><strong>BERTScore (Precision)</strong></td>
<td>0 to 1</td>
<td>Measures how much of the generated text aligns with the reference.</td>
<td>0.7 (moderate), 0.85 (good), 0.95 (excellent)</td>
</tr>
<tr>
<td><strong>BERTScore (Recall)</strong></td>
<td>0 to 1</td>
<td>Measures how much of the reference text is captured in the generated output.</td>
<td>0.6 (moderate), 0.8 (good), 0.9 (excellent)</td>
</tr>
<tr>
<td><strong>BERTScore (F1)</strong></td>
<td>0 to 1</td>
<td>Harmonic mean of precision and recall; overall measure of similarity.</td>
<td>0.65 (moderate), 0.82 (good), 0.9 (excellent)</td>
</tr>
</tbody></table>
<hr>
<h3 id="Bias"><a href="#Bias" class="headerlink" title="Bias"></a>Bias</h3><p>The disproportionate favor or prejudice towards a specific item or group. AI algorithms may inherit biases from historical data or human trainers, risking perpetuation of these biases in predictions.</p>
<hr>
<h3 id="BLEU"><a href="#BLEU" class="headerlink" title="BLEU"></a>BLEU</h3><p>BLEU (Bilingual Evaluation Understudy) is an algorithm for evaluating the quality of text which has been machine-translated from one natural language to another. Quality is considered to be the correspondence between a machine’s output and that of a human: “the closer a machine translation is to a professional human translation, the better it is” – this is the central idea behind BLEU.<br>BLEU was one of the first metrics to claim a high correlation with human judgements of quality, and remains one of the most popular automated and inexpensive metrics.</p>
<ul>
<li>Paper: “BLEU: a Method for Automatic Evaluation of Machine Translation”. Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), Philadelphia, July 2002, pp. 311-318.<ul>
<li>DOI: 10.3115&#x2F;1073083.1073135</li>
<li>Read on <a href="https://aclanthology.org/P02-1040.pdf">aclanthology.org</a></li>
<li>Read on <a href="https://sci-hub.se/https://doi.org/10.3115/1073083.1073135">sci-hub.se</a></li>
</ul>
</li>
</ul>
<hr>
<h3 id="BLEU-score"><a href="#BLEU-score" class="headerlink" title="BLEU score"></a>BLEU score</h3><ul>
<li>BLEU scores are calculated for individual translated segments—generally sentences—by comparing them with a set of good quality reference translations. Those scores are then averaged over the whole corpus to reach an estimate of the translation’s overall quality. Neither intelligibility nor grammatical correctness are not taken into account.</li>
<li>The BLEU algorithm compares consecutive phrases of the automatic translation with the consecutive phrases it finds in the reference translation, and counts the number of matches, in a weighted fashion. These matches are position independent. A higher match degree indicates a higher degree of similarity with the reference translation, and higher score. Intelligibility and grammatical correctness aren’t taken into account.</li>
<li>web article: <a href="https://www.geeksforgeeks.org/nlp-bleu-score-for-evaluating-neural-machine-translation-python/#how-to-compute-bleu-score">“How to Compute BLEU Score”</a></li>
</ul>
<hr>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="Convolutional-layer"><a href="#Convolutional-layer" class="headerlink" title="Convolutional layer"></a>Convolutional layer</h3><p>A core component of CNNs that processes input data using filters (kernels) to produce feature maps, identifying patterns or features.</p>
<hr>
<h3 id="Convolutional-Neural-Network-CNN"><a href="#Convolutional-Neural-Network-CNN" class="headerlink" title="Convolutional Neural Network (CNN)"></a>Convolutional Neural Network (CNN)</h3><ol>
<li>CNN - a type of neural network specialized for analyzing visual data, learning features via filter optimization.</li>
<li>CNN - similar to ANNs but optimized for image data, with layers designed for feature extraction and classification.</li>
</ol>
<ul>
<li><a href="https://www.ibm.com/topics/convolutional-neural-networks">What are convolutional neural networks?</a></li>
</ul>
<hr>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h3><p>The training data used to teach an LLM patterns and relationships.</p>
<hr>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="False-positive"><a href="#False-positive" class="headerlink" title="False positive"></a>False positive</h3><p>An incorrect prediction where a model identifies a condition or class that is not present.</p>
<hr>
<h3 id="F1-score"><a href="#F1-score" class="headerlink" title="F1 score"></a>F1 score</h3><p>A performance metric for classification models combining precision and recall into a single value ranging from 0 (poor) to 1 (excellent).</p>
<hr>
<h3 id="Few-shot"><a href="#Few-shot" class="headerlink" title="Few-shot"></a>Few-shot</h3><p>Using a small number of examples to guide the model in performing a new task.</p>
<hr>
<h3 id="Fine-tuning"><a href="#Fine-tuning" class="headerlink" title="Fine-tuning"></a>Fine-tuning</h3><p>Adapting a pre-trained model to a specific task or domain by training it on a smaller, specialized dataset.</p>
<hr>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h3 id="Generative-AI"><a href="#Generative-AI" class="headerlink" title="Generative AI"></a>Generative AI</h3><p>AI systems capable of creating new content, such as text, images, or audio.</p>
<hr>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><h3 id="Hallucination"><a href="#Hallucination" class="headerlink" title="Hallucination"></a>Hallucination</h3><p>When an LLM generates plausible but factually incorrect or nonsensical information.</p>
<hr>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="Inference"><a href="#Inference" class="headerlink" title="Inference"></a>Inference</h3><p>The process of using a trained model to make predictions or generate outputs.</p>
<hr>
<h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><h3 id="LanguageTool"><a href="#LanguageTool" class="headerlink" title="LanguageTool"></a>LanguageTool</h3><p>LanguageTool is an AI-based grammar checker. Paste your text or start typing below to check grammatical errors, and spelling mistakes across languages.<br>Reference: <a href="https://languagetool.org/">LanguageTool</a></p>
<h3 id="LCS"><a href="#LCS" class="headerlink" title="LCS"></a>LCS</h3><p>LCS &#x3D; Longest Common Subsequence</p>
<hr>
<h3 id="LoRA"><a href="#LoRA" class="headerlink" title="LoRA"></a>LoRA</h3><p>Low-Rank Adaptation, a fine-tuning method requiring less computational resources compared to full fine-tuning.</p>
<hr>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><h3 id="Machine-Learning-Operations-MLOps"><a href="#Machine-Learning-Operations-MLOps" class="headerlink" title="Machine Learning Operations (MLOps)"></a>Machine Learning Operations (MLOps)</h3><p>The process of deploying, monitoring, and updating machine learning models in production environments.</p>
<hr>
<h3 id="METEOR"><a href="#METEOR" class="headerlink" title="METEOR"></a>METEOR</h3><p>Metric. METEOR &#x3D; <strong>M</strong>etric for <strong>E</strong>valuation of <strong>T</strong>ranslation with <strong>E</strong>xplicit <strong>OR</strong>dering</p>
<ul>
<li><strong>Description</strong>: Evaluates semantic similarity by considering unigram overlaps, stemming, synonyms, and paraphrasing.</li>
<li><strong>Score Parameter</strong>: <code>METEOR Score</code>, <a href="#meteor-score">ref</a></li>
<li><strong>Purpose</strong>: Provides a balanced metric for machine translation and summarization tasks.</li>
</ul>
<h3 id="METEOR-Score"><a href="#METEOR-Score" class="headerlink" title="METEOR Score"></a>METEOR Score</h3><ul>
<li>Metric: <a href="#meteor">METEOR</a></li>
<li>Range: 0 to 1</li>
<li>Interpretation: Combines precision and recall, with semantic similarity (e.g., synonyms, stems)</li>
<li>Example Values: Higher scores indicate better matches.	0.3 (low), 0.6 (moderate), 0.85 (high)</li>
</ul>
<hr>
<h3 id="MLOps"><a href="#MLOps" class="headerlink" title="MLOps"></a>MLOps</h3><p>Short for Machine Learning Operations.</p>
<hr>
<h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><h3 id="Named-Entity-Recognition"><a href="#Named-Entity-Recognition" class="headerlink" title="Named Entity Recognition"></a>Named Entity Recognition</h3><h2 id="Named-Entity-Recognition-NER-Named-Entity-Recognition-seeks-to-extract-substrings-within-a-text-that-name-real-world-objects-and-to-determine-their-type-for-example-whether-they-refer-to-persons-or-organizations-Paper-A-survey-on-recent-advances-in-Named-Entity-Recognition-2024-Named-Entity-Recognition-NER-is-a-sub-task-of-information-extraction-in-Natural-Language-Processing-NLP-that-classifies-named-entities-into-predefined-categories-such-as-person-names-organizations-locations-medical-codes-time-expressions-quantities-monetary-values-and-more-Read-on-arxiv-org-Named-Entity-Recognition-with-LLMs-—-Extract-Conversation-Metadata-Medium"><a href="#Named-Entity-Recognition-NER-Named-Entity-Recognition-seeks-to-extract-substrings-within-a-text-that-name-real-world-objects-and-to-determine-their-type-for-example-whether-they-refer-to-persons-or-organizations-Paper-A-survey-on-recent-advances-in-Named-Entity-Recognition-2024-Named-Entity-Recognition-NER-is-a-sub-task-of-information-extraction-in-Natural-Language-Processing-NLP-that-classifies-named-entities-into-predefined-categories-such-as-person-names-organizations-locations-medical-codes-time-expressions-quantities-monetary-values-and-more-Read-on-arxiv-org-Named-Entity-Recognition-with-LLMs-—-Extract-Conversation-Metadata-Medium" class="headerlink" title="Named Entity Recognition &#x3D; NER- Named Entity Recognition seeks to extract substrings within a text that name real-world objects and to determine their type (for example, whether they refer to persons or organizations).Paper: A survey on recent advances in Named Entity Recognition, 2024.- Named Entity Recognition (NER) is a sub-task of information extraction in Natural Language Processing (NLP) that classifies named entities into predefined categories such as person names, organizations, locations, medical codes, time expressions, quantities, monetary values, and more.* Read on arxiv.org* Named Entity Recognition with LLMs — Extract Conversation Metadata | Medium"></a><strong>Named Entity Recognition &#x3D; NER</strong><br>- Named Entity Recognition seeks to extract substrings within a text that name real-world objects and to determine their type (for example, whether they refer to persons or organizations).<br>Paper: A survey on recent advances in Named Entity Recognition, 2024.<br>- Named Entity Recognition (NER) is a sub-task of information extraction in Natural Language Processing (NLP) that classifies named entities into predefined categories such as person names, organizations, locations, medical codes, time expressions, quantities, monetary values, and more.<br>* Read on <a href="https://arxiv.org/html/2401.10825v1">arxiv.org</a><br>* <a href="https://medium.com/@grisanti.isidoro/named-entity-recognition-with-llms-extract-conversation-metadata-94d5536178f2">Named Entity Recognition with LLMs — Extract Conversation Metadata | Medium</a></h2><h2 id="Neural-Process-Family"><a href="#Neural-Process-Family" class="headerlink" title="Neural Process Family"></a>Neural Process Family</h2><p>Neural Process Family &#x3D; NPF</p>
<hr>
<h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><h3 id="Perplexity"><a href="#Perplexity" class="headerlink" title="Perplexity"></a>Perplexity</h3><p>A measure of how well a language model predicts a sample of text, with lower scores indicating better performance.</p>
<table>
<thead>
<tr>
<th>Range</th>
<th>Interpretation</th>
<th>Example Values</th>
</tr>
</thead>
<tbody><tr>
<td>1 to ∞</td>
<td>Measures the uncertainty of the model’s predictions. Lower perplexity indicates better performance. A perplexity of 1 means perfect predictions, while higher values indicate more uncertainty and worse performance.</td>
<td>20 (good), 50 (average), 200 (poor)</td>
</tr>
</tbody></table>
<hr>
<h3 id="Pooling-layers"><a href="#Pooling-layers" class="headerlink" title="Pooling layers"></a>Pooling layers</h3><p>Layers in CNNs designed to reduce the dimensionality of feature maps, lowering computational complexity.</p>
<hr>
<h3 id="Precision"><a href="#Precision" class="headerlink" title="Precision"></a>Precision</h3><p>A metric measuring the ratio of true positives to all predicted positives in a classification model.</p>
<hr>
<h3 id="Pre-trained-model"><a href="#Pre-trained-model" class="headerlink" title="Pre-trained model"></a>Pre-trained model</h3><p>A model that has been trained on a dataset and may be further fine-tuned for specific tasks.</p>
<hr>
<h3 id="Prompt-engineering"><a href="#Prompt-engineering" class="headerlink" title="Prompt engineering"></a>Prompt engineering</h3><p>The art of crafting effective inputs to elicit desired output from an LLM.</p>
<hr>
<h3 id="Prompt-template"><a href="#Prompt-template" class="headerlink" title="Prompt template"></a>Prompt template</h3><p>Specially formatted instructions used by LLMs to define the input and output.</p>
<hr>
<h1 id="R"><a href="#R" class="headerlink" title="R"></a>R</h1><h3 id="R-A-G-Retrieval-Augmented-Generation"><a href="#R-A-G-Retrieval-Augmented-Generation" class="headerlink" title="R.A.G. (Retrieval-Augmented Generation)"></a>R.A.G. (Retrieval-Augmented Generation)</h3><p>A technique combining external information retrieval with the generative capabilities of an LLM for improved accuracy.</p>
<hr>
<h3 id="ROUGE"><a href="#ROUGE" class="headerlink" title="ROUGE"></a>ROUGE</h3><p>ROUGE (Recall-Oriented Understudy for Gisting Evaluation)</p>
<ul>
<li><strong>Score parameters</strong>:<ul>
<li><code>ROUGE-1</code>:	Range: 0 to 1, Measures the overlap of unigram (single word) between the generated and reference text.	0.2 (low overlap), 0.5 (moderate), 0.8 (high)</li>
<li><code>ROUGE-2</code>:	Range: 0 to 1, Measures the overlap of bigrams (two consecutive words) between generated and reference text.	0.1 (low), 0.4 (moderate), 0.7 (high)</li>
<li><code>ROUGE-L</code>:	Range: 0 to 1, Measures the longest common subsequence (LCS) between the generated and reference text.	0.3 (low), 0.6 (moderate), 0.9 (high)</li>
<li><code>ROUGE-Lsum</code> is specifically designed for summarization tasks, particularly when evaluating summaries. It computes the ROUGE-L score for the summarization task based on how well the generated summary matches the reference summary.</li>
</ul>
</li>
<li><strong>Purpose</strong>: Evaluates lexical similarity, fluency, and coherence across different levels (unigrams, bigrams, and sequences).<ul>
<li>Original ROUGE Paper: Lin, Chin-Yew. “ROUGE: A Package for Automatic Evaluation of Summaries”<ul>
<li>DOI: 10.3115&#x2F;1073083.1073135</li>
<li>Read on <a href="">ACL Anthology</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="ROUGE-L"><a href="#ROUGE-L" class="headerlink" title="ROUGE-L"></a>ROUGE-L</h3><p>ROUGE-L &#x3D; ROUGE (Recall-Oriented Understudy for Gisting Evaluation) + L (Longest Common Subsequence (<a href="#LCS">LCS</a>) </p>
<p>ROUGE-L captures the longest sequence of words that appear in both texts in the same order, providing insights into fluency and coherence.</p>
<ul>
<li>Paper: “Automatic Evaluation of Machine Translation Quality Using Longest Common Subsequence and Skip-Bigram Statistics.” Lin, Chin-Yew.<ul>
<li>DOI: 10.3115&#x2F;1218955.1219032</li>
<li>Read on <a href="https://sci-hub.se/10.3115/1218955.1219032">sci-hub.se</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><h3 id="Special-Token"><a href="#Special-Token" class="headerlink" title="Special Token"></a>Special Token</h3><p>Reserved tokens used in LLMs for specific functions, such as defining the start or end of a response.</p>
<hr>
<h2 id="Softmax-function"><a href="#Softmax-function" class="headerlink" title="Softmax function"></a>Softmax function</h2><p><a href="https://notes.theomorales.com/Attention+is+all+you+need/The+Softmax+function">“Softmax function” read on notes.theomorales.com</a></p>
<hr>
<h3 id="Supervised-learning"><a href="#Supervised-learning" class="headerlink" title="Supervised learning"></a>Supervised learning</h3><p>Learning through pre-labeled inputs, where the model aims to reduce classification error by predicting the correct outputs.<br>It works opposite on <a href="#Unsupervised-learning">unsupervised learning</a></p>
<hr>
<h3 id="System-prompts"><a href="#System-prompts" class="headerlink" title="System prompts"></a>System prompts</h3><p>Instructions defining an LLM’s behavior, role, or context in a conversation.</p>
<hr>
<h2 id="T"><a href="#T" class="headerlink" title="T"></a>T</h2><h3 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h3><p>The smallest unit of text processed by an LLM, such as a word or subword.</p>
<hr>
<h3 id="Tokenization"><a href="#Tokenization" class="headerlink" title="Tokenization"></a>Tokenization</h3><p>Breaking text into tokens for model processing.</p>
<hr>
<h3 id="Training"><a href="#Training" class="headerlink" title="Training"></a>Training</h3><p>Feeding a model with data to allow it to learn patterns and relationships.</p>
<hr>
<h2 id="U"><a href="#U" class="headerlink" title="U"></a>U</h2><h3 id="Unsupervised-learning"><a href="#Unsupervised-learning" class="headerlink" title="Unsupervised learning"></a>Unsupervised learning</h3><p>Learning from data without labeled outputs, often for tasks like clustering or dimensionality reduction.<br>It works opposite on <a href="#Supervised-learning">supervised learning</a></p>
<hr>
<h2 id="V"><a href="#V" class="headerlink" title="V"></a>V</h2><h3 id="Variational-Autoencoders-VAEs"><a href="#Variational-Autoencoders-VAEs" class="headerlink" title="Variational Autoencoders (VAEs)"></a>Variational Autoencoders (VAEs)</h3><p>Variational Autoencoders (VAEs) are a probabilistic extension of autoencoders that learn not only to compress data but also to generate new samples by modeling data distributions. VAEs use a latent space with a probabilistic structure, enabling meaningful interpolation between points in the latent space.<br><strong>Features:</strong></p>
<ol>
<li><strong>Latent Space Regularization</strong>: Ensures the latent space follows a predefined probability distribution, commonly Gaussian.</li>
<li><strong>Reconstruction and Generation</strong>: Balances reconstruction accuracy with the regularization term using a loss function derived from the evidence lower bound (ELBO).</li>
<li><strong>Bayesian Interpretation</strong>: The encoding process approximates posterior distributions via variational inference.</li>
</ol>
<p><strong>Applications:</strong></p>
<ul>
<li><strong>Data Generation</strong>: Generate novel and coherent samples (e.g., synthetic images, text).</li>
<li><strong>Anomaly Detection</strong>: Identifies data points that deviate from the learned distribution.</li>
<li><strong>Latent Space Manipulation</strong>: Enables interpolation and arithmetic operations in the latent space.</li>
</ul>
<p><strong>Key References:</strong></p>
<ul>
<li><strong>Title</strong>: “Auto-Encoding Variational Bayes”<br><strong>DOI</strong>: <a href="https://doi.org/10.48550/arXiv.1312.6114">10.48550&#x2F;arXiv.1312.6114</a></li>
<li><strong>Title</strong>: “Variational Inference with Normalizing Flows”<br><strong>DOI</strong>: <a href="https://doi.org/10.48550/arXiv.1505.05770">10.48550&#x2F;arXiv.1505.05770</a></li>
</ul>
<hr>
<h2 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h2><h3 id="Zero-padding-CNN"><a href="#Zero-padding-CNN" class="headerlink" title="Zero-padding (CNN)"></a>Zero-padding (CNN)</h3><p>A technique in CNNs that pads the borders of input data with zeros, controlling output dimensionality.</p>
<hr>
<h3 id="Zero-shot"><a href="#Zero-shot" class="headerlink" title="Zero-shot"></a>Zero-shot</h3><p>A model’s ability to perform tasks it was not explicitly trained for by leveraging general knowledge.</p>
<hr>
<p><strong>Footnotes</strong></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://github.com/nomic-ai/gpt4all/wiki/Generative-AI-Terminology">https://github.com/nomic-ai/gpt4all/wiki/Generative-AI-Terminology</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://nhsx.github.io/ai-dictionary">https://nhsx.github.io/ai-dictionary</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>glossary</tag>
      </tags>
  </entry>
  <entry>
    <title>Chatbots from scratch</title>
    <url>/hexo-blog/2024/10/28/post_chatbots_from_scratch/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li><a href="https://blog.streamlit.io/how-to-build-a-llama-2-chatbot/">How to build a Llama 2 chatbot</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>chatbot</tag>
        <tag>Llama</tag>
      </tags>
  </entry>
  <entry>
    <title>Prompt Engineering - task_1.</title>
    <url>/hexo-blog/2024/11/21/post_ai_promt_engineer_task_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Prompt Evaluation Guide: Assessing Prompt and Response Quality</strong></p>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h2><p>In this guide, we will evaluate the quality of prompts and their corresponding responses using a machine learning model. The goal is to determine whether the outputs align with specified criteria, improving the model’s prompt-handling capability through fine-tuning or adjustments. We’ll use <strong>OpenAI’s GPT-based models</strong> as our foundation, showcasing how to configure, evaluate, and visualize results locally. </p>
<p>This guide includes a step-by-step walkthrough for local deployment, fine-tuning, and performance assessment, complete with visualization of results to understand the quality and impact of changes.</p>
<hr>
<h2 id="2-Required-Tools"><a href="#2-Required-Tools" class="headerlink" title="2. Required Tools"></a>2. Required Tools</h2><h3 id="Tools-and-Libraries"><a href="#Tools-and-Libraries" class="headerlink" title="Tools and Libraries"></a>Tools and Libraries</h3><ul>
<li><strong>Hugging Face Transformers</strong>: For model training and configuration.</li>
<li><strong>Datasets Library</strong>: To load and preprocess prompt-response datasets.</li>
<li><strong>PyTorch</strong> or <strong>TensorFlow</strong>: Backend for model execution.</li>
<li><strong>Matplotlib</strong> and <strong>Seaborn</strong>: For data visualization.</li>
<li><strong>Python 3.8+</strong>: Required for compatibility with libraries.</li>
<li><strong>Evaluation Metrics</strong>:<ul>
<li><a href="../../../../../glossary-of-machine-learning-and-ai-terms#BLEU">BLEU</a> Score</li>
<li><a href="(../../../../../glossary-of-machine-learning-and-ai-terms#ROUGE-L">ROUGE-L</a></li>
<li>Perplexity</li>
</ul>
</li>
</ul>
<h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><ul>
<li><strong>Model</strong>: Pretrained GPT-2 or similar transformer-based model. Download from <a href="https://huggingface.co/models">Hugging Face Model Hub</a>.</li>
<li><strong>Dataset</strong>: Use datasets like <code>squad_v2</code> or create a custom prompt-response dataset.</li>
<li><strong>Environment</strong>: A local Python environment or virtual environment for isolation.</li>
</ul>
<hr>
<h2 id="3-Installation-Guide"><a href="#3-Installation-Guide" class="headerlink" title="3. Installation Guide"></a>3. Installation Guide</h2><p><strong>Clone the repository for local setup.</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/huggingface/transformers.git</span><br><span class="line"><span class="built_in">cd</span> transformers</span><br></pre></td></tr></table></figure>
<p><strong>Create virtual environment.</strong><br><em>To create a virtual environment, execute the following commands in the command line:</em></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure>

<p><strong>Activate the virtual environment:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">venv\Scripts\activate</span><br></pre></td></tr></table></figure>
<p><strong>Create <code>requirements.txt</code> in the project root directory.</strong><br>Add there list of Python libraries as</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">transformers</span><br><span class="line">datasets</span><br><span class="line">torch</span><br><span class="line">matplotlib </span><br><span class="line">seaborn</span><br></pre></td></tr></table></figure>

<p><strong>Install required Python libraries from <code>requirements.txt</code>:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>
<p>or if you are not using virtual env, execute</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install transformers datasets torch matplotlib seaborn</span><br></pre></td></tr></table></figure>

<h2 id="4-Configuration-Guide"><a href="#4-Configuration-Guide" class="headerlink" title="4. Configuration Guide"></a>4. Configuration Guide</h2><ol>
<li>Prepare Configuration File</li>
<li>Create a config.json with the following parameters:<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;model_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dataset_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;custom_dataset.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;max_length&quot;</span><span class="punctuation">:</span> <span class="number">256</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;batch_size&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;learning_rate&quot;</span><span class="punctuation">:</span> <span class="number">5e-5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;num_epochs&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;evaluation_metrics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;bleu&quot;</span><span class="punctuation">,</span> <span class="string">&quot;rouge-l&quot;</span><span class="punctuation">,</span> <span class="string">&quot;perplexity&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>Dataset Preparation<br>Ensure your dataset is in JSONL format:<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;prompt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;What is AI?&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Artificial Intelligence is...&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;prompt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Define Machine Learning&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;response&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Machine Learning is...&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="5-Core-for-Evaluation-Task"><a href="#5-Core-for-Evaluation-Task" class="headerlink" title="5. Core for Evaluation Task"></a>5. Core for Evaluation Task</h2><p>Define the evaluation process:</p>
<ol>
<li>Load Dataset: Preprocess prompts and responses.</li>
<li>Fine-Tune Model: Train on specific tasks to enhance response relevance.</li>
<li>Evaluate metrics, measure:<ol>
<li>BLEU, </li>
<li>ROUGE-L, </li>
<li>perplexity scores for outputs.</li>
</ol>
</li>
</ol>
<h2 id="6-Guidelines-for-Prompt-Evaluation"><a href="#6-Guidelines-for-Prompt-Evaluation" class="headerlink" title="6. Guidelines for Prompt Evaluation"></a>6. Guidelines for Prompt Evaluation</h2><p><strong>Key Evaluation Areas:</strong></p>
<ol>
<li><strong>Relevance</strong>: Does the response match the expected answer?</li>
<li><strong>Clarity</strong>: Is the response clear and concise?</li>
<li><strong>Adaptability</strong>: Does the model adjust to different prompt complexities?</li>
<li><strong>Consistency</strong>: Are responses uniform in quality across test cases?</li>
</ol>
<p><strong>Complexity Consideration:</strong></p>
<ul>
<li>Simple prompts: Direct, factual queries.</li>
<li>Complex prompts: Context-based or multi-turn questions.</li>
</ul>
<h2 id="7-Main-Scripts"><a href="#7-Main-Scripts" class="headerlink" title="7. Main Scripts"></a>7. Main Scripts</h2><p><strong>Training Script</strong></p>
<p>Save as <code>train.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> GPT2LMHeadModel, GPT2Tokenizer, Trainer, TrainingArguments</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> load_dataset</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load model and tokenizer</span></span><br><span class="line">model_name = <span class="string">&quot;gpt-2&quot;</span></span><br><span class="line">model = GPT2LMHeadModel.from_pretrained(model_name)</span><br><span class="line">tokenizer = GPT2Tokenizer.from_pretrained(model_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load and preprocess dataset</span></span><br><span class="line">dataset = load_dataset(<span class="string">&quot;json&quot;</span>, data_files=<span class="string">&quot;custom_dataset.json&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tokenize</span>(<span class="params">batch</span>):</span><br><span class="line">    <span class="keyword">return</span> tokenizer(batch[<span class="string">&quot;prompt&quot;</span>], padding=<span class="string">&quot;max_length&quot;</span>, truncation=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">tokenized_data = dataset.<span class="built_in">map</span>(tokenize, batched=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Training arguments</span></span><br><span class="line">training_args = TrainingArguments(</span><br><span class="line">    output_dir=<span class="string">&quot;./results&quot;</span>,</span><br><span class="line">    evaluation_strategy=<span class="string">&quot;epoch&quot;</span>,</span><br><span class="line">    learning_rate=<span class="number">5e-5</span>,</span><br><span class="line">    per_device_train_batch_size=<span class="number">16</span>,</span><br><span class="line">    num_train_epochs=<span class="number">3</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Trainer</span></span><br><span class="line">trainer = Trainer(</span><br><span class="line">    model=model,</span><br><span class="line">    args=training_args,</span><br><span class="line">    train_dataset=tokenized_data[<span class="string">&quot;train&quot;</span>]</span><br><span class="line">)</span><br><span class="line">trainer.train()</span><br></pre></td></tr></table></figure>
<p><strong>Evaluation Script</strong></p>
<p>Save as <code>evaluate.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> pipeline</span><br><span class="line"><span class="keyword">from</span> datasets <span class="keyword">import</span> load_dataset</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load model</span></span><br><span class="line">model_name = <span class="string">&quot;./results&quot;</span></span><br><span class="line">evaluator = pipeline(<span class="string">&quot;text-generation&quot;</span>, model=model_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Evaluate prompts</span></span><br><span class="line">prompts = [<span class="string">&quot;What is AI?&quot;</span>, <span class="string">&quot;Define Machine Learning&quot;</span>]</span><br><span class="line">responses = [evaluator(prompt, max_length=<span class="number">50</span>) <span class="keyword">for</span> prompt <span class="keyword">in</span> prompts]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Metrics</span></span><br><span class="line">metric = load_metric(<span class="string">&quot;bleu&quot;</span>)</span><br><span class="line">metric_score = metric.compute(predictions=responses, references=[<span class="string">&quot;Artificial Intelligence is...&quot;</span>, <span class="string">&quot;Machine Learning is...&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;BLEU Score:&quot;</span>, metric_score)</span><br></pre></td></tr></table></figure>
<h2 id="8-Visualization-and-Explanation-of-Results"><a href="#8-Visualization-and-Explanation-of-Results" class="headerlink" title="8. Visualization and Explanation of Results"></a>8. Visualization and Explanation of Results</h2><p><strong>Visualization Script</strong></p>
<p>Save as <code>visualize.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example metric scores</span></span><br><span class="line">metrics = &#123;<span class="string">&quot;BLEU&quot;</span>: <span class="number">0.85</span>, <span class="string">&quot;ROUGE-L&quot;</span>: <span class="number">0.87</span>, <span class="string">&quot;Perplexity&quot;</span>: <span class="number">15.2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">5</span>))</span><br><span class="line">sns.barplot(x=<span class="built_in">list</span>(metrics.keys()), y=<span class="built_in">list</span>(metrics.values()))</span><br><span class="line">plt.title(<span class="string">&quot;Evaluation Metrics&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Scores&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Metric&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><ol>
<li>BLEU &amp; ROUGE-L: Higher scores indicate better text generation quality.</li>
<li>Perplexity: Lower scores indicate improved language model comprehension.</li>
</ol>
<hr>
<p>To improve the model’s performance here is possible to focus on the following activities based on the evaluation metrics and the provided GPT-2 configuration:</p>
<h3 id="1-Data-Preprocessing-and-Augmentation"><a href="#1-Data-Preprocessing-and-Augmentation" class="headerlink" title="1. Data Preprocessing and Augmentation"></a>1. <strong>Data Preprocessing and Augmentation</strong></h3><ul>
<li><strong>Data Cleaning</strong>: Ensure the training data is clean, well-structured, and consistent. Remove noisy or irrelevant content that could negatively affect performance.</li>
<li><strong>Augment Data</strong>: Introduce more varied examples, especially for underrepresented topics. Adding more diverse sentence structures, word choices, and contexts can help improve model robustness.</li>
</ul>
<h3 id="2-Prompt-Optimization"><a href="#2-Prompt-Optimization" class="headerlink" title="2. Prompt Optimization"></a>2. <strong>Prompt Optimization</strong></h3><ul>
<li><strong>Refining Prompts</strong>: Work on crafting more precise and detailed prompts to guide the model towards generating more accurate responses.</li>
<li><strong>Incorporate Context</strong>: Provide context-rich prompts (e.g., multi-turn conversations) or detailed instructions to ensure the model outputs relevant and coherent responses.</li>
<li><strong>Temperature and Sampling</strong>: Adjust the <code>do_sample</code> setting and modify <code>top_k</code> or <code>top_p</code> parameters to control the randomness and creativity of the model’s output. A lower temperature (e.g., 0.7) can reduce randomness and produce more deterministic outputs.</li>
</ul>
<h3 id="3-Model-Hyperparameters-Adjustment"><a href="#3-Model-Hyperparameters-Adjustment" class="headerlink" title="3. Model Hyperparameters Adjustment"></a>3. <strong>Model Hyperparameters Adjustment</strong></h3><ul>
<li><strong>Increase Layers or Heads</strong>: If you’re able to fine-tune, consider experimenting with increasing the number of layers or attention heads to help the model learn more complex patterns.</li>
<li><strong>Experiment with <code>n_inner</code></strong>: Fine-tuning the <code>n_inner</code> parameter (which controls the size of the intermediate layer in the transformer) may yield better results for more complex tasks.</li>
</ul>
<h3 id="4-Fine-Tuning-GPT-2"><a href="#4-Fine-Tuning-GPT-2" class="headerlink" title="4. Fine-Tuning GPT-2"></a>4. <strong>Fine-Tuning GPT-2</strong></h3><ul>
<li><strong>Fine-Tuning with Task-Specific Data</strong>: Fine-tune the model on your specific domain or task using high-quality, labeled datasets. Fine-tuning will allow the model to learn task-specific patterns.</li>
<li><strong>Transfer Learning</strong>: Use transfer learning techniques by starting with a pre-trained GPT-2 model, and then train it on your task-specific corpus to improve the output quality.</li>
</ul>
<h3 id="5-Evaluation-Metric-Specific-Adjustments"><a href="#5-Evaluation-Metric-Specific-Adjustments" class="headerlink" title="5. Evaluation Metric-Specific Adjustments"></a>5. <strong>Evaluation Metric-Specific Adjustments</strong></h3><ul>
<li><strong>BLEU</strong>: Since BLEU is currently 0.0, which indicates poor overlap with reference texts, consider focusing on improving the lexical similarity by training on text data with high-quality references.</li>
<li><strong>ROUGE</strong>: Improve the recall and precision for ROUGE scores by providing more informative prompts that encourage the model to capture key content and key phrases.</li>
<li><strong>METEOR</strong>: Since METEOR considers synonyms and paraphrases, increasing the model’s understanding of semantic equivalence might improve this score. Use data augmentation or adversarial training to enhance this aspect.</li>
<li><strong>BERTScore</strong>: BERTScore evaluates embeddings, so improving model embeddings can significantly help. You can experiment with fine-tuning GPT-2 using BERT-based models (like <code>bert-base-uncased</code>) for better contextual word representations.</li>
</ul>
<h3 id="6-Regularization-Techniques"><a href="#6-Regularization-Techniques" class="headerlink" title="6. Regularization Techniques"></a>6. <strong>Regularization Techniques</strong></h3><ul>
<li><strong>Dropout Regularization</strong>: Experiment with adjusting <code>attn_pdrop</code>, <code>embd_pdrop</code>, and other dropout parameters to control overfitting and improve generalization.</li>
<li><strong>Layer Normalization</strong>: Ensure that layer normalization parameters (<code>layer_norm_epsilon</code>) are tuned properly to stabilize learning and avoid vanishing&#x2F;exploding gradients.</li>
</ul>
<h3 id="7-Model-Size-and-Parameters"><a href="#7-Model-Size-and-Parameters" class="headerlink" title="7. Model Size and Parameters"></a>7. <strong>Model Size and Parameters</strong></h3><ul>
<li><strong>Larger Models</strong>: If feasible, switch to larger models (e.g., GPT-2 Medium, GPT-2 Large, or GPT-3) for more capacity and better performance in complex tasks.</li>
<li><strong>Learning Rate and Optimizer Tuning</strong>: Adjust the learning rate for better convergence. Use learning rate schedulers to optimize training over time and avoid issues like vanishing gradients or poor local minima.</li>
</ul>
<h3 id="8-Loss-Function-Adjustments"><a href="#8-Loss-Function-Adjustments" class="headerlink" title="8. Loss Function Adjustments"></a>8. <strong>Loss Function Adjustments</strong></h3><ul>
<li><strong>Loss Function Tweaks</strong>: Investigate the loss function (cross-entropy in GPT-2) to ensure it’s optimized for your specific task. Sometimes, switching the loss function can help improve performance in tasks like summarization or question-answering.</li>
</ul>
<h3 id="9-Sampling-Strategies"><a href="#9-Sampling-Strategies" class="headerlink" title="9. Sampling Strategies"></a>9. <strong>Sampling Strategies</strong></h3><ul>
<li><strong>Top-k Sampling</strong>: Adjust the <code>top_k</code> parameter during text generation to sample from the top K most likely words. This can prevent repetitive or irrelevant generation.</li>
<li><strong>Nucleus Sampling</strong>: Adjust the <code>top_p</code> value to sample words from the cumulative probability distribution of the top P words, ensuring more diversity in the outputs.</li>
</ul>
<h3 id="10-Model-Evaluation-and-Iteration"><a href="#10-Model-Evaluation-and-Iteration" class="headerlink" title="10. Model Evaluation and Iteration"></a>10. <strong>Model Evaluation and Iteration</strong></h3><ul>
<li><strong>Cross-validation</strong>: Use cross-validation to evaluate different configurations and fine-tuned models to find the optimal setup.</li>
<li><strong>Hyperparameter Search</strong>: Perform a hyperparameter search (e.g., grid search, random search) to find the best set of hyperparameters for improving performance metrics.</li>
</ul>
<h3 id="Example-Implementation"><a href="#Example-Implementation" class="headerlink" title="Example Implementation:"></a>Example Implementation:</h3><pre><code class="python">from transformers import GPT2LMHeadModel, GPT2Tokenizer
import torch

# Load pre-trained model and tokenizer
model = GPT2LMHeadModel.from_pretrained(&#39;gpt2&#39;)
tokenizer = GPT2Tokenizer.from_pretrained(&#39;gpt2&#39;)

# Refine the prompt to improve results
prompt = &quot;Describe the importance of artificial intelligence in healthcare.&quot;

# Generate text using refined prompt
inputs = tokenizer(prompt, return_tensors=&quot;pt&quot;)
outputs = model.generate(**inputs, max_length=100, do_sample=True, top_p=0.95, top_k=60)

# Decode and print the output
generated_text = tokenizer.decode(outputs[0], skip_special_tokens=True)
print(generated_text)
</code></pre>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>prompt_engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>Parsing web site for job offers</title>
    <url>/hexo-blog/2024/11/28/post_data_mining__parsing_web_site_for_job_offers/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Given</strong> The website with posted offers.<br><strong>Goal:</strong> to get information from the website using python, BeautifulSoup and save it in JSON and markdown files.</p>
<p><strong>Python scirpt</strong></p>
<p>Install and import required packages</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">execute_requests</span>(<span class="params">base_url, amount_of_pages</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Executes GET requests for the specified number of pages and returns the responses.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        base_url (str): The base URL for requests.</span></span><br><span class="line"><span class="string">        amount_of_pages (int): The number of pages to fetch.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        list: A list of dictionaries containing the request number, page counter, and response content.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    payload = &#123;&#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;_jobboard_session=895b7b35b6493519c3ad686923d8cc1d; __cf_bm=BrUISN3QZXOQ1BPeJXOvNpqBAcT8YXS6XqIr7jlW.4M-1732742386-1.0.1.1-1hk8BgPrEcPEO6ZLFO6W6W6e8MNhcmQswlF6K2dUhchBp0px3reiDJPOuXnzX6z.etyzZq.Q9BIUEYJ1dHZqP75g&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    responses_data = []  <span class="comment"># Initialize an empty list to store response data</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> counter <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, amount_of_pages + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># Construct the URL with the current page counter</span></span><br><span class="line">        url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>&amp;page=<span class="subst">&#123;counter&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Fetching data from: <span class="subst">&#123;url&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># Send GET request</span></span><br><span class="line">            response = requests.get(url, headers=headers, data=payload)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Append the response data to the list</span></span><br><span class="line">            responses_data.append(&#123;</span><br><span class="line">                <span class="string">&quot;request_key&quot;</span>: <span class="string">f&quot;request_<span class="subst">&#123;counter&#125;</span>&quot;</span>,</span><br><span class="line">                <span class="string">&quot;counter&quot;</span>: counter,</span><br><span class="line">                <span class="string">&quot;response_content&quot;</span>: response.text</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;counter: <span class="subst">&#123;counter&#125;</span> | &#x27;status_code:&#x27; <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Error fetching data for page <span class="subst">&#123;counter&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> responses_data</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Parse data from <code>json</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_job_data_from_json</span>(<span class="params">response_data, output_json_file, output_markdown_file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Parse job data from a list of responses and extract job listings using BeautifulSoup.</span></span><br><span class="line"><span class="string">    Save results to both a JSON file and a Markdown file.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        response_data (list): List of dictionaries containing the response data.</span></span><br><span class="line"><span class="string">        output_json_file (str): Path to save the parsed job data in JSON format.</span></span><br><span class="line"><span class="string">        output_markdown_file (str): Path to save the parsed job data in Markdown format.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        job_data = []  <span class="comment"># List to store extracted job data</span></span><br><span class="line">        markdown_content = []  <span class="comment"># List to store Markdown entries</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Loop through each request in the list</span></span><br><span class="line">        <span class="keyword">for</span> request <span class="keyword">in</span> response_data:</span><br><span class="line">            counter = request.get(<span class="string">&quot;counter&quot;</span>, <span class="string">&quot;unknown&quot;</span>)</span><br><span class="line">            response_content = request.get(<span class="string">&quot;response_content&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Parse the HTML content using BeautifulSoup</span></span><br><span class="line">            soup = BeautifulSoup(response_content, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Find all job listings using the locator</span></span><br><span class="line">            job_listings = soup.find_all(<span class="string">&#x27;li&#x27;</span>, class_=<span class="string">&#x27;job-listing&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Extract data from each job listing</span></span><br><span class="line">            <span class="keyword">for</span> job <span class="keyword">in</span> job_listings:</span><br><span class="line">                <span class="comment"># Safely find required elements, fallback to &#x27;N/A&#x27; if not present</span></span><br><span class="line">                job_title = job.find(<span class="string">&#x27;a&#x27;</span>, class_=<span class="string">&#x27;jobList-title zip-backfill-link&#x27;</span>)</span><br><span class="line">                job_description = job.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;jobList-description&#x27;</span>)</span><br><span class="line">                salary = job.find(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;jobList-salary&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                job_info = &#123;</span><br><span class="line">                    <span class="string">&#x27;title&#x27;</span>: job_title.text.strip() <span class="keyword">if</span> job_title <span class="keyword">else</span> <span class="string">&#x27;N/A&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;href&#x27;</span>: job_title[<span class="string">&#x27;href&#x27;</span>] <span class="keyword">if</span> job_title <span class="keyword">else</span> <span class="string">&#x27;N/A&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;description&#x27;</span>: job_description.text.strip() <span class="keyword">if</span> job_description <span class="keyword">else</span> <span class="string">&#x27;N/A&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;salary&#x27;</span>: salary.text.strip() <span class="keyword">if</span> salary <span class="keyword">else</span> <span class="string">&#x27;N/A&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;page&#x27;</span>: counter</span><br><span class="line">                &#125;</span><br><span class="line">                job_data.append(job_info)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Prepare entry for Markdown</span></span><br><span class="line">                markdown_entry = <span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">### Job Title: <span class="subst">&#123;job_info[<span class="string">&#x27;title&#x27;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- **Link**: [<span class="subst">&#123;job_info[<span class="string">&#x27;title&#x27;</span>]&#125;</span>](<span class="subst">&#123;job_info[<span class="string">&#x27;href&#x27;</span>]&#125;</span>)</span></span><br><span class="line"><span class="string">- **Description**: <span class="subst">&#123;job_info[<span class="string">&#x27;description&#x27;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- **Salary**: <span class="subst">&#123;job_info[<span class="string">&#x27;salary&#x27;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- **Page**: <span class="subst">&#123;job_info[<span class="string">&#x27;page&#x27;</span>]&#125;</span></span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                markdown_content.append(markdown_entry.strip())</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Save extracted job data to a new JSON file</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(output_json_file, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json.dump(job_data, f, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Job data successfully parsed and saved to <span class="subst">&#123;output_json_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Save Markdown content to a file</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(output_markdown_file, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(<span class="string">&quot;\n\n&quot;</span>.join(markdown_content))</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Job data successfully saved to <span class="subst">&#123;output_markdown_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error processing file: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>IMPORTANT !</strong></p>
<ul>
<li>Provide valid references for saving retrieved data.</li>
<li>Make sure that you copied valid url from the browser and manage pagination properly.</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    base_url = <span class="string">&quot;https://www.ziprecruiter.co.uk/jobs/search?l=Remote&amp;q=qa+software+engineer&amp;remote=full&quot;</span></span><br><span class="line">    amount_of_pages = <span class="number">100</span>  <span class="comment"># Or any number that you wish to check</span></span><br><span class="line">    responses_data = execute_requests(base_url, amount_of_pages)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Output files for parsed data</span></span><br><span class="line">    output_json_file = <span class="string">&#x27;parsed_job_data.json&#x27;</span></span><br><span class="line">    output_markdown_file = <span class="string">&#x27;parsed_job_data.md&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Parse and save the job data</span></span><br><span class="line">    parse_job_data_from_json(responses_data, output_json_file, output_markdown_file)</span><br></pre></td></tr></table></figure>

<p>Script works fine for several executions. After that cookies expired and new one should be regenerated.</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>data_mining</tag>
        <tag>parsing</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Kafka intro</title>
    <url>/hexo-blog/2023/01/02/post_dev_side__kafka_intro/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Understanding-Kafka-A-Message-Broker-Overview"><a href="#Understanding-Kafka-A-Message-Broker-Overview" class="headerlink" title="Understanding Kafka: A Message Broker Overview"></a>Understanding Kafka: A Message Broker Overview</h1><p>Message brokers play a critical role in distributed systems by enabling communication between different applications and services. Kafka, a leading distributed event streaming platform, has become a cornerstone for building scalable and fault-tolerant systems.</p>
<h2 id="1-What-is-Kafka"><a href="#1-What-is-Kafka" class="headerlink" title="1. What is Kafka?"></a>1. What is Kafka?</h2><p>Kafka is an <strong>open-source distributed event streaming platform</strong> designed for high-throughput and low-latency processing. Originally developed by LinkedIn, Kafka is now maintained by the <strong>Apache Software Foundation</strong>. It enables the storage, processing, and replays of event streams in real time. Key components include:</p>
<ul>
<li><p><strong>Producers</strong>: Applications or services that send data to Kafka topics.</p>
</li>
<li><p><strong>Consumers</strong>: Applications or services that read data from Kafka topics.</p>
</li>
<li><p><strong>Brokers</strong>: Kafka servers that store data and serve client requests.</p>
</li>
<li><p><strong>Topics</strong>: Categories or feeds to which records are sent and stored.</p>
 <img src="/hexo-blog/images/apache_kafka_architecture_javapoint.png" alt="Apache Kafka Architecture" title="Apache Kafka Architecture" href = "https://www.javatpoint.com/apache-kafka-architecture" style="width: 40%; max-width: 800px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ul>
<p>Kafka’s architecture ensures scalability and resilience, making it a preferred choice for modern data pipelines and streaming analytics.</p>
<hr>
<h2 id="2-Supported-Protocols"><a href="#2-Supported-Protocols" class="headerlink" title="2. Supported Protocols"></a>2. Supported Protocols</h2><p>While Kafka uses its proprietary <strong>Kafka Protocol</strong>, it also supports integrations with other messaging standards. Common protocols include:</p>
<ul>
<li><strong>AMQP (Advanced Message Queuing Protocol)</strong>: Primarily used by traditional message brokers like RabbitMQ, Kafka connects through connectors for compatibility.</li>
<li><strong>HTTP&#x2F;REST</strong>: Tools like Kafka REST Proxy enable HTTP-based communication for producing and consuming messages.</li>
<li><strong>gRPC</strong>: Can be integrated for client-server communication in microservices.</li>
</ul>
<p>These protocols enhance Kafka’s flexibility, allowing seamless interaction with diverse ecosystems.</p>
<hr>
<h2 id="3-UI-Interfaces-for-Kafka"><a href="#3-UI-Interfaces-for-Kafka" class="headerlink" title="3. UI Interfaces for Kafka"></a>3. UI Interfaces for Kafka</h2><p>Several tools provide user-friendly interfaces to manage and monitor Kafka clusters:</p>
<ul>
<li><strong><a href="https://docs.confluent.io/platform/current/control-center/index.html">Confluent Control Center</a></strong>: A comprehensive UI for Kafka monitoring and management.</li>
<li><strong><a href="https://github.com/HomeAdvisor/Kafdrop">Kafdrop</a></strong>: A lightweight, open-source web UI for browsing Kafka topics, consumers, and brokers.</li>
<li><strong><a href="https://lenses.io/">Lens(lenses.io)</a></strong>: A developer-friendly interface focused on debugging Kafka streams.</li>
<li><strong><a href="https://akhq.io/">AKHQ</a></strong>: A modern UI for topic management, consumer group monitoring, and ACL administration.</li>
</ul>
<p>These interfaces simplify Kafka management tasks for developers and administrators.</p>
<hr>
<h2 id="4-Implementations-in-Different-Programming-Languages"><a href="#4-Implementations-in-Different-Programming-Languages" class="headerlink" title="4. Implementations in Different Programming Languages"></a>4. Implementations in Different Programming Languages</h2><p>Kafka’s robust client libraries and APIs enable seamless integration across popular programming languages:</p>
<ul>
<li><strong>Java</strong>: The official Kafka client library (<code>org.apache.kafka</code>) supports full functionality.</li>
<li><strong>Python</strong>: Libraries like <code>kafka-python</code> and <code>confluent-kafka-python</code> are widely used.</li>
<li><strong>C#</strong>: The <code>Confluent.Kafka</code> NuGet package provides a high-performance Kafka client.</li>
<li><strong>Node.js</strong>: Libraries like <code>kafka-node</code> and <code>kafkajs</code> enable JavaScript-based applications to integrate with Kafka.</li>
<li><strong>Go</strong>: <code>sarama</code> and <code>confluent-kafka-go</code> are popular libraries for Go developers.</li>
</ul>
<p>These libraries support producing, consuming, and managing Kafka messages efficiently.</p>
<hr>
<h2 id="5-Testing-Kafka-in-QA"><a href="#5-Testing-Kafka-in-QA" class="headerlink" title="5. Testing Kafka in QA"></a>5. Testing Kafka in QA</h2><p>Testing Kafka can be challenging due to its asynchronous nature and real-time processing. QA teams can consider the following approaches:</p>
<ul>
<li><strong>Unit Tests</strong>: Mock Kafka producers&#x2F;consumers using libraries like <code>MockKafka</code> (Java) or <a href="https://pypi.org/project/pytest-kafka/">pytest-kafka</a> (Python).</li>
<li><strong>Integration Tests</strong>: Use in-memory Kafka clusters (e.g., <code>EmbeddedKafka</code> for Java) to simulate real scenarios.</li>
<li><strong>Performance Testing</strong>: Tools like Apache JMeter and Gatling support Kafka-specific plugins for load testing.</li>
<li><strong>Consumer Lag Monitoring</strong>: Verify that consumers process messages without significant delays using metrics.</li>
</ul>
<p>QA teams should focus on <strong>data consistency</strong>, <strong>scalability</strong>, and <strong>latency metrics</strong> during testing.</p>
<hr>
<h2 id="6-Kafka-vs-Azure-Service-Bus"><a href="#6-Kafka-vs-Azure-Service-Bus" class="headerlink" title="6. Kafka vs. Azure Service Bus"></a>6. Kafka vs. Azure Service Bus</h2><table>
<thead>
<tr>
<th>Feature</th>
<th>Kafka</th>
<th>Azure Service Bus</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Type</strong></td>
<td>Distributed Event Streaming Platform</td>
<td>Cloud-Based Message Broker</td>
</tr>
<tr>
<td><strong>Protocols</strong></td>
<td>Kafka Protocol, REST, AMQP</td>
<td>AMQP, HTTPS</td>
</tr>
<tr>
<td><strong>Persistence</strong></td>
<td>Durable by default</td>
<td>Optional, based on queues&#x2F;topics</td>
</tr>
<tr>
<td><strong>Scaling</strong></td>
<td>Horizontal scaling with partitions</td>
<td>Auto-scaling in Azure environment</td>
</tr>
<tr>
<td><strong>Use Case</strong></td>
<td>High-throughput, real-time data streams</td>
<td>Enterprise workflows, hybrid setups</td>
</tr>
<tr>
<td><strong>Setup</strong></td>
<td>Self-managed or Confluent Cloud</td>
<td>Fully managed by Azure</td>
</tr>
<tr>
<td><strong>Latency</strong></td>
<td>Sub-millisecond (with tuning)</td>
<td>Typically higher</td>
</tr>
</tbody></table>
<hr>
<h2 id="7-Footnotes"><a href="#7-Footnotes" class="headerlink" title="7. Footnotes"></a>7. Footnotes</h2><ol>
<li><strong>Apache Kafka Documentation</strong>: Explore Kafka’s official <a href="https://kafka.apache.org/documentation/">documentation</a> for detailed insights.</li>
<li><strong>Confluent Kafka</strong>: Learn more about managed Kafka solutions at <a href="https://www.confluent.io/">Confluent.io</a>.</li>
<li><strong>Comparison Details</strong>: Azure Service Bus documentation can be found <a href="https://learn.microsoft.com/en-us/azure/service-bus/">here</a>.</li>
<li><strong>Kafka Testing Tips</strong>: Check out <code>MockKafka</code> for Java testing <a href="https://github.com/embeddedkafka/embedded-kafka">here</a>.</li>
<li><strong>Multimedia book about Kafka (Cartoon story)</strong> : <a href="https://www.gentlydownthe.stream/">https://www.gentlydownthe.stream/</a></li>
<li><strong>My personal project for checkin basic Kafka features.</strong> Impletentation in Python. GitHub repo: <a href="https://github.com/ooge0/kafka-app-demo">https://github.com/ooge0/kafka-app-demo</a></li>
<li><strong>Web post: Apache Kafka Architecture.</strong> <a href="https://www.javatpoint.com/apache-kafka-architecture">https://www.javatpoint.com/apache-kafka-architecture</a></li>
<li><a href="https://medium.com/@dudu.zbeda_13698/kafka-ui-tool-15fcd2a4c7ac">Deploy Kafka UI tool | Medium</a></li>
<li><a href="https://stackoverflow.com/questions/51120971/running-kafka-on-windows-10-fails-the-system-cannot-find-the-path-specified">Fix for issue: Running Kafka on Windows 10 fails: The system cannot find the path specified</a></li>
<li><strong>Book</strong>: Mastering Kafka Streams and ksqlDB: Building Real-Time Data Systems by Example Mitch Seymour. <a href="https://www.coursesidekick.com/information-systems/3919430">Read on coursesidekick.com</a></li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>dev_side</tag>
        <tag>kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>Basic loguru configuration for python</title>
    <url>/hexo-blog/2023/10/25/post_dev_side__loguru_loger_basic_configuration/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Below is a basic configuration for the <code>loguru</code> logging library. It includes logging to both the console and a file, with separate levels and formatting.</p>
<h2 id="Loguru-details"><a href="#Loguru-details" class="headerlink" title="Loguru details"></a>Loguru details</h2><ul>
<li><p>Loguru installation command via PIP</p>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install loguru</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://pypi.org/project/loguru/">Logugu PIP page</a></p>
</li>
<li><p><a href="https://github.com/Delgan/loguru">Loguru home page</a></p>
</li>
</ul>
<hr>
<h2 id="Loguru-configuration"><a href="#Loguru-configuration" class="headerlink" title="Loguru configuration"></a>Loguru configuration</h2><p>Below is an example of ‘loguru’ configuration and usage.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> loguru <span class="keyword">import</span> logger</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure Loguru</span></span><br><span class="line">logger.remove()  <span class="comment"># Remove the default logger</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a console logger</span></span><br><span class="line">logger.add(</span><br><span class="line">    sink=sys.stdout,</span><br><span class="line">    level=<span class="string">&quot;INFO&quot;</span>,  <span class="comment"># Log level for console</span></span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;&lt;green&gt;&#123;time:YYYY-MM-DD HH:mm:ss&#125;&lt;/green&gt; | &lt;level&gt;&#123;level: &lt;8&#125;&lt;/level&gt; | &lt;cyan&gt;&#123;name&#125;&lt;/cyan&gt;:&lt;cyan&gt;&#123;function&#125;&lt;/cyan&gt;:&lt;cyan&gt;&#123;line&#125;&lt;/cyan&gt; - &lt;level&gt;&#123;message&#125;&lt;/level&gt;&quot;</span>,</span><br><span class="line">    enqueue=<span class="literal">True</span>,  <span class="comment"># Thread-safe</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a file logger</span></span><br><span class="line">logger.add(</span><br><span class="line">    sink=<span class="string">&quot;app.log&quot;</span>,</span><br><span class="line">    level=<span class="string">&quot;DEBUG&quot;</span>,  <span class="comment"># Log level for file</span></span><br><span class="line">    <span class="built_in">format</span>=<span class="string">&quot;&#123;time:YYYY-MM-DD HH:mm:ss&#125; | &#123;level: &lt;8&#125; | &#123;name&#125;:&#123;function&#125;:&#123;line&#125; - &#123;message&#125;&quot;</span>,</span><br><span class="line">    rotation=<span class="string">&quot;10 MB&quot;</span>,  <span class="comment"># Rotate logs every 10 MB</span></span><br><span class="line">    retention=<span class="string">&quot;7 days&quot;</span>,  <span class="comment"># Retain logs for 7 days</span></span><br><span class="line">    compression=<span class="string">&quot;zip&quot;</span>,  <span class="comment"># Compress old log files</span></span><br><span class="line">    enqueue=<span class="literal">True</span>,  <span class="comment"># Thread-safe</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example usage</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    logger.debug(<span class="string">&quot;This is a debug message.&quot;</span>)</span><br><span class="line">    logger.info(<span class="string">&quot;This is an info message.&quot;</span>)</span><br><span class="line">    logger.warning(<span class="string">&quot;This is a warning message.&quot;</span>)</span><br><span class="line">    logger.error(<span class="string">&quot;This is an error message.&quot;</span>)</span><br><span class="line">    logger.critical(<span class="string">&quot;This is a critical message.&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>dev_side</tag>
        <tag>loguru</tag>
        <tag>logger</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman tests examples</title>
    <url>/hexo-blog/2023/05/11/post_dev_side__postman_tests_examples/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>Below are examples of Postman tests written with Chai BDD&#x2F;TDD assertion library.</em></p>
<p><strong>Table of content</strong><br><a href="#1-Validate-that-the-response-body-contains-a-specific-email">#1 Validate that the response body contains a specific</a><br><a href="#21-Check-if-a-date-field-in-the-response-body-is-in-the-past">#2 Check if the response status is 200</a><br><a href="#3-Ensure-the-response-time-is-less-than-500ms">#3 Ensure the response time is less than 500ms</a><br><a href="#4-Verify-the-users-first-name-in-the-json-response">#4 Verify the user’s first name in the JSON response</a><br><a href="#5-Validate-that-the-Content-Type-header-is-application-Json">#5 Validate that the Content-Type header is application&#x2F;json</a><br><a href="#6-Ensure-that-the-JSON-array-is-not-empty">#6 Ensure that the JSON array is not empty</a><br><a href="#7-Verify-that-a-specific-key-exists-in-the-response-body">#7 Verify that a specific key exists in the response body</a><br><a href="#8-Validate-the-response-body-includes-the-string-%E2%80%98success%E2%80%99">#8 Validate the response body includes the string ‘success’</a><br><a href="#9-Check-if-a-specific-field-is-of-a-certain-data-type">#9 Check if a specific field is of a certain data type</a><br><a href="#10-Validate-that-a-specific-field-has-a-value-greater-than-zero">#10. Validate that a specific field has a value greater than zero</a><br><a href="#11-Ensure-that-a-specific-header-exists-x-request-id">#11. Ensure that a specific header exists (X-Request-ID)</a><br><a href="#12-Verify-that-the-response-body-does-not-contain-a-specific-string">#12. Verify that the response body does not contain a specific string</a><br><a href="#13-Check-if-the-response-body-contains-a-specific-key-value-pair">#13. Check if the response body contains a specific key-value pair()(email)</a><br><a href="#14-Ensure-the-response-contains-multiple-keys">#14. Ensure the response contains multiple keys</a><br><a href="#15-Verify-that-a-fields-value-is-within-a-specific-range">#15. Verify that a field’s value is within a specific range</a><br><a href="#16-Validate-that-the-response-body-contains-a-specific-substring">#16. Validate that the response body contains a specific substring</a><br><a href="#17-Check-if-a-numeric-field-in-the-response-body-is-even">#17. Check if a numeric field in the response body is even</a><br><a href="#18-Ensure-that-the-response-body-has-a-non-empty-string-field">#18. Ensure that the response body has a non-empty string field</a><br><a href="#19-Verify-that-a-boolean-field-in-the-response-body-is-true">#19. Verify that a boolean field in the response body is true</a><br><a href="#20-Validate-that-an-array-field-has-a-specific-length">#20. Validate that an array field has a specific length</a><br><a href="#21-Check-if-a-date-field-in-the-response-body-is-in-the-past">#21. Check if a date field in the response body is in the past</a><br><a href="#22-Ensure-that-a-response-header-does-not-exist">#22. Ensure that a response header does not exist</a><br><a href="#23-Verify-that-a-specific-field-contains-a-valid-email-address">#23. Verify that a specific field contains a valid email address</a><br><a href="#24-Validate-that-a-fields-value-matches-a-specific-pattern">#24. Validate that a field’s value matches a specific pattern</a><br><a href="#25-Check-if-the-response-body-has-no-null-values-in-an-array">#25. Check if the response body has no null values in an array</a><br><a href="#26-Ensure-the-response-includes-a-specific-nested-object">#26. Ensure the response includes a specific nested object</a><br><a href="#27-Verify-that-a-list-of-ids-in-the-response-body-is-unique">#27. Verify that a list of IDs in the response body is unique</a><br><a href="#28-Validate-that-a-numeric-field-falls-within-a-certain-percentile">#28. Validate that a numeric field falls within a certain percentile </a><br><a href="#29-Check-if-a-timestamp-in-the-response-body-is-in-iso-8601-format">#29. Check if a timestamp in the response body is in ISO 8601 format</a><br><a href="#30-Ensure-that-a-specific-fields-value-does-not-contain-special-characters">#31. Verify that a specific URL in the response body is reachable</a><br><a href="#32-Validate-that-a-keys-value-is-within-a-specific-set-of-allowed-values">#32. Validate that a key’s value is within a specific set of allowed()values</a><br><a href="#33-Check-if-the-response-contains-a-nested-array-with-at-least-one-object">#33. Check if the response contains a nested array with at least one()object</a><br><a href="#34-Ensure-that-the-sum-of-a-numeric-array-field-equals-a-specific-value">#34. Ensure that the sum of a numeric array field equals a specific()value</a><br><a href="#35-Verify-that-the-response-body-does-not-contain-any-undefined-fields">#35. Verify that the response body does not contain any undefined()fields</a><br><a href="#36-Validate-that-all-objects-in-an-array-have-a-specific-key">#36. Validate that all objects in an array have a specific key</a><br><a href="#37-Check-if-a-fields-value-is-a-valid-json-object">#37. Check if a field’s value is a valid JSON object</a><br><a href="#38-Ensure-the-response-body-does-not-exceed-a-certain-length">#38. Ensure the response body does not exceed a certain length</a><br><a href="#39-Verify-that-the-response-body-does-not-contain-a-specific-key">#39. Verify that the response body does not contain a specific key</a><br><a href="#40-Validate-that-an-array-field-in-the-response-body-is-sorted">#40. Validate that an array field in the response body is sorted</a></p>
<hr>
<h1 id="1-Validate-that-the-response-body-contains-a-specific-email"><a href="#1-Validate-that-the-response-body-contains-a-specific-email" class="headerlink" title="1. Validate that the response body contains a specific email"></a>1. Validate that the response body contains a specific email</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating responsebody contains specific email&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>()).<span class="property">to</span>.<span class="title function_">include</span>(<span class="string">&quot;george.bluth@magic.com&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="2-Check-if-the-response-status-is-200"><a href="#2-Check-if-the-response-status-is-200" class="headerlink" title="2. Check if the response status is 200"></a>2. Check if the response status is 200</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating response status is 200&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="property">response</span>.<span class="property">to</span>.<span class="property">have</span>.<span class="title function_">status</span>(<span class="number">200</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="3-Ensure-the-response-time-is-less-than-500ms"><a href="#3-Ensure-the-response-time-is-less-than-500ms" class="headerlink" title="3. Ensure the response time is less than 500ms"></a>3. Ensure the response time is less than 500ms</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating response time is less than 500ms&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="property">responseTime</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">below</span>(<span class="number">500</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="4-Verify-the-user’s-first-name-in-the-JSON-response"><a href="#4-Verify-the-user’s-first-name-in-the-JSON-response" class="headerlink" title="4. Verify the user’s first name in the JSON response"></a>4. Verify the user’s first name in the JSON response</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating user&#x27;s first name in JSON response&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">first_name</span>).<span class="property">to</span>.<span class="title function_">eql</span>(<span class="string">&quot;George&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="5-Validate-that-the-Content-Type-header-is-application-Json"><a href="#5-Validate-that-the-Content-Type-header-is-application-Json" class="headerlink" title="5. Validate that the Content-Type header is application&#x2F;Json"></a>5. Validate that the Content-Type header is application&#x2F;Json</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating content-type header is application/json&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Content-Type&quot;</span>)).<span class="property">to</span>.<span class="title function_">eql</span>(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="6-Ensure-that-the-JSON-array-is-not-empty"><a href="#6-Ensure-that-the-JSON-array-is-not-empty" class="headerlink" title="6. Ensure that the JSON array is not empty"></a>6. Ensure that the JSON array is not empty</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating JSON array is not empty&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">an</span>(<span class="string">&#x27;array&#x27;</span>).<span class="property">that</span>.<span class="property">is</span>.<span class="property">not</span>.<span class="property">empty</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="7-Verify-that-a-specific-key-exists-in-the-response-body"><a href="#7-Verify-that-a-specific-key-exists-in-the-response-body" class="headerlink" title="7. Verify that a specific key exists in the response body"></a>7. Verify that a specific key exists in the response body</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating key existence in response body&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData).<span class="property">to</span>.<span class="property">have</span>.<span class="title function_">property</span>(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="8-Validate-the-response-body-includes-the-string-‘success’"><a href="#8-Validate-the-response-body-includes-the-string-‘success’" class="headerlink" title="8.Validate the response body includes the string ‘success’"></a>8.Validate the response body includes the string ‘success’</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating response body includes the string &#x27;success&#x27;&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>()).<span class="property">to</span>.<span class="title function_">include</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="9-Check-if-a-specific-field-is-of-a-certain-data-type"><a href="#9-Check-if-a-specific-field-is-of-a-certain-data-type" class="headerlink" title="9. Check if a specific field is of a certain data type"></a>9. Check if a specific field is of a certain data type</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field data type&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">id</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">a</span>(<span class="string">&#x27;number&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="10-Validate-that-a-specific-field-has-a-value-greater-than-zero"><a href="#10-Validate-that-a-specific-field-has-a-value-greater-than-zero" class="headerlink" title="10. Validate that a specific field has a value greater than zero"></a>10. Validate that a specific field has a value greater than zero</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field value is greater than zero&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">age</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">above</span>(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="11-Ensure-that-a-specific-header-exists-X-Request-ID"><a href="#11-Ensure-that-a-specific-header-exists-X-Request-ID" class="headerlink" title="11. Ensure that a specific header exists (X-Request-ID)"></a>11. Ensure that a specific header exists (X-Request-ID)</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating header existence X-Request-ID&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="property">headers</span>.<span class="title function_">has</span>(<span class="string">&quot;X-Request-ID&quot;</span>)).<span class="property">to</span>.<span class="property">be</span>.<span class="property">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="12-Verify-that-the-response-body-does-not-contain-a-specific-string"><a href="#12-Verify-that-the-response-body-does-not-contain-a-specific-string" class="headerlink" title="12. Verify that the response body does not contain a specific string"></a>12. Verify that the response body does not contain a specific string</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating absence of string &#x27;error&#x27; in response body&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>()).<span class="property">to</span>.<span class="property">not</span>.<span class="title function_">include</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="13-Check-if-the-response-body-contains-a-specific-key-value-pair"><a href="#13-Check-if-the-response-body-contains-a-specific-key-value-pair" class="headerlink" title="13. Check if the response body contains a specific key-value pair"></a>13. Check if the response body contains a specific key-value pair</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating key-value pair (email)&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">email</span>).<span class="property">to</span>.<span class="title function_">eql</span>(<span class="string">&quot;george.bluth@magic.com&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="14-Ensure-the-response-contains-multiple-keys"><a href="#14-Ensure-the-response-contains-multiple-keys" class="headerlink" title="14. Ensure the response contains multiple keys"></a>14. Ensure the response contains multiple keys</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating multiple keys existence (data, support)&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData).<span class="property">to</span>.<span class="property">have</span>.<span class="title function_">keys</span>([<span class="string">&quot;data&quot;</span>, <span class="string">&quot;support&quot;</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="15-Verify-that-a-field’s-value-is-within-a-specific-range"><a href="#15-Verify-that-a-field’s-value-is-within-a-specific-range" class="headerlink" title="15. Verify that a field’s value is within a specific range"></a>15. Verify that a field’s value is within a specific range</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field value is within range 1-10&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">page</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">within</span>(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="16-Validate-that-the-response-body-contains-a-specific-substring"><a href="#16-Validate-that-the-response-body-contains-a-specific-substring" class="headerlink" title="16. Validate that the response body contains a specific substring"></a>16. Validate that the response body contains a specific substring</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating response body contains substring &#x27;welcome&#x27;&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>()).<span class="property">to</span>.<span class="title function_">include</span>(<span class="string">&quot;welcome&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="17-Check-if-a-numeric-field-in-the-response-body-is-even"><a href="#17-Check-if-a-numeric-field-in-the-response-body-is-even" class="headerlink" title="17. Check if a numeric field in the response body is even"></a>17. Check if a numeric field in the response body is even</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating numeric field is even&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">id</span> % <span class="number">2</span>).<span class="property">to</span>.<span class="title function_">eql</span>(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="18-Ensure-that-the-response-body-has-a-non-empty-string-field"><a href="#18-Ensure-that-the-response-body-has-a-non-empty-string-field" class="headerlink" title="18. Ensure that the response body has a non-empty string field"></a>18. Ensure that the response body has a non-empty string field</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating non-empty string field&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">name</span>).<span class="property">to</span>.<span class="property">have</span>.<span class="property">length</span>.<span class="title function_">above</span>(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="19-Verify-that-a-boolean-field-in-the-response-body-is-true"><a href="#19-Verify-that-a-boolean-field-in-the-response-body-is-true" class="headerlink" title="19. Verify that a boolean field in the response body is true"></a>19. Verify that a boolean field in the response body is true</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating boolean field is true&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">isActive</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="property">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="20-Validate-that-an-array-field-has-a-specific-length"><a href="#20-Validate-that-an-array-field-has-a-specific-length" class="headerlink" title="20. Validate that an array field has a specific length"></a>20. Validate that an array field has a specific length</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating array length is 5&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">items</span>).<span class="property">to</span>.<span class="property">have</span>.<span class="title function_">lengthOf</span>(<span class="number">5</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="21-Check-if-a-date-field-in-the-response-body-is-in-the-past"><a href="#21-Check-if-a-date-field-in-the-response-body-is-in-the-past" class="headerlink" title="21. Check if a date field in the response body is in the past"></a>21. Check if a date field in the response body is in the past</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating date field is in the past&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(jsonData.<span class="property">data</span>.<span class="property">date</span>)).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">below</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="22-Ensure-that-a-response-header-does-not-exist"><a href="#22-Ensure-that-a-response-header-does-not-exist" class="headerlink" title="22. Ensure that a response header does not exist"></a>22. Ensure that a response header does not exist</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating header does not exist X-Deprecated&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="property">headers</span>.<span class="title function_">has</span>(<span class="string">&quot;X-Deprecated&quot;</span>)).<span class="property">to</span>.<span class="property">be</span>.<span class="property">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="23-Verify-that-a-specific-field-contains-a-valid-email-address"><a href="#23-Verify-that-a-specific-field-contains-a-valid-email-address" class="headerlink" title="23. Verify that a specific field contains a valid email address"></a>23. Verify that a specific field contains a valid email address</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating valid email address&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">email</span>).<span class="property">to</span>.<span class="title function_">match</span>(<span class="regexp">/\S+@\S+\.\S+/</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="24-Validate-that-a-field’s-value-matches-a-specific-pattern"><a href="#24-Validate-that-a-field’s-value-matches-a-specific-pattern" class="headerlink" title="24. Validate that a field’s value matches a specific pattern"></a>24. Validate that a field’s value matches a specific pattern</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field matches phone number pattern&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">phone</span>).<span class="property">to</span>.<span class="title function_">match</span>(<span class="regexp">/^\d&#123;3&#125;-\d&#123;3&#125;-\d&#123;4&#125;$/</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="25-Check-if-the-response-body-has-no-null-values-in-an-array"><a href="#25-Check-if-the-response-body-has-no-null-values-in-an-array" class="headerlink" title="25. Check if the response body has no null values in an array"></a>25. Check if the response body has no null values in an array</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating no null values in array&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>).<span class="property">to</span>.<span class="property">not</span>.<span class="property">deep</span>.<span class="property">include</span>.<span class="title function_">members</span>([<span class="literal">null</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="26-Ensure-the-response-includes-a-specific-nested-object"><a href="#26-Ensure-the-response-includes-a-specific-nested-object" class="headerlink" title="26. Ensure the response includes a specific nested object"></a>26. Ensure the response includes a specific nested object</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating nested object existence (address)&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">address</span>).<span class="property">to</span>.<span class="property">have</span>.<span class="title function_">property</span>(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="27-Verify-that-a-list-of-IDs-in-the-response-body-is-unique"><a href="#27-Verify-that-a-list-of-IDs-in-the-response-body-is-unique" class="headerlink" title="27. Verify that a list of IDs in the response body is unique"></a>27. Verify that a list of IDs in the response body is unique</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating unique IDs in list&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">var</span> ids = jsonData.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span>);</span><br><span class="line">    pm.<span class="title function_">expect</span>(<span class="keyword">new</span> <span class="title class_">Set</span>(ids).<span class="property">size</span>).<span class="property">to</span>.<span class="title function_">eql</span>(ids.<span class="property">length</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="28-Validate-that-a-numeric-field-falls-within-a-certain-percentile"><a href="#28-Validate-that-a-numeric-field-falls-within-a-certain-percentile" class="headerlink" title="28. Validate that a numeric field falls within a certain percentile"></a>28. Validate that a numeric field falls within a certain percentile</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field is in top 10 percentile&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">score</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">above</span>(<span class="number">90</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="29-Check-if-a-timestamp-in-the-response-body-is-in-ISO-8601-format"><a href="#29-Check-if-a-timestamp-in-the-response-body-is-in-ISO-8601-format" class="headerlink" title="29. Check if a timestamp in the response body is in ISO 8601 format:"></a>29. Check if a timestamp in the response body is in ISO 8601 format:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating timestamp format is ISO 8601&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">timestamp</span>).<span class="property">to</span>.<span class="title function_">match</span>(<span class="regexp">/\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;T\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;.\d&#123;3&#125;Z/</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="30-Ensure-that-a-specific-field’s-value-does-not-contain-special-characters"><a href="#30-Ensure-that-a-specific-field’s-value-does-not-contain-special-characters" class="headerlink" title="30. Ensure that a specific field’s value does not contain special characters:"></a>30. Ensure that a specific field’s value does not contain special characters:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating no special characters in field&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">username</span>).<span class="property">to</span>.<span class="title function_">match</span>(<span class="regexp">/^[a-zA-Z0-9]+$/</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="31-Verify-that-a-specific-URL-in-the-response-body-is-reachable"><a href="#31-Verify-that-a-specific-URL-in-the-response-body-is-reachable" class="headerlink" title="31. Verify that a specific URL in the response body is reachable:"></a>31. Verify that a specific URL in the response body is reachable:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating URL reachability&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>()).<span class="property">to</span>.<span class="title function_">match</span>(<span class="regexp">/(http|https):\/\/\S+/g</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="32-Validate-that-a-key’s-value-is-within-a-specific-set-of-allowed-values"><a href="#32-Validate-that-a-key’s-value-is-within-a-specific-set-of-allowed-values" class="headerlink" title="32. Validate that a key’s value is within a specific set of allowed values:"></a>32. Validate that a key’s value is within a specific set of allowed values:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating key value in allowed set&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">status</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;Pending&quot;</span>, <span class="string">&quot;Completed&quot;</span>, <span class="string">&quot;Canceled&quot;</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="33-Check-if-the-response-contains-a-nested-array-with-at-least-one-object"><a href="#33-Check-if-the-response-contains-a-nested-array-with-at-least-one-object" class="headerlink" title="33. Check if the response contains a nested array with at least one object:"></a>33. Check if the response contains a nested array with at least one object:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating nested array contains at least one object&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">orders</span>).<span class="property">to</span>.<span class="property">have</span>.<span class="property">length</span>.<span class="title function_">above</span>(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="34-Ensure-that-the-sum-of-a-numeric-array-field-equals-a-specific-value"><a href="#34-Ensure-that-the-sum-of-a-numeric-array-field-equals-a-specific-value" class="headerlink" title="34. Ensure that the sum of a numeric array field equals a specific value:"></a>34. Ensure that the sum of a numeric array field equals a specific value:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating sum of array values equals 100&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">var</span> sum = jsonData.<span class="property">data</span>.<span class="property">prices</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, price</span>) =&gt;</span> acc + price, <span class="number">0</span>);</span><br><span class="line">    pm.<span class="title function_">expect</span>(sum).<span class="property">to</span>.<span class="title function_">eql</span>(<span class="number">100</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="35-Verify-that-the-response-body-does-not-contain-any-undefined-fields"><a href="#35-Verify-that-the-response-body-does-not-contain-any-undefined-fields" class="headerlink" title="35. Verify that the response body does not contain any undefined fields:"></a>35. Verify that the response body does not contain any undefined fields:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating no undefined fields&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">var</span> hasUndefined = <span class="title class_">Object</span>.<span class="title function_">values</span>(jsonData.<span class="property">data</span>).<span class="title function_">includes</span>(<span class="literal">undefined</span>);</span><br><span class="line">    pm.<span class="title function_">expect</span>(hasUndefined).<span class="property">to</span>.<span class="property">be</span>.<span class="property">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="36-Validate-that-all-objects-in-an-array-have-a-specific-key"><a href="#36-Validate-that-all-objects-in-an-array-have-a-specific-key" class="headerlink" title="36. Validate that all objects in an array have a specific key:"></a>36. Validate that all objects in an array have a specific key:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating key &#x27;id&#x27; in all array objects&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>).<span class="property">to</span>.<span class="title function_">satisfy</span>(<span class="function"><span class="params">items</span> =&gt;</span> items.<span class="title function_">every</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;id&quot;</span>)));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="37-Check-if-a-field’s-value-is-a-valid-JSON-object"><a href="#37-Check-if-a-field’s-value-is-a-valid-JSON-object" class="headerlink" title="37. Check if a field’s value is a valid JSON object:"></a>37. Check if a field’s value is a valid JSON object:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating field is a valid JSON object&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData.<span class="property">data</span>.<span class="property">config</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="title function_">an</span>(<span class="string">&#x27;object&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="38-Ensure-the-response-body-does-not-exceed-a-certain-length"><a href="#38-Ensure-the-response-body-does-not-exceed-a-certain-length" class="headerlink" title="38. Ensure the response body does not exceed a certain length:"></a>38. Ensure the response body does not exceed a certain length:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating response body length is at most 500&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    pm.<span class="title function_">expect</span>(pm.<span class="property">response</span>.<span class="title function_">text</span>().<span class="property">length</span>).<span class="property">to</span>.<span class="property">be</span>.<span class="property">at</span>.<span class="title function_">most</span>(<span class="number">500</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="39-Verify-that-the-response-body-does-not-contain-a-specific-key"><a href="#39-Verify-that-the-response-body-does-not-contain-a-specific-key" class="headerlink" title="39. Verify that the response body does not contain a specific key:"></a>39. Verify that the response body does not contain a specific key:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating absence of key &#x27;password&#x27;&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    pm.<span class="title function_">expect</span>(jsonData).<span class="property">to</span>.<span class="property">not</span>.<span class="property">have</span>.<span class="title function_">property</span>(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="40-Validate-that-an-array-field-in-the-response-body-is-sorted"><a href="#40-Validate-that-an-array-field-in-the-response-body-is-sorted" class="headerlink" title="40. Validate that an array field in the response body is sorted:"></a>40. Validate that an array field in the response body is sorted:</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pm.<span class="title function_">test</span>(<span class="string">&quot;validating array is sorted&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> jsonData = pm.<span class="property">response</span>.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">var</span> sortedArray = [...jsonData.<span class="property">data</span>].<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">    pm.<span class="title function_">expect</span>(sortedArray).<span class="property">to</span>.<span class="title function_">eql</span>(jsonData.<span class="property">data</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>dev_side</tag>
        <tag>postman</tag>
        <tag>api_testing</tag>
        <tag>qa</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>Python basics</title>
    <url>/hexo-blog/2023/06/12/post_dev_side__python_basics/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Python-Core"><a href="#Python-Core" class="headerlink" title="Python Core"></a>Python Core</h2><p>Python is a high-level, interpreted programming language known for its simplicity and versatility. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming. Mastering Python’s core concepts is essential for building scalable applications.</p>
<ol>
<li><a href="https://docs.python.org/3/tutorial/introduction.html">Python Basics | python.org</a><ol>
<li>Learn Python’s syntax, variables, and basic programming constructs.</li>
</ol>
</li>
</ol>
<h2 id="Input-and-Output-in-Python"><a href="#Input-and-Output-in-Python" class="headerlink" title="Input and Output in Python"></a>Input and Output in Python</h2><p>Python provides various ways to take input from users and output information. The <code>input()</code> function is used for input, while <code>print()</code> is commonly used for output. Mastering I&#x2F;O is critical for creating interactive programs.</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/input-and-output-in-python/">Python Input and Output | geeksforgeeks.org</a><ol>
<li>Understand how to handle user inputs and format outputs.</li>
</ol>
</li>
</ol>
<h2 id="Python-Data-Types"><a href="#Python-Data-Types" class="headerlink" title="Python Data Types"></a>Python Data Types</h2><p>Python supports several built-in data types like <code>int</code>, <code>float</code>, <code>str</code>, <code>list</code>, and more. These types form the foundation of Python’s dynamic nature.</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/python-data-types/">Python Data Types | geeksforgeeks.org</a><ol>
<li>Explore various data types and their uses in Python.</li>
</ol>
</li>
<li><a href="https://www.programiz.com/python-programming/variables-datatypes">Python Data Types | programiz.com</a></li>
</ol>
<h2 id="Python-Data-Structures"><a href="#Python-Data-Structures" class="headerlink" title="Python Data Structures"></a>Python Data Structures</h2><p>Data structures help organize and manipulate data efficiently. Python’s built-in data structures like <code>list</code>, <code>dict</code>, <code>set</code>, and <code>tuple</code> simplify data management.</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/python-data-structures/">Python Data Structures | geeksforgeeks.org</a><ol>
<li>Learn to use Python’s powerful data structures for different scenarios.</li>
</ol>
</li>
</ol>
<h2 id="Python-Operators"><a href="#Python-Operators" class="headerlink" title="Python Operators"></a>Python Operators</h2><p>Operators are special symbols that carry out operations on variables and values. Python supports arithmetic, logical, bitwise, and comparison operators.</p>
<ol>
<li><a href="https://realpython.com/python-operators-expressions/">Python Operators | realpython.com</a><ol>
<li>Understand how to use operators for data manipulation.</li>
</ol>
</li>
</ol>
<h2 id="Conditional-Statements-in-Python"><a href="#Conditional-Statements-in-Python" class="headerlink" title="Conditional Statements in Python"></a>Conditional Statements in Python</h2><p>Conditional statements like <code>if</code>, <code>elif</code>, and <code>else</code> allow programs to make decisions. They are fundamental for implementing logic.</p>
<ol>
<li><a href="https://www.w3schools.com/python/python_conditions.asp">Python Conditional Statements | w3schools.com</a><ol>
<li>Learn to control program flow using conditional statements.</li>
</ol>
</li>
</ol>
<p><em><strong>Related to this topic</strong></em></p>
<ol>
<li><a href="https://python-book.softuni.org/chapter-05-loops.html">Chapter 5.1. Loops | python-book.softuni.org</a></li>
<li><a href="https://python-book.softuni.org/chapter-06-nested-loops-exam-problems.html">Chapter 7.1. Complex Loops | python-book.softuni.org</a></li>
</ol>
<p><em><strong>Replacement</strong></em></p>
<h3 id="Replacing-Loops-in-Python-Using-Programmatic-Tricks"><a href="#Replacing-Loops-in-Python-Using-Programmatic-Tricks" class="headerlink" title="Replacing Loops in Python Using Programmatic Tricks"></a>Replacing Loops in Python Using Programmatic Tricks</h3><p>Replacing traditional loops in Python with advanced techniques can enhance code readability and performance. Below are some key approaches to consider:</p>
<h4 id="1-List-Comprehensions"><a href="#1-List-Comprehensions" class="headerlink" title="1. List Comprehensions"></a>1. <strong>List Comprehensions</strong></h4><ul>
<li>List comprehensions provide a concise way to replace simple <code>for</code> loops, especially for creating or filtering lists.</li>
<li>They are more readable and faster than traditional loops for straightforward transformations.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://realpython.com/courses/understand-list-comprehensions/">Python List Comprehensions | realpython.com</a>  </li>
<li><a href="https://www.geeksforgeeks.org/python-list-comprehension/">Mastering List Comprehensions | geeksforgeeks.org</a></li>
</ol>
<hr>
<h4 id="2-Map-Filter-and-Reduce"><a href="#2-Map-Filter-and-Reduce" class="headerlink" title="2. Map, Filter, and Reduce"></a>2. <strong>Map, Filter, and Reduce</strong></h4><ul>
<li>Use functional programming tools like <code>map</code> for transformations, <code>filter</code> for conditional filtering, and <code>reduce</code> for aggregations.  </li>
<li>These methods eliminate the need for explicit loops and promote a functional programming style.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://realpython.com/python-functional-programming/">Functional Programming in Python | realpython.com</a>  </li>
<li><a href="https://www.programiz.com/python-programming/methods/built-in/map">Python map(), filter(), and reduce() | programiz.com</a></li>
</ol>
<hr>
<h4 id="3-Generators-and-Generator-Expressions"><a href="#3-Generators-and-Generator-Expressions" class="headerlink" title="3. Generators and Generator Expressions"></a>3. <strong>Generators and Generator Expressions</strong></h4><ul>
<li>Replace loops with generators for memory-efficient processing of large datasets.  </li>
<li>Generator expressions can streamline code and work well with functions like <code>sum()</code> and <code>any()</code>.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://realpython.com/introduction-to-python-generators/">Generators in Python | realpython.com</a>  </li>
<li><a href="https://www.geeksforgeeks.org/generators-in-python/">Python Generators | geeksforgeeks.org</a></li>
<li><a href="https://www.geeksforgeeks.org/python-itertools/">Python Itertools | geeksforgeeks.org</a></li>
</ol>
<hr>
<h4 id="4-Recursion-as-a-Loop-Replacement"><a href="#4-Recursion-as-a-Loop-Replacement" class="headerlink" title="4. Recursion as a Loop Replacement"></a>4. <strong>Recursion as a Loop Replacement</strong></h4><ul>
<li>Replace certain types of nested loops with recursion for problems like tree traversal.  </li>
<li>While not always efficient, recursion simplifies some complex loop structures.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://www.programiz.com/python-programming/recursion">Recursion in Python | programiz.com</a>  </li>
<li><a href="https://www.geeksforgeeks.org/difference-between-recursion-and-iteration">Difference between Recursion and Iteration | geeksforgeeks.org</a></li>
</ol>
<hr>
<h4 id="5-Vectorized-Operations-with-NumPy"><a href="#5-Vectorized-Operations-with-NumPy" class="headerlink" title="5. Vectorized Operations with NumPy"></a>5. <strong>Vectorized Operations with NumPy</strong></h4><ul>
<li>Replace loops with vectorized operations in libraries like NumPy for mathematical or array computations.  </li>
<li>These operations are faster and more efficient than traditional looping mechanisms.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://numpy.org/doc/stable/user/quickstart.html">NumPy Quick Start | numpy.org</a>  </li>
<li><a href="https://towardsdatascience.com/understanding-text-vectorizations-how-streamlined-models-made-feature-extractions-a-breeze-8b9768bbd96a">Understanding Vectorization (Sklearn + Pandas + NumPy) | towardsdatascience.com</a></li>
<li><a href="https://medium.com/@michael-scherding/understanding-vectorization-775a419d1270">Understanding Vectorization in NumPy and Pandas | medium.com</a></li>
</ol>
<hr>
<h4 id="6-Using-Built-in-Python-Functions"><a href="#6-Using-Built-in-Python-Functions" class="headerlink" title="6. Using Built-in Python Functions"></a>6. <strong>Using Built-in Python Functions</strong></h4><ul>
<li>Replace loops with Python’s built-in functions like <code>sum()</code>, <code>max()</code>, <code>any()</code>, etc., to perform common operations.</li>
</ul>
<p><em><strong>Related to this topic</strong></em>  </p>
<ol>
<li><a href="https://docs.python.org/3/library/functions.html">Built-in Functions in Python | docs.python.org</a>  </li>
<li><a href="https://realpython.com/python-built-in-functions/">Optimizing with Built-in Functions | realpython.com</a></li>
</ol>
<hr>
<p>These techniques not only replace traditional loops but also align with Python’s philosophy of simplicity and elegance.</p>
<h2 id="Loops-in-Python-For-While-and-Nested-Loops"><a href="#Loops-in-Python-For-While-and-Nested-Loops" class="headerlink" title="Loops in Python - For, While and Nested Loops"></a>Loops in Python - For, While and Nested Loops</h2><p>Loops are used to execute a block of code repeatedly. Python supports <code>for</code> and <code>while</code> loops, along with nested loops for complex tasks.</p>
<ol>
<li><a href="https://www.tutorialspoint.com/python/python_loops.htm">Python Loops | tutorialspoint.com</a><ol>
<li>Master loops for repetitive tasks and data iteration.</li>
</ol>
</li>
</ol>
<h2 id="Python-Functions"><a href="#Python-Functions" class="headerlink" title="Python Functions"></a>Python Functions</h2><p>Functions allow you to encapsulate code into reusable blocks. Python supports user-defined, lambda, and built-in functions.</p>
<ol>
<li><a href="https://www.programiz.com/python-programming/function">Python Functions | programiz.com</a><ol>
<li>Understand function declarations, arguments, and scope.</li>
</ol>
</li>
</ol>
<h2 id="Python-OOPs-Concepts"><a href="#Python-OOPs-Concepts" class="headerlink" title="Python OOPs Concepts"></a>Python OOPs Concepts</h2><p>Object-oriented programming (OOP) in Python revolves around objects and classes. Key concepts include inheritance, encapsulation, and polymorphism.</p>
<ol>
<li><a href="https://realpython.com/python3-object-oriented-programming/">Python OOP | realpython.com</a><ol>
<li>Learn the principles of OOP and their implementation in Python.</li>
</ol>
</li>
</ol>
<h2 id="Python-Functional-Programming"><a href="#Python-Functional-Programming" class="headerlink" title="Python Functional Programming"></a>Python Functional Programming</h2><p>Functional programming treats computation as the evaluation of mathematical functions. Python’s support for <code>map</code>, <code>reduce</code>, and <code>filter</code> simplifies this paradigm.</p>
<ol>
<li><a href="https://medium.com/@gchandrams/python-functional-programming-techniques-505c7b5da441">Python Functional Programming | medium.com</a><ol>
<li>Dive into functional programming with Python.</li>
</ol>
</li>
</ol>
<h2 id="Python-Modules"><a href="#Python-Modules" class="headerlink" title="Python Modules"></a>Python Modules</h2><p>Modules in Python are files containing Python code that can define functions, classes, and variables. They promote code reuse.</p>
<ol>
<li><a href="https://docs.python.org/3/tutorial/modules.html">Python Modules | python.org</a><ol>
<li>Learn to import and use Python modules effectively.</li>
</ol>
</li>
</ol>
<h2 id="Python-Exception-Handling"><a href="#Python-Exception-Handling" class="headerlink" title="Python Exception Handling"></a>Python Exception Handling</h2><p>Exception handling allows you to manage errors gracefully using <code>try</code>, <code>except</code>, <code>finally</code>, and <code>raise</code>.</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/python-exception-handling/">Python Exception Handling | geeksforgeeks.org</a><ol>
<li>Master exception handling to write robust code.</li>
</ol>
</li>
</ol>
<h2 id="Python-Packages"><a href="#Python-Packages" class="headerlink" title="Python Packages"></a>Python Packages</h2><p>Packages are collections of modules grouped together. They are used to organize related modules for larger applications.</p>
<ol>
<li><a href="https://www.w3schools.com/python/python_modules.asp">Python Packages | w3schools.com</a><ol>
<li>Explore how to create and manage Python packages.</li>
</ol>
</li>
</ol>
<h2 id="Python-Collections-Module"><a href="#Python-Collections-Module" class="headerlink" title="Python Collections Module"></a>Python Collections Module</h2><p>Python’s <code>collections</code> module provides specialized container data types like <code>Counter</code>, <code>deque</code>, <code>OrderedDict</code>, and <code>defaultdict</code>. These can simplify complex data operations.</p>
<ol>
<li><a href="https://realpython.com/python-collections-module/">Python Collections Module | realpython.com</a><ol>
<li>Learn to use advanced data containers in Python.</li>
</ol>
</li>
</ol>
<h2 id="Python-Projects-Beginner-to-Advanced"><a href="#Python-Projects-Beginner-to-Advanced" class="headerlink" title="Python Projects - Beginner to Advanced"></a>Python Projects - Beginner to Advanced</h2><p>Python projects provide practical experience with coding concepts. Start with simple projects and gradually take on more advanced challenges.</p>
<ol>
<li><a href="https://www.geeksforgeeks.org/python-projects-beginner-to-advanced/">Python Project Ideas | geeksforgeeks.org</a><ol>
<li>Discover project ideas for every skill level.</li>
</ol>
</li>
</ol>
<h2 id="Python-Quiz"><a href="#Python-Quiz" class="headerlink" title="Python Quiz"></a>Python Quiz</h2><p>Quizzes help reinforce your Python knowledge by testing your understanding of concepts.</p>
<ol>
<li><a href="https://www.w3schools.com/python/python_quiz.asp">Python Quiz | w3schools.com</a><ol>
<li>Test your skills with interactive Python quizzes.</li>
</ol>
</li>
<li><a href="https://www.geeksforgeeks.org/python-quizzes/">Python Quiz | geeksforgeeks.org</a></li>
<li><a href="https://pynative.com/python/quizzes/">Python Quiz | pynative.com</a></li>
<li><a href="https://www.codechef.com/skill-test/basic-python">Python Quiz | codechef.com</a></li>
<li><a href="https://www.evamariakiss.de/tutorial/python/python_quizzes.php">Python Quiz | evamariakiss.de</a></li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>dev_side</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu web traffic meters</title>
    <url>/hexo-blog/2023/10/25/post_dev_side__ubuntu_web_trafic_meter/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>On Ubuntu, several applications are available to control, monitor, and visualize network traffic and web activity for applications or services. Here are some of the top tools for these purposes:</p>
<p>Get list of network devices by UNIX apps:<br><em><strong>ip</strong></em><br>    <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip <span class="built_in">link</span> show</span><br></pre></td></tr></table></figure><br><em><strong>ifconfig</strong></em><br>      <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure></p>
<h3 id="1-Wireshark"><a href="#1-Wireshark" class="headerlink" title="1. Wireshark"></a>1. <strong>Wireshark</strong></h3><ul>
<li><p><strong>Description:</strong> Wireshark is a powerful, GUI-based network protocol analyzer that captures and displays detailed information about network traffic. It supports filtering, visualization, and analysis of network packets.</p>
</li>
<li><p><strong>Features:</strong> Packet filtering, protocol analysis, real-time capture, and color-coded visualizations.</p>
</li>
<li><p><strong>Installation:</strong></p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update <span class="built_in">sudo</span> apt install wireshark -y</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Usage:</strong> Launch with <code>wireshark</code> and select a network interface to start capturing packets.</p>
</li>
</ul>
<h3 id="2-nload"><a href="#2-nload" class="headerlink" title="2. nload"></a>2. <strong>nload</strong></h3><ul>
<li><p><strong>Description:</strong> A command-line tool that provides a real-time visual representation of incoming and outgoing network traffic per interface.</p>
</li>
<li><p><strong>Features:</strong> Bandwidth monitoring with visual bars and traffic graphs.</p>
</li>
<li><p><strong>Installation:</strong></p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update <span class="built_in">sudo</span> apt install nload -y</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Usage:</strong> Run <code>nload</code> followed by the network interface name, for example:</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nload eth0</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3-ntopng"><a href="#3-ntopng" class="headerlink" title="3. ntopng"></a>3. <strong>ntopng</strong></h3><ul>
<li><p><strong>Description:</strong> ntopng is a web-based tool for monitoring network traffic. It provides detailed analytics on application usage, IP addresses, and protocol data. It also supports various filters.</p>
</li>
<li><p><strong>Features:</strong> Web-based UI, detailed traffic statistics, protocol analysis, and application-level monitoring.</p>
</li>
<li><p><strong>Installation:</strong></p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update <span class="built_in">sudo</span> apt install ntopng -y</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>Usage:</strong> Access the web interface at <code>http://localhost:3000</code>.</p>
</li>
</ul>
<h3 id="4-iftop"><a href="#4-iftop" class="headerlink" title="4. iftop"></a>4. <strong>iftop</strong></h3><ul>
<li><strong>Description:</strong> A terminal-based tool for monitoring network traffic. It shows a list of connections with their bandwidth usage.</li>
<li><strong>Features:</strong> Sortable columns, bandwidth tracking, and customizable filters.</li>
<li><strong>Installation:</strong></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update <span class="built_in">sudo</span> apt install iftop -y</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>Usage:</strong> Run with sudo for full functionality:  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> iftop</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="5-Tcpdump"><a href="#5-Tcpdump" class="headerlink" title="5. Tcpdump"></a>5. <strong>Tcpdump</strong></h3><ul>
<li><p><strong>Description:</strong> A powerful command-line packet analyzer that captures network traffic and saves it for analysis.</p>
</li>
<li><p><strong>Features:</strong> Highly customizable packet capture, supports saving data in <code>pcap</code> format for analysis in Wireshark.</p>
</li>
<li><p><strong>Installation:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update <span class="built_in">sudo</span> apt install tcpdump -y</span><br></pre></td></tr></table></figure>
<p> &#96;</p>
</li>
<li><p><strong>Usage:</strong> For capturing HTTP traffic on a specific interface, for example:</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> tcpdump -i eth0 <span class="string">&#x27;port 80&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>Each of these tools offers different advantages depending on your needs, from basic bandwidth</p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>dev_side</tag>
        <tag>API</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>UNIX command tutorials</title>
    <url>/hexo-blog/2023/10/25/post_dev_side__unix_comand_tutorial/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Below is a list of some popular UNIX command-line tools designed to help learn and practice UNIX commands:</p>
<h2 id="1-bashcrawl"><a href="#1-bashcrawl" class="headerlink" title="1. bashcrawl:"></a>1. <strong><code>bashcrawl</code></strong>:</h2><ul>
<li>A game-like, interactive tutorial for learning UNIX commands inside the bash shell. It guides you through different directories and tasks, teaching basic UNIX commands in the process.</li>
<li><strong>Where to get it</strong>: <a href="https://github.com/notklaatu/bashcrawll">bashcrawl GitHub Repository</a></li>
</ul>
<h2 id="2-vimtutor"><a href="#2-vimtutor" class="headerlink" title="2. vimtutor:"></a>2. <strong><code>vimtutor</code></strong>:</h2><ul>
<li>While this tool specifically teaches the <code>vim</code> editor, it’s useful for learning command-line navigation and basics. Most UNIX systems come with <code>vim</code>, and running <code>vimtutor</code> provides an interactive way to learn.</li>
<li><strong>Command to run</strong>: <code>vimtutor</code></li>
</ul>
<h2 id="3-explainshell"><a href="#3-explainshell" class="headerlink" title="3. explainshell:"></a>3. <strong><code>explainshell</code></strong>:</h2><ul>
<li>This is an online tool that helps explain UNIX commands by breaking down shell command syntax and arguments. You input a command, and it shows a description of each part of the command.</li>
<li><strong>Website</strong>: <a href="https://explainshell.com/">explainshell.com</a></li>
</ul>
<h2 id="4-tldr-Too-Long-Didn’t-Read"><a href="#4-tldr-Too-Long-Didn’t-Read" class="headerlink" title="4. tldr (Too Long Didn’t Read):"></a>4. <strong><code>tldr</code> (Too Long Didn’t Read)</strong>:</h2><ul>
<li>A simplified and community-driven collection of UNIX command explanations. It provides short, practical examples for UNIX commands, unlike the often-detailed <code>man</code> pages.</li>
<li><strong>Install</strong>: <code>sudo apt install tldr</code> (on Ubuntu) or <a href="https://github.com/tldr-pages/tldr">tldr GitHub</a></li>
<li><strong>Usage</strong>: <code>tldr &lt;command&gt;</code></li>
</ul>
<h2 id="5-cheat"><a href="#5-cheat" class="headerlink" title="5. cheat"></a>5. <strong><code>cheat</code></strong></h2><ul>
<li>A cheat-sheet tool that gives you concise examples and explanations of how to use UNIX commands. You can use it to quickly look up syntax and examples for common commands.</li>
<li><strong>Install</strong>: <code>pip install cheat</code></li>
<li><strong>Usage</strong>: <code>cheat &lt;command&gt;</code></li>
<li><strong>GitHub</strong>: <a href="https://github.com/cheat/cheat">cheat GitHub</a></li>
</ul>
<h2 id="6-cheatsheets"><a href="#6-cheatsheets" class="headerlink" title="6. cheatsheets"></a>6. <strong><code>cheatsheets</code></strong></h2><ul>
<li>This repository contains community-sourced cheatsheets to be used with <a href="https://github.com/cheat/cheat">cheat</a> and similar applications.</li>
<li><strong>GitHub</strong>: <a href="https://github.com/cheat/cheatsheets">cheatsheets Github</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>dev_side</tag>
        <tag>unix</tag>
      </tags>
  </entry>
  <entry>
    <title>My glossaries</title>
    <url>/hexo-blog//knowledge/my-glossaries/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>This post contains list of glossary&#x2F;vacabularies</strong></p>
<ol>
<li>🏥 <strong>Medical glossaries</strong>:<ol>
<li>⚕️ <em>General medical glossary</em>: <ul>
<li>Glossary created by <a href="https://www.mkdocs.org/">MkDocs</a></li>
<li>Web link: <a href="https://ooge0.github.io/glossary/medical-glossary-1/">https://ooge0.github.io/glossary/medical-glossary-1/</a></li>
<li>Parsed resource: <a href="https://medconsonline.com/en/glossary">https://medconsonline.com/en/glossary</a></li>
</ul>
</li>
<li>🧙 <em>General oncology glossary</em>: <ul>
<li>Glossary created by <a href="https://www.mkdocs.org/">MkDocs</a></li>
<li>Web link: <a href="https://ooge0.github.io/glossary/oncology-glossary-1/">https://ooge0.github.io/glossary/oncology-glossary-1/</a></li>
<li>Parsed resource: <a href="https://chemoteka.com.ua/dictionary">https://chemoteka.com.ua/dictionary</a></li>
</ul>
</li>
</ol>
</li>
<li>🗿 <strong>Philosophy glossaries</strong>:<ol>
<li><em>General philosophy glossary</em>(ENG):  <ul>
<li>Glossary created by <a href="https://www.mkdocs.org/">MkDocs</a></li>
<li>Web link: <a href="https://ooge0.github.io/glossary/en/en__philosophy_glossary_1/">https://ooge0.github.io/glossary/en/en__philosophy_glossary_1/</a></li>
<li>Parsed resource: plato.stanford.edu, iep.utm.edu, britannica.com&#x2F;topic&#x2F;philosophy</li>
</ul>
</li>
<li><em><strong>General philosophy glossary</strong></em>(UA):  <ul>
<li>Glossary created by <a href="https://www.mkdocs.org/">MkDocs</a></li>
<li>Web link: <a href="https://ooge0.github.io/glossary/uk/ua__philosophy_glossary_1/">https://ooge0.github.io/glossary/uk/ua__philosophy_glossary_1/</a></li>
<li>Parsed resource: plato.stanford.edu, iep.utm.edu, britannica.com&#x2F;topic&#x2F;philosophy</li>
</ul>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>science</tag>
        <tag>glossary</tag>
        <tag>knowledge</tag>
      </tags>
  </entry>
  <entry>
    <title>Types of protocols for interaction on client-server architecture level.</title>
    <url>/hexo-blog/2024/04/09/post_network_protocols/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">  <img src="/hexo-blog/images/network_protocols_banner_pic.jpg" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />

<p><strong>Below is a list of most popular types of protocols for interaction on client-server architecture level.</strong></p>
<ol>
<li><strong>Hypertext Transfer Protocol (HTTP):</strong> The foundation of the web, HTTP defines how clients (web browsers) request and receive resources (web pages, images, etc.) from servers. It’s a request-response protocol where clients send GET or POST requests and servers respond with data and status codes.</li>
<li><strong>File Transfer Protocol (FTP)</strong>:  This protocol allows for the transfer of files between clients and servers. It offers functionalities like uploading, downloading, directory listing, and file management.</li>
<li><strong>SSH File Transfer Protocol (SFTP)</strong>: SFTP (SSH File Transfer Protocol) is a secure file transfer protocol. It runs over the SSH protocol. It supports the full security and authentication functionality of SSH.</li>
<li><strong>Simple Mail Transfer Protocol (SMTP)</strong>:  Used for sending emails, SMTP defines how email clients connect to email servers and transmit emails. It focuses on message delivery without concern for content or user interface.</li>
<li><strong>Post Office Protocol (POP3)</strong> and Internet Message Access Protocol (IMAP): These protocols are used for retrieving emails from a server. POP3 downloads emails to the client, while IMAP allows users to access and manage emails on the server itself.</li>
<li><strong>Domain Name System (DNS)</strong>:   This protocol doesn’t directly interact between clients and servers, but it’s crucial for client-server communication. DNS translates human-readable domain names (like [invalid URL removed]) into numerical IP addresses that computers can understand.</li>
<li><strong>Remote Procedure Call (RPC)</strong>:  This protocol allows a client to execute a procedure on a server as if it were running locally. It provides a transparent way for clients to access functionalities offered by servers. In advance exists gRPC protocol (gRPC Remote Procedure Calls) is a cross-platform high-performance remote procedure call (RPC) framework. gRPC was initially created by Google, but is open source and is used in many organizations. </li>
<li><strong>Secure Sockets Layer (SSL)&#x2F;Transport Layer Security (TLS)</strong>:  These protocols secure communication between clients and servers by encrypting data transmission. They are essential for protecting sensitive information like passwords and credit card data.</li>
<li><strong>Message Queueing Protocols</strong>:  Protocols like <a href="https://www.rabbitmq.com/tutorials/amqp-concepts">AMQP</a> and <a href="https://www.rabbitmq.com/">RabbitMQ</a> enable asynchronous communication between clients and servers. Messages are placed in a queue and processed by the server at its own pace, decoupling clients from server availability.</li>
</ol>
<p><em>References:</em></p>
<ul>
<li><a href="https://www.theknowledgeacademy.com/blog/client-server-architecture/#:~:text=Client%2DServer%20Architecture%20handles%20network,which%20processes%20and%20responds%20accordingly.">What is Client-Server Architecture? Explained in Detail</a></li>
<li><a href="https://medium.com/@pavlokolodka/efficient-client-server-communication-an-overview-of-protocols-and-techniques-f73c1c1016d">Efficient Client-Server Communication: An Overview of Protocols and Techniques</a></li>
<li><a href="https://hpbn.co/">High Performance Browser Networking</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview">An overview of HTTP(by MDN Web Docs)</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc2616">Hypertext Transfer Protocol (HTTP) &#x2F; rfc2616</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc114">File Transfer Protocol (FTP) &#x2F; rfc114</a></li>
<li><a href="https://www.ssh.com/academy/ssh/sftp-ssh-file-transfer-protocol">SSH File Transfer Protocol (SFTP): Get SFTP client &amp; server</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5321">Simple Mail Transfer Protocol (SMTP) &#x2F; rfc5321</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc1035">Domain Name System (DNS) &#x2F; rfc1035</a></li>
<li><a href="https://www.geeksforgeeks.org/remote-procedure-call-rpc-in-operating-system/">Remote Procedure Call (RPC) in Operating System</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5531">Remote Procedure Call (RPC) &#x2F;rfc5531</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc6101">Secure Sockets Layer (SSL) &#x2F; rfc6101</a></li>
<li><a href="https://datatracker.ietf.org/doc/html/rfc5246">Transport Layer Security (TLS) &#x2F; rfc5246</a></li>
<li><a href="https://kisztof.medium.com/rabbitmq-an-introduction-to-message-queuing-protocols-and-policies-cb6073c7a3d6">RabbitMQ: An Introduction to Message Queuing, Protocols, and Policies</a></li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>network_protocols</tag>
        <tag>protocols</tag>
      </tags>
  </entry>
  <entry>
    <title>ML - colorizing plain text dynamically in HTML</title>
    <url>/hexo-blog/2024/11/14/post_ml_colorizing_plain_text_dynamically_in_html/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>For colorizing plain text dynamically in HTML, you can take several approaches based on your needs. Here are some known methods, tools, and frameworks, including both lightweight CSS&#x2F;JavaScript solutions and Python-based frameworks that leverage natural language processing (NLP) and machine learning to analyze and colorize text based on sentiment, keywords, or other factors.</em></p>
<ol>
<li>CSS and JavaScript Solutions<ol>
<li><strong>CSS and JavaScript</strong></li>
</ol>
<ul>
<li><em>CSS Classes:</em><br> You can create predefined CSS classes for different semantic categories (like .positive, .negative, .neutral, etc.) and apply these classes conditionally using JavaScript.</li>
<li><em>JavaScript with Sentiment Analysis APIs:</em><br> JavaScript can detect certain keywords or analyze sentiment using a lightweight API (e.g., Aylien, Twinword). The result can be used to assign CSS classes to colorize the text based on positive, neutral, or negative sentiment.</li>
</ul>
<ol start="2">
<li><em>Color Thief (JavaScript Library)</em><br> Color Thief is a small JavaScript library that extracts dominant colors from images. Although it’s primarily for images, you can adapt it to analyze background colors of images, which could then be applied to corresponding text. This is more complex and situational but works well for aesthetic color matching.</li>
</ol>
</li>
<li><strong>Python Libraries and Frameworks</strong><ol>
<li><em>TextBlob</em><br> TextBlob is a Python library for processing textual data. It’s easy to use and provides simple API calls to perform sentiment analysis (polarity, subjectivity). The results can help assign colors based on sentiment.<br> Use Case: After analyzing sentiment polarity, you can map scores to color classes and render the HTML using Python-based templating engines like Jinja2.<br> References:<a href="https://towardsdatascience.com/having-fun-with-textblob-7e9eed783d3f">Introducing TextBlob<br>A Python library for processing textual data, NLP framework, sentiment analysis</a>, <a href="https://medium.com/@qudrohbidemi/sentiment-analysis-project-using-textblob-216d3fe119fc">Sentiment Analysis Project Using TextBlob</a> , <a href="https://jorgestutorials.com/sentimentanalysistextblob.html">Sentiment Analysis with TextBlob**</a></li>
<li><em>NLTK (Natural Language Toolkit)</em><br> NLTK provides extensive tools for text processing, and it can be used to categorize words, perform named-entity recognition, or detect topics. You could use these tags to assign specific colors to text.<br> Customization: Use NLTK’s tools to tag parts of speech or entities (like names, locations), then apply color based on each type.</li>
<li><em>SpaCy</em><br> <a href="https://spacy.io/">SpaCy</a> is a powerful NLP library that provides pre-trained models for named entity recognition, parts of speech tagging, and more. You can use these categories to assign colors to text based on identified entities.<br> Usage: SpaCy models can highlight organizations, people, or other entities, and each type can be styled with a specific color.</li>
<li><em>NLTK + Seaborn (for Heatmaps or Color Scaling)</em><br> Using <a href="https://www.nltk.org/">NLTK</a> for sentiment combined with <a href="https://seaborn.pydata.org/">Seaborn</a> (a visualization library) allows you to create color gradients that reflect the text sentiment strength. For example, stronger positive or negative sentiment can be mapped to color intensity.<br> <em><strong>Example</strong></em>: Map positive sentiments to green shades and negative sentiments to red, and then render HTML with colored spans for different text parts.<br> Reference: <a href="https://seaborn.pydata.org/generated/seaborn.heatmap.html">seaborn.heatmap</a> , <a href="https://python-graph-gallery.com/92-control-color-in-seaborn-heatmaps/">Control color in seaborn heatmaps</a></li>
<li>Pillow (for Color Extraction and Analysis)<br> <a href="https://pillow.readthedocs.io/en/stable/">Pillow</a> can extract dominant colors from an image file and can be combined with textual data in certain contexts (e.g., background-image analysis and text overlay).<br> <em><strong>Example</strong></em>: Use dominant colors from an image as a background for text, enhancing UI consistency and readability.<br> Reference: <a href="https://shegocodes.medium.com/extracting-all-colors-in-images-with-python-2e36eb8a67d2">Medium | Extracting All Colors in Images with Python</a></li>
</ol>
</li>
<li><strong>Machine Learning Solutions</strong><ol>
<li><em>TensorFlow &#x2F; Keras (Text Classification)</em><br> TensorFlow&#x2F;Keras can train models to classify text into categories based on tone, emotion, or topic. A neural network model can be trained to detect emotions or sentiment and output classes that correspond to color themes.<br> Implementation: Use a pre-trained model (or train one) for text sentiment or emotion classification. Then, map each category to a color and apply it dynamically. TensorFlow Lite can further optimize the model for lighter web applications.</li>
<li><em>Hugging Face Transformers</em><br> The Hugging Face library offers a collection of transformer models for NLP tasks, including sentiment analysis, topic detection, and entity recognition. Using a model like DistilBERT or RoBERTa, you can analyze text and assign colors based on predicted classes.<br> Application: After running text through the model, assign colors based on its classification (e.g., color positive sentiments in green, neutral in gray, and negative in red).</li>
<li><em>OpenAI GPT-3 &#x2F; GPT-4 API</em><br> OpenAI’s GPT-3 and GPT-4 can analyze text to detect tone, sentiment, or even highlight keywords or important information. You could send text to the API and use its outputs to apply colors conditionally based on analysis.<br> <em><strong>How To Use</strong></em>: **Call the API to get sentiment or topic analysis, then use CSS classes to colorize the HTML text dynamically based on the response.</li>
</ol>
</li>
<li><strong>Web-Based Text Analysis Tools with APIs</strong><ol>
<li>Aylien, MonkeyLearn, and Twinword<br> These are third-party text analysis APIs that offer sentiment analysis, entity recognition, and other NLP features. They can be accessed from both Python and JavaScript environments.<br> <em>Integration</em>: Fetch analysis results via API and use the output categories to style HTML text accordingly.</li>
</ol>
</li>
</ol>
<hr>
<p>  <strong>Summary of Recommendations</strong></p>
<ul>
<li><em>Quick, Lightweight Solution</em>: Use CSS classes with JavaScript or APIs like Aylien and TextBlob for sentiment-based coloring.</li>
<li><em>Python-Based NLP and Visualization</em>: Use TextBlob, NLTK, and Seaborn for Python-only projects requiring sentiment-based or entity-based coloring.</li>
<li><em>Advanced Customization</em>: Use SpaCy, Hugging Face models, or TensorFlow&#x2F;Keras if you need deeper analysis and customization, especially for applications that benefit from entity detection or complex classifications.</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>ML</tag>
        <tag>html</tag>
        <tag>tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Psychology</title>
    <url>/hexo-blog/2024/10/18/post_psy__papers/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>Carroll Izard. The Psychology of Emotions</li>
<li>Patterns of emotions. A new analysis of anxiety and depression. Carroll Izard</li>
<li>The American mind; an interpretation of American thought and character since the 1880’s<ul>
<li><a href="https://archive.org/stream/in.ernet.dli.2015.523442/2015.523442.The-American_djvu.txt">Read on archive.org</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ML</tag>
        <tag>papers</tag>
      </tags>
  </entry>
  <entry>
    <title>Principles of categorizing</title>
    <url>/hexo-blog/2024/10/28/post_principles_of_categorizing/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>This post contains information about fundamental books for classic principles of categorizing.</strong></p>
<p>Fundamental books that delve deeply into the principles of categorizing and organizing knowledge across different fields:</p>
<ol>
<li><p>Metaphysics by Aristotle<br>   <strong>Description:</strong> Aristotle’s work is foundational in Western philosophy, with early explorations into categorization and classification, particularly his concept of “Categories,” which influenced logical structures and classification in science, philosophy, and more.<br>   <strong>Book reference:</strong> <a href="https://classics.mit.edu/Aristotle/metaphysics.1.i.html">Metaphysics by Aristotle</a></p>
</li>
<li><p>Categories by Aristotle<br>   <strong>Description:</strong> In this essential work, Aristotle<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Aristotle - Aristotle(Greek: Ἀριστοτέλης Aristotélēs; 384–322 BC) was an Ancient Greek philosopher and polymath. His writings cover a broad range of subjects spanning the natural sciences, philosophy, linguistics, economics, politics, psychology, and the arts. As the founder of the Peripatetic school of philosophy in the Lyceum in Athens, he began the wider Aristotelian tradition that followed, which set the groundwork for the development of modern science. [wikipedia: Aristotle](https://en.wikipedia.org/wiki/Aristotle)">[1]</span></a></sup> introduces a framework for understanding and categorizing different forms of knowledge, laying the groundwork for logical classification systems.<br>   <strong>Book reference:</strong> <a href="https://classics.mit.edu/Aristotle/categories.html">Categories by Aristotle</a></p>
</li>
<li><p>Mathematical Principles of Naturalis Philosophy by Isaac Newton <sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Isaac Newton - Sir Isaac Newton FRS (25 December 1642 – 20 March 1726/27) was an English polymath active as a mathematician, physicist, astronomer, alchemist, theologian, and author who was described in his time as a natural philosopher.He was a key figure in the Scientific Revolution and the Enlightenment that followed. [wikipedia: Isaac Newton](https://en.wikipedia.org/wiki/Isaac_Newton)">[2]</span></a></sup><br>   <strong>Description:</strong> lthough primarily a scientific text, Newton’s “Principia” exemplifies the early scientific method’s approach to categorizing natural phenomena, setting the stage for systematic inquiry and structured scientific classification.<br>   <strong>Book reference:</strong> </p>
<ol>
<li><a href="https://redlightrobber.com/red/links_pdf/Isaac-Newton-Principia-English-1846.pdf">Mathematical Principles of Natural Philosophy by Isaac Newton</a> </li>
<li><a href="https://www.gutenberg.org/ebooks/28233">Philosophiae Naturalis Principia Mathematica by Isaac Newton</a></li>
</ol>
</li>
<li><p>A System of Logic, Ratiocinative and Inductive by John Stuart Mill<br>   <strong>Description:</strong> Mill’s book is a landmark work on logic, covering classification, reasoning, and scientific methods for organizing knowledge and evidence, crucial for systematic thinking and empirical sciences.<br>     DOI: 10.1017&#x2F;CBO9781139149839<br>     <a href="https://www.gutenberg.org/files/26495/26495-pdf.pdf">Read on gutenberg.org</a><br>     <a href="../../../../../docs/other/a_system_of_logic_ratiocinative_and_inductive_by_john_stuart_mill.pdf">Read here</a></p>
</li>
<li><p>A Guide to the Classification Theorem for Compact Surfaces by Jean Gallier<br>   <strong>Description:</strong> This work is significant in mathematics and topology, providing insight into classifying surfaces and structures, which has implications for mathematical taxonomy.</p>
</li>
<li><p>On the Origin of Species by Charles Darwin<br>   <strong>Description:</strong> Darwin’s work revolutionized biological classification, showing how species evolve and adapt. His theories influenced the way we classify life forms, emphasizing evolutionary relationships as a basis for taxonomy.</p>
</li>
<li><p>The Logic of Scientific Discovery by Karl Popper<br>   <strong>Description:</strong> Popper’s book discusses the scientific method and the role of classification in developing theories and hypotheses, providing a foundation for scientific knowledge organization.</p>
</li>
<li><p>Systematics and the Origin of Species by Ernst Mayr<br>   <strong>Description:</strong> Mayr’s work is pivotal in evolutionary biology and taxonomy, exploring how species are classified based on genetics, morphology, and evolutionary history.</p>
</li>
<li><p>Elements by Euclid<br>   <strong>Description:</strong> An essential work in mathematics, Euclid’s “Elements” systematically categorizes geometric principles, setting a precedent for organizing mathematical knowledge.</p>
</li>
<li><p>The Structure of Scientific Revolutions by Thomas Kuhn<br>  <strong>Description:</strong> Kuhn’s book introduced the concept of paradigm shifts and discusses how scientific knowledge is organized, structured, and periodically reclassified in response to new discoveries.</p>
</li>
<li><p>The Species Problem by David L. Hull<br>  <strong>Description:</strong> Hull examines the philosophical issues in defining and categorizing species, a classic text in understanding how biological classification raises complex questions about the nature of categories.</p>
</li>
<li><p>Principia Ethica by G.E. Moore<br>  <strong>Description:</strong> Although a work in ethics, Moore’s analysis on categorizing moral concepts influenced the logical and systematic classification of ethical terms and principles.</p>
</li>
<li><p>Classifications and Typologies in Qualitative Research by Ian Dey<br>  <strong>Description:</strong> This text delves into classification systems in qualitative research, explaining how data is categorized and analyzed in social sciences.</p>
</li>
<li><p>Conceptual Spaces: The Geometry of Thought by Peter Gärdenfors<br>  <strong>Description:</strong> Gärdenfors explores the cognitive basis of categorization and how we form mental categories, linking psychology with systematic classification principles.</p>
</li>
<li><p>Introduction to the Theory of Sets by Joseph Breuer<br>  <strong>Description:</strong> This work on set theory is fundamental to mathematics and logic, providing a structured framework for understanding categorization through the concept of sets, which underlies much of modern classification theory.</p>
</li>
</ol>
<p><strong>For books that explore systematic knowledge categorization and classification, here are some highly regarded titles:</strong></p>
<ol>
<li><p>Classification Theory: Foundations and Applications by William G. Wilson<br>   <strong>Description:</strong> This book provides a comprehensive overview of classification theories, exploring the foundations, methodologies, and applications across different fields. It discusses systematic approaches to categorization in science, information systems, and data organization.</p>
</li>
<li><p>Syntactic Structures by Noam Chomsky<br>   <strong>Description:</strong> Although primarily focused on linguistics, Chomsky’s work introduced systematic methods for categorizing language structure, which has influenced knowledge classification in other fields, especially in computational linguistics and artificial intelligence.</p>
</li>
<li><p>The Order of Things: An Archaeology of the Human Sciences by Michel Foucault<br>   <strong>Description:</strong> Foucault analyzes the historical evolution of classification systems in the sciences, examining how humans have historically categorized knowledge and how these structures shape our perception of the world.</p>
</li>
<li><p>Classification, 2nd Edition by David B. Suthers<br>   <strong>Description:</strong> This book provides a deep dive into systematic classification for information science, covering frameworks like taxonomies, ontologies, and faceted classification. It’s a useful resource for understanding the foundations of knowledge organization.</p>
</li>
<li><p>Library Classification and Cataloging by Lois Mai Chan<br>   <strong>Description:</strong> Focused on library science, this book explores classification systems like the Dewey Decimal and Library of Congress systems. It’s a practical guide to the systematic categorization and retrieval of knowledge.</p>
</li>
<li><p>Knowledge and the Flow of Information by Fred Dretske<br>   <strong>Description:</strong> This philosophical work examines how knowledge is categorized, structured, and communicated. Dretske’s theories are foundational in information theory and knowledge management.<br>   DOI: 10.2307&#x2F;2214939<br>   <a href="https://sci-hub.se/https://doi.org/10.2307/2214939">Read on sci-hub.se</a></p>
</li>
<li><p>Information Architecture for the World Wide Web by Louis Rosenfeld and Peter Morville<br>   <strong>Description:</strong> A practical book for categorizing digital information. It discusses principles of taxonomy, metadata, and controlled vocabularies, which are essential for creating structured information on the web.<br>   <a href="https://yunus.hacettepe.edu.tr/~tonta/courses/fall2010/bby607/IAWWW.pdf">Read on yunus.hacettepe.edu.tr</a></p>
</li>
<li><p>The Library: A Fragile History by Andrew Pettegree and Arthur der Weduwen<br>   <strong>Description:</strong> This historical account discusses how libraries have categorized and preserved knowledge over centuries, exploring classification as a tool for knowledge organization and accessibility.</p>
</li>
<li><p>General System Theory: Foundations, Development, Applications by Ludwig von Bertalanffy<br>   <strong>Description:</strong> Bertalanffy’s work is foundational in systems theory, which underpins classification across sciences. This book explores how systems thinking helps organize knowledge systematically.</p>
</li>
<li><p>Ontology Learning and Population from Text: Algorithms, Evaluation and Applications by Philipp Cimiano<br>  <strong>Description:</strong> Focusing on ontology, this book explains methods for building structured, hierarchical classifications from text data, valuable for machine learning and data science.</p>
</li>
</ol>
<p><strong>Books that explore systematic knowledge categorization and classification, here are some highly regarded titles:</strong></p>
<ol>
<li><p>Classification Theory: Foundations and Applications by William G. Wilson<br>  <strong>Description:</strong> This book provides a comprehensive overview of classification theories, exploring the foundations, methodologies, and applications across different fields. It discusses systematic approaches to categorization in science, information systems, and data organization.</p>
</li>
<li><p>Syntactic Structures by Noam Chomsky<br>  <strong>Description:</strong> Although primarily focused on linguistics, Chomsky’s work introduced systematic methods for categorizing language structure, which has influenced knowledge classification in other fields, especially in computational linguistics and artificial intelligence.</p>
</li>
<li><p>The Order of Things: An Archaeology of the Human Sciences by Michel Foucault<br>  <strong>Description:</strong> Foucault analyzes the historical evolution of classification systems in the sciences, examining how humans have historically categorized knowledge and how these structures shape our perception of the world.</p>
</li>
<li><p>Classification, 2nd Edition by David B. Suthers<br>  <strong>Description:</strong> This book provides a deep dive into systematic classification for information science, covering frameworks like taxonomies, ontologies, and faceted classification. It’s a useful resource for understanding the foundations of knowledge organization.</p>
</li>
<li><p>Library Classification and Cataloging by Lois Mai Chan<br>  <strong>Description:</strong> Focused on library science, this book explores classification systems like the Dewey Decimal and Library of Congress systems. It’s a practical guide to the systematic categorization and retrieval of knowledge.</p>
</li>
<li><p>Knowledge and the Flow of Information by Fred Dretske<br>  <strong>Description:</strong> This philosophical work examines how knowledge is categorized, structured, and communicated. Dretske’s theories are foundational in information theory and knowledge management.</p>
</li>
<li><p>Information Architecture for the World Wide Web by Louis Rosenfeld and Peter Morville<br>  <strong>Description:</strong> A practical book for categorizing digital information. It discusses principles of taxonomy, metadata, and controlled vocabularies, which are essential for creating structured information on the web.</p>
</li>
<li><p>The Library: A Fragile History by Andrew Pettegree and Arthur der Weduwen<br>  <strong>Description:</strong> This historical account discusses how libraries have categorized and preserved knowledge over centuries, exploring classification as a tool for knowledge organization and accessibility.</p>
</li>
<li><p>General System Theory: Foundations, Development, Applications by Ludwig von Bertalanffy<br>  <strong>Description:</strong> Bertalanffy’s work is foundational in systems theory, which underpins classification across sciences. This book explores how systems thinking helps organize knowledge systematically.</p>
</li>
<li><p>Ontology Learning and Population from Text: Algorithms, Evaluation and Applications by Philipp Cimiano<br>  <strong>Description:</strong> Focusing on ontology, this book explains methods for building structured, hierarchical classifications from text data, valuable for machine learning and data science.</p>
</li>
</ol>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Aristotle - Aristotle(Greek: Ἀριστοτέλης Aristotélēs; 384–322 BC) was an Ancient Greek philosopher and polymath. His writings cover a broad range of subjects spanning the natural sciences, philosophy, linguistics, economics, politics, psychology, and the arts. As the founder of the Peripatetic school of philosophy in the Lyceum in Athens, he began the wider Aristotelian tradition that followed, which set the groundwork for the development of modern science. <a href="https://en.wikipedia.org/wiki/Aristotle">wikipedia: Aristotle</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Isaac Newton - Sir Isaac Newton FRS (25 December 1642 – 20 March 1726/27) was an English polymath active as a mathematician, physicist, astronomer, alchemist, theologian, and author who was described in his time as a natural philosopher.He was a key figure in the Scientific Revolution and the Enlightenment that followed. <a href="https://en.wikipedia.org/wiki/Isaac_Newton">wikipedia: Isaac Newton</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>science</tag>
        <tag>knowledge</tag>
      </tags>
  </entry>
  <entry>
    <title>Software QA - Basic check list</title>
    <url>/hexo-blog/2024/08/28/post_qa__software_qa_basic_check_list/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="1-Login-form-Test-Cases"><a href="#1-Login-form-Test-Cases" class="headerlink" title="1 Login form Test Cases"></a>1 Login form Test Cases</h2><ol>
<li><strong>Positive test cases</strong>:<ol>
<li><strong>Valid data</strong>:<ol>
<li>Correct login and password.</li>
<li>Various email formats (with dots, hyphens, etc.).</li>
<li>Different password lengths (minimum, maximum, average).</li>
<li>Combinations of uppercase and lowercase letters, numbers, special characters.</li>
</ol>
</li>
<li><strong>Login after registration</strong>:<ol>
<li>Login with a newly created account.</li>
<li>Login after password recovery:</li>
<li>Login after successful password recovery.</li>
</ol>
</li>
<li><strong>Login after deleting account and registering new one using same credentials</strong></li>
<li><strong>Login using social networks</strong>:<ol>
<li>Login through various social networks (if this feature is available).</li>
</ol>
</li>
</ol>
</li>
<li><strong>Negative test cases</strong>:<ol>
<li><strong>Invalid data</strong>:<ol>
<li>Empty fields.</li>
<li>Incorrect email format.</li>
<li>Password too short&#x2F;long.</li>
<li>Incorrect password.</li>
<li>Special characters instead of letters and numbers.</li>
<li>SQL injection.</li>
<li>XSS attacks.</li>
</ol>
</li>
<li><strong>Blocking</strong>:<ol>
<li>Account blocking after several failed login attempts.</li>
<li>IP address blocking after several failed login attempts.</li>
</ol>
</li>
<li><strong>Missing fields</strong>:<ol>
<li>Attempting to log in without filling in required fields.</li>
</ol>
</li>
<li><strong>Non-existent user</strong>:<ol>
<li>Attempting to log in with a non-existent login.</li>
</ol>
</li>
</ol>
</li>
<li><strong>Other tests</strong>:<ol>
<li><strong>User interface tests</strong>:<ol>
<li>Checking the visual design of the form.</li>
<li>Checking the accessibility of form elements using the keyboard.</li>
<li>Checking the operation of prompts and error messages.</li>
</ol>
</li>
<li><strong>Performance tests</strong>:<ol>
<li>Checking the response time of the form under heavy load.</li>
</ol>
</li>
<li><strong>Security tests</strong>:<ol>
<li>Checking for vulnerabilities to various types of attacks (SQL injection, XSS, CSRF, etc.).</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="2-Order-creation-Test-Cases"><a href="#2-Order-creation-Test-Cases" class="headerlink" title="2 Order creation Test Cases"></a>2 Order creation Test Cases</h2><ol>
<li><p><strong>Positive test cases</strong>:</p>
<ol>
<li><strong>Valid data</strong>:<ul>
<li>Correct user information (name, address, contact details).</li>
<li>Valid payment information (credit card, PayPal, etc.).</li>
<li>Correct shipping address.</li>
<li>Valid product selection.</li>
<li>Correct quantity.</li>
<li>Successful order placement.</li>
</ul>
</li>
<li><strong>Order modification</strong>:<ul>
<li>Changing shipping address.</li>
<li>Modifying product quantity.</li>
<li>Canceling an order.</li>
</ul>
</li>
<li><strong>Order tracking</strong>:<ul>
<li>Tracking order status from placement to delivery.</li>
</ul>
</li>
<li><strong>Order history</strong>:<ul>
<li><strong>Viewing previous orders.</strong></li>
</ul>
</li>
</ol>
</li>
<li><p><strong>Negative test cases</strong>:</p>
<ol>
<li><strong>Invalid data</strong>:<ul>
<li>Empty fields.</li>
<li>Incorrect email format.</li>
<li>Invalid payment information.</li>
<li>Incorrect shipping address.</li>
<li>Out-of-stock products.</li>
<li>Negative quantity.</li>
</ul>
</li>
<li><strong>Payment errors</strong>:<ul>
<li>Declined payment.</li>
<li>Insufficient funds.</li>
<li>Invalid payment method.</li>
</ul>
</li>
<li><strong>Order placement errors</strong>:<ul>
<li>Server errors.</li>
<li>System failures.</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>Other tests</strong>:</p>
<ol>
<li><strong>User interface tests</strong>:<ul>
<li>Checking the visual design of the order form.</li>
<li>Checking the accessibility of form elements using the keyboard.</li>
<li>Checking the operation of prompts and error messages.</li>
</ul>
</li>
<li><strong>Performance tests</strong>:<ul>
<li>Checking the response time of the order process under heavy load.</li>
</ul>
</li>
<li><strong>Security tests</strong>:<ul>
<li>Checking for vulnerabilities to various types of attacks (SQL injection, XSS, CSRF, etc.).</li>
</ul>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>QA</category>
      </categories>
      <tags>
        <tag>qa</tag>
        <tag>qa_check_list</tag>
      </tags>
  </entry>
  <entry>
    <title>Software QA - DB testing approach</title>
    <url>/hexo-blog/2024/10/21/post_qa__software_qa_db_testing_approach/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em><strong>Table of Content</strong></em></p>
<p><a href="#intro"><strong>INTRO</strong></a><br><a href="#1Data-Setup-for-Tests">1. <strong>Data Setup for Tests</strong></a><br><a href="#2-Data-Verification">2. <strong>Data Verification</strong></a><br><a href="#3-Testing-Stored-Procedures">3. <strong>Testing Stored Procedures</strong></a><br><a href="#4-Data-Cleanup-After-Tests">4. <strong>Data Cleanup After Tests</strong></a><br><a href="#5-Automated-Testing-and-Validation">5. <strong>Automated Testing and Validation</strong></a></p>
<h3 id="INTRO"><a href="#INTRO" class="headerlink" title="INTRO"></a>INTRO</h3><p>Interacting with complex SQL scripts and stored procedures can be an essential part of the testing process. Below, I have outlined common scenarios along with examples of SQL scripts and stored procedures that could be useful in a QA context. These examples cover areas such as data verification, data setup for tests, and automated testing of stored procedures.</p>
<h3 id="1-Data-Setup-for-Tests"><a href="#1-Data-Setup-for-Tests" class="headerlink" title="1. Data Setup for Tests"></a>1. Data Setup for Tests</h3><p><strong>Example SQL Script to Prepare Test Data:</strong> This script creates sample data that can be used for testing purposes.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Create a test database</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE TestDB;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Use the test database</span></span><br><span class="line">USE TestDB;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Create Example Tables</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Users (</span><br><span class="line">    UserId <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">IDENTITY</span>,</span><br><span class="line">    UserName NVARCHAR(<span class="number">50</span>),</span><br><span class="line">    Email NVARCHAR(<span class="number">100</span>),</span><br><span class="line">    CreatedAt DATETIME <span class="keyword">DEFAULT</span> GETDATE()</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders (</span><br><span class="line">    OrderId <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">IDENTITY</span>,</span><br><span class="line">    UserId <span class="type">INT</span>,</span><br><span class="line">    OrderDate DATETIME <span class="keyword">DEFAULT</span> GETDATE(),</span><br><span class="line">    Amount <span class="type">DECIMAL</span>(<span class="number">10</span>, <span class="number">2</span>),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (UserId) <span class="keyword">REFERENCES</span> Users(UserId)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Insert Test Data into Users</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Users (UserName, Email)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;John Doe&#x27;</span>, <span class="string">&#x27;john@example.com&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Jane Smith&#x27;</span>, <span class="string">&#x27;jane@example.com&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;Alice Johnson&#x27;</span>, <span class="string">&#x27;alice@example.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Insert Test Data into Orders</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Orders (UserId, OrderDate, Amount)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;2023-01-01&#x27;</span>, <span class="number">150.00</span>),</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;2023-02-05&#x27;</span>, <span class="number">200.00</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;2023-03-10&#x27;</span>, <span class="number">99.99</span>);</span><br></pre></td></tr></table></figure>

<p><strong>QA Approach:</strong></p>
<ul>
<li>Use this script to create a clean database environment before running tests.</li>
<li>Ensure that the right amount of test data is present for testing various scenarios.</li>
</ul>
<h3 id="2-Data-Verification"><a href="#2-Data-Verification" class="headerlink" title="2. Data Verification"></a>2. Data Verification</h3><p><strong>Example SQL Script to Verify Data:</strong> This script checks if the data setup is correct.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Check the count of users in Users table</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> UserCount <span class="keyword">FROM</span> Users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Check total order amount for each user</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    U.UserName,</span><br><span class="line">    <span class="built_in">SUM</span>(O.Amount) <span class="keyword">AS</span> TotalAmount</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    Users U</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    Orders O <span class="keyword">ON</span> U.UserId <span class="operator">=</span> O.UserId</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">    U.UserName;</span><br></pre></td></tr></table></figure>

<p><strong>QA Approach:</strong></p>
<ul>
<li>Write scripts to verify that the setup is complete and correct before running tests.</li>
<li>Use assertions in automated tests to match expected results with SQL query outputs.</li>
</ul>
<h3 id="3-Testing-Stored-Procedures"><a href="#3-Testing-Stored-Procedures" class="headerlink" title="3. Testing Stored Procedures"></a>3. Testing Stored Procedures</h3><p><strong>Example Stored Procedure:</strong> This stored procedure calculates total orders for a user.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetUserTotalOrders</span><br><span class="line">    <span class="variable">@UserId</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SET</span> NOCOUNT <span class="keyword">ON</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        <span class="built_in">SUM</span>(Amount) <span class="keyword">AS</span> TotalAmount</span><br><span class="line">    <span class="keyword">FROM</span> </span><br><span class="line">        Orders</span><br><span class="line">    <span class="keyword">WHERE</span> </span><br><span class="line">        UserId <span class="operator">=</span> <span class="variable">@UserId</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>

<p><strong>Testing the Stored Procedure:</strong></p>
<p>You can write a script to test the stored procedure and verify its results.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Testing the stored procedure</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@TotalAmount</span> <span class="type">DECIMAL</span>(<span class="number">10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> <span class="variable">@TotalAmount</span> <span class="operator">=</span> GetUserTotalOrders <span class="variable">@UserId</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">PRINT <span class="string">&#x27;Total Amount for User 1: &#x27;</span> <span class="operator">+</span> <span class="built_in">CAST</span>(<span class="variable">@TotalAmount</span> <span class="keyword">AS</span> NVARCHAR(<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Expected output for verification in QA Testing:</span></span><br><span class="line"><span class="comment">-- Should match the expected total amount.</span></span><br></pre></td></tr></table></figure>

<p><strong>QA Approach:</strong></p>
<ul>
<li>Create unit tests for stored procedures to ensure they work as expected.</li>
<li>Check edge cases such as invalid user IDs, no orders, and performance.</li>
</ul>
<h3 id="4-Data-Cleanup-After-Tests"><a href="#4-Data-Cleanup-After-Tests" class="headerlink" title="4. Data Cleanup After Tests"></a>4. Data Cleanup After Tests</h3><p><strong>Example SQL Script to Clean Up Test Data:</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- Drop Test Data</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> Orders;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> Users;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Optionally drop the TestDB</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> TestDB;</span><br></pre></td></tr></table></figure>

<p><strong>QA Approach:</strong></p>
<ul>
<li>Always clean up test databases or data after tests to avoid state dependency in future tests.</li>
<li>Automate cleanup in the CI&#x2F;CD pipeline.</li>
</ul>
<h3 id="5-Automated-Testing-and-Validation"><a href="#5-Automated-Testing-and-Validation" class="headerlink" title="5. Automated Testing and Validation"></a>5. Automated Testing and Validation</h3><p><strong>Example of Testing with SQL Queries in Automated Tests:</strong> If using a test framework like Python’s <code>pytest</code> or a Java-based framework, you can include SQL verification steps post-execution of application code.</p>
<p>Here’s a pseudo-code example for a test that might be written in Python:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyodbc</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_user_order_total</span>():</span><br><span class="line">    <span class="comment"># Execute the application code that triggers order creation</span></span><br><span class="line">    create_order(user_id=<span class="number">1</span>, amount=<span class="number">200.00</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Connect to the Database</span></span><br><span class="line">    conn = pyodbc.connect(<span class="string">&#x27;Driver=&#123;SQL Server&#125;;&#x27;</span></span><br><span class="line">                          <span class="string">&#x27;Server=your_server;&#x27;</span></span><br><span class="line">                          <span class="string">&#x27;Database=TestDB;&#x27;</span></span><br><span class="line">                          <span class="string">&#x27;UID=user;&#x27;</span></span><br><span class="line">                          <span class="string">&#x27;PWD=password;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Execute verification SQL</span></span><br><span class="line">    cursor.execute(<span class="string">&quot;EXEC GetUserTotalOrders @UserId = 1&quot;</span>)</span><br><span class="line">    result = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Assert the expected value</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>QA</category>
      </categories>
      <tags>
        <tag>qa</tag>
        <tag>db</tag>
      </tags>
  </entry>
  <entry>
    <title>Test design techniques for mobile applications</title>
    <url>/hexo-blog/2024/04/09/post_qa__test_design_techniques_for_mobile_applications/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><p><strong>Equivalence Partitioning (EP)</strong></p>
<ul>
<li><strong>What it is</strong>: Divides input data into partitions of equivalent data from which test cases can be derived.  </li>
<li><strong>How it’s used in mobile testing</strong>: Input fields (e.g., login forms, search boxes) are tested by creating test cases for valid and invalid partitions (e.g., different password lengths, valid email formats).</li>
</ul>
</li>
<li><p><strong>Boundary Value Analysis (BVA)</strong></p>
<ul>
<li><strong>What it is</strong>: Tests boundaries between partitions where errors tend to occur.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test extreme values for input fields, such as the minimum and maximum length of text fields or file uploads (e.g., minimum and maximum resolution of an image upload).</li>
</ul>
</li>
<li><p><strong>Decision Table Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Models system behavior with different input conditions using decision tables.  </li>
<li><strong>How it’s used in mobile testing</strong>: Mobile application settings often involve multiple options (e.g., turning on notifications, dark mode, permissions). Decision tables help test combinations of these settings.</li>
</ul>
</li>
<li><p><strong>State Transition Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Tests how the application behaves when transitioning from one state to another.  </li>
<li><strong>How it’s used in mobile testing</strong>: Mobile apps often have distinct states, such as login&#x2F;logout, background&#x2F;foreground, or different navigation flows. State transition testing ensures correct app behavior as users interact with various features and transitions between states (e.g., switching between active screens, minimizing and reopening the app).</li>
</ul>
</li>
<li><p><strong>Use Case Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Validates the system behavior by following specific user scenarios or workflows.  </li>
<li><strong>How it’s used in mobile testing</strong>: Create real-world scenarios such as registering a new user, placing an order, or navigating a map in an app. It ensures the app works from the user’s perspective for each typical action.</li>
</ul>
</li>
<li><p><strong>Exploratory Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Ad-hoc testing technique where the tester actively explores the application without predefined test cases.  </li>
<li><strong>How it’s used in mobile testing</strong>: Discover unexpected behaviors by interacting with various parts of the app (e.g., swiping, pinch-to-zoom, rotating the device). This is particularly useful for UX testing.</li>
</ul>
</li>
<li><p><strong>Usability Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Evaluates the app’s user-friendliness and overall user experience.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test the app’s layout, navigation, responsiveness, and interaction. Verify the ease of use of buttons, touch gestures, app loading speed, and error messages. Also, ensure the app is intuitive and consistent with mobile design guidelines (e.g., iOS vs. Android UI&#x2F;UX standards).</li>
</ul>
</li>
<li><p><strong>Compatibility Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Verifies the application’s compatibility across different mobile devices, screen sizes, resolutions, and operating systems.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test the app on various device models (iPhones, Android phones) and OS versions (e.g., iOS 14, iOS 15, Android 10, Android 11). Also, check how the app adapts to different screen sizes (phones, tablets) and orientation (portrait vs. landscape).</li>
</ul>
</li>
<li><p><strong>Interrupt Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Ensures the application can handle interruptions gracefully.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test how the app reacts to incoming calls, text messages, low battery warnings, switching between apps, or airplane mode. The app should resume properly after the interruption.</li>
</ul>
</li>
<li><p><strong>Localization Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Ensures the app supports different languages, time zones, and regional formats.  </li>
<li><strong>How it’s used in mobile testing</strong>: Verify that the app correctly displays translated text, numbers, and date formats across different languages and regions (e.g., US vs. UK date formats, local currencies).</li>
</ul>
</li>
</ol>
<p>11.** Performance Testing**<br>    * <strong>What it is</strong>: Evaluates the app’s performance in terms of speed, responsiveness, and resource usage.<br>    * <strong>How it’s used in mobile testing</strong>: Simulate low internet bandwidth or unstable network conditions. Test app loading times, battery consumption, memory usage, and responsiveness under heavy usage or background processes.</p>
<ol start="12">
<li><strong>Security Testing</strong><ul>
<li><strong>What it is</strong>: Identifies vulnerabilities and weaknesses in the application.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test login mechanisms, encryption of sensitive data (e.g., payment information), secure transmission of data, authentication (e.g., two-factor authentication), and handling of user sessions.</li>
</ul>
</li>
</ol>
<p>13.** Network and Connectivity Testing**<br>    * <strong>What it is</strong>: Ensures the app performs well across different network conditions (e.g., Wi-Fi, 4G, 5G).<br>    * <strong>How it’s used in mobile testing</strong>: Test how the app behaves when switching between networks or under different connectivity scenarios like weak or lost signal, airplane mode, and reconnections.</p>
<ol start="14">
<li><p><strong>Regression Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Ensures that recent code changes haven’t introduced new bugs or negatively impacted existing functionality.  </li>
<li><strong>How it’s used in mobile testing</strong>: After bug fixes or feature updates, run automated or manual test cases to verify that previous functionality still works as expected.</li>
</ul>
</li>
<li><p><strong>Gesture-Based Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Tests mobile app interactions that rely on gestures like tap, swipe, pinch, zoom, or rotate.  </li>
<li><strong>How it’s used in mobile testing</strong>: Validate the proper response of gestures on different devices and screen sizes (e.g., map zoom-in&#x2F;zoom-out, swiping between screens).</li>
</ul>
</li>
<li><p><strong>Installation and Update Testing</strong></p>
<ul>
<li><strong>What it is</strong>: Ensures the application installs, updates, and uninstalls properly.  </li>
<li><strong>How it’s used in mobile testing</strong>: Test app installation under different scenarios, such as a fresh install, app updates, rollbacks, and app removal. Validate data persistence after an update and check the impact on user preferences or data.</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>test_design</tag>
        <tag>mobile_application</tag>
      </tags>
  </entry>
  <entry>
    <title>REsources</title>
    <url>/hexo-blog/2024/10/28/post_resources/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Here is a list of all the links from the blog, all in one place</p>
<ol>
<li><a href="https://roundrobin.pub/">roundrobin.pub</a></li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>acsii</tag>
      </tags>
  </entry>
  <entry>
    <title>Resources. Global platforms and people</title>
    <url>/hexo-blog/2024/10/28/post_resources__global_platforms/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>List of global platforms of resources</strong></p>
<ol>
<li><p>Archive.org<br>   <strong>Home page:</strong> <a href="https://archive.org/">https://Archive.org/</a><br>   <strong>About:</strong> Internet Archive is a non-profit library of millions of free texts, movies, software, music, websites, and more</p>
</li>
<li><p>brownstone.org<br>   <strong>Home page:</strong> <a href="https://brownstone.org/">https://brownstone.org/</a><br>   <strong>About:</strong> Brownstone Institute is a nonprofit 501(c)(3) organization founded May 2021. Its vision is of a society that places the highest value on the voluntary interaction of individuals and groups while minimizing the use of violence and force including that which is exercised by public or private authorities. This vision is that of the Enlightenment which elevated learning, science, progress, and universal rights to the forefront of public life. It is constantly threatened by ideologies and systems that would take the world back to before the triumph of the ideal of freedom.</p>
</li>
</ol>
<p><strong>List of people</strong></p>
<ol>
<li>Joe Rogan<br>   <strong>Home page:</strong> <a href="https://www.joerogan.com/">https://www.joerogan.com/</a><br>   <strong>About:</strong> A standup comedian for over 30 years, Rogan’s seventh hour long comedy special Joe Rogan: Burn the Boats premiered live on Netflix on August 3, 2024. Rogan’s previous comedy specials include Joe Rogan: Strange Times (2018) and Joe Rogan: Triggered (2016) for Netflix, Joe Rogan: Rocky Mountain High (2014) for Comedy Central, Joe Rogan: Live from the Tabernacle (2012) released via his website, Talking Monkeys in Space (2009) on CD &amp; DVD, and Joe Rogan Live (2007) on DVD. Additionally, Rogan released the CDs Shiny Happy Jihad (2007) and I’m Gonna Be Dead Someday (2000).</li>
</ol>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>global_knowledge</tag>
        <tag>resources</tag>
      </tags>
  </entry>
  <entry>
    <title>Site for blogging</title>
    <url>/hexo-blog/2024/04/28/post_site_for_blogging/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>List of blogging platforms</strong><br><a href="#bloggercom">blogger.com</a><br><a href="#indieblogpage">indieblog.page</a><br><a href="#ghostorg">ghost.org</a></p>
<hr>
<ol>
<li><p>blogger.com</p>
<p> <a href="https://www.blogger.com/">https://www.blogger.com/</a></p>
</li>
<li><p>indieblog.page</p>
<p> <a href="https://indieblog.page/all">https://indieblog.page/all</a></p>
</li>
<li><p>ghost.org</p>
<p> <a href="https://ghost.org/">https://ghost.org/</a></p>
</li>
</ol>
<hr>
<ol start="4">
<li>Simple example that can be used by</li>
</ol>
<h2 id=""><a href="#" class="headerlink" title="."></a>.</h2><div>
  <span style="
      color: purple; 
      font-weight: bold; 
      text-align: center;
      font-size: 33px;
      font-family: 'Courier New', Courier, monospace;
      transition: transform 0.3s ease;
  " 
  onmouseover="this.style.transform='scale(1.2)'" 
  onmouseout="this.style.transform='scale(1)'">   ko6e4ka   
  </span>
</div>

<p>  <img src="/hexo-blog/images/posts__magic_cats.png"></p>
<div>
<span style="
      color: green; 
      font-weight: italic; 
      text-align: center;
      font-size: 66px;
      font-family: 'Brush Script MT', Courier, monospace;
      transition: transform 0.3s ease;
  " 
  onmouseover="this.style.transform='scale(1.2)'" 
  onmouseout="this.style.transform='scale(1)'">
  <a target="_blank" href="https://skookworks.wordpress.com/about/">skookworks</a>
</span>
</div>

<p>  <img src="/hexo-blog/images/posts__magic_cat_1.png"></p>
]]></content>
      <categories>
        <category>Posts</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>About me</title>
    <url>/hexo-blog//about-me/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div style="background: linear-gradient(to bottom, #ffecd2, #af9a9354);padding: 15px;border-radius: 10px;box-shadow: -13px 19px 8px rgba(0, 0, 0, 0.2);">
&nbsp;&nbsp;&nbsp;&nbsp;I’m excited to share insights, tips, and resources from nearly 10 years as a QA Software Test Engineer. 
My first step into the qulity assurance area was in <a href = https://spectrometr.com/index_eng.html>LLC"NVK"Spectr" company</a> where I was a part of the development team. 
There I was working on the documentation and tested <a href = https://spectrometr.com/ashmeter_eng.htm>IZR-051 Radiation ashmeter device</a>. 
<p>&nbsp;&nbsp;&nbsp;&nbsp;Later I continued as field service engineer (Engineer-radiologist) in <a href = https://feofaniya.org/en/departments/vseukrainskiy-centr-radio-hirurgii/>All-Ukrainian Radiosurgery Center/Clinical Hospital "Feofaniya"</a>. 
There main focus was on maintaing and servicing medical equilpment <a href = https://en.vitalmedical.com.ua/radiation-therapy-devices/varian-clinac-ix>Clinac iX</a>, Novalix TX, <a href = https://www.brainlab.com/radiosurgery-products/exactrac/>BrinaLab/ExacTrack</a> and medical software<a href = https://www.varian.com/products/software/digital-oncology/oncology-management-systems/aria-oncology-information-system> Aria. </a>
</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;At this place I completed course "Adminstration - Oncology Information System" by Varian company in Zug, Switzerland. 
PDF you can find <a href =../docs/my_docs/certificate_mr._roman_denysenko_ois_administration_2012.pdf>here</a>.

  <img src="/hexo-blog/images/varian_cert.png" alt="Adminstration - Oncology Information System" title="Adminstration - Oncology Information System" style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;">
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;After all challenges I was focusing on software industry and switched into software QA/QC completely.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;In 2024 I have successfully passed <a href =https://skillshub.isqi.org/d3b2d6cd-1925-4360-81c1-52abc8da81f9?key=ea5f9c5a12889c201346409e4b89705aca6f6e14e38e0792d6df554f2dae21b1>Certified ISTQB® professional exam.</a> Cerititficate in PDF you can find <a href =../docs/my_docs/istqb_cert_1710577132083.pdf>here</a>.</p>

  <img src="/hexo-blog/images/istqb_cert.png" alt="ISTQB Foundation level certificate" title="ISTQB Foundation level certificate" style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />

  
<p>&nbsp;&nbsp;&nbsp;&nbsp;And now with a passion for continuous learning and delivering high-quality software continue working in software QA/QC industry.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Please find my contact details on my <a href =https://www.linkedin.com/in/romandenysenko/>LinkedIn page</a>.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;My latest CV you can see <a href =../docs/my_docs/cv_general_roman_denysenko-software_qa_qc_engineer.pdf>here</a>.</p>
</div>

<hr>
<div style="background: linear-gradient(to bottom, #ffecd2, #af9a9354);padding: 15px;border-radius: 10px;box-shadow: -13px 19px 8px rgba(0, 0, 0, 0.2);">
<strong>My strong sides are:</strong>
<ul style="list-style: disc; padding: 0; font-size: 0.95em; color: #34495e;">
<li>Proven ability to design, execute, and automate comprehensive test plans across web, mobile, and desktop applications.</li>
<li>Skilled in collaborating effectively within cross-functional teams to achieve customer satisfaction.</li>
<li>Eager to leverage experience and knowledge in hybrid technologies to contribute to a stable and innovative company.</li>
</ul>
</div>
---
<div style="background: linear-gradient(to bottom, #ffecd2, #af9a9354);padding: 15px;border-radius: 10px;box-shadow: -13px 19px 8px rgba(0, 0, 0, 0.2);">
<strong>Highlights:</strong>
<ul style="list-style: disc; padding: 0; font-size: 0.95em; color: #34495e;">
<li>ISTQB® Certified Tester - Foundation Level</li>
<li>Extensive experience in manual and automated testing utilizing different methodologies.</li>
<li>Proficient in various tools and technologies (JIRA, Azure DevOps, Postman, Selenium, etc.) Full list of tools that I'm using in my daily works is <a href = /hexo-blog/about-me/my_contribution/my-tools/>here.</a>
<li>Experience in building and maintaining test automation frameworks</li>
<li>Strong communication and collaboration skills</li>
<li>Passionate about learning modern technologies (web scrapping, data processing, artificial intelligence)</li>
<li>Remote work experience</li>
<li>List of completed test reports >> <a href = ../../hexo-blog/about-me/my_contribution/my_examples_of_test_tasks/>here</a></li>
</ul>
</div>
---
<div style="background: linear-gradient(to bottom, #ffecd2, #af9a9354);padding: 15px;border-radius: 10px;box-shadow: -13px 19px 8px rgba(0, 0, 0, 0.2);">
<strong>Additional Information:</strong>
<ul style="list-style: disc; padding: 0; font-size: 0.95em; color: #34495e;">
<li>Available for a full-time remote position only</li>
<li>Available for remote consultation, maintaing products, audit of web site.</li>
</ul>
</div>
---
<div style="background: linear-gradient(to bottom, #ffecd2, #af9a9354);padding: 15px;border-radius: 10px;box-shadow: -13px 19px 8px rgba(0, 0, 0, 0.2);">
<strong>Hobbies:</strong>
<ul style="list-style: disc; padding: 0; font-size: 0.95em; color: #34495e;">
<li>Cycling, Hiking, python coding, IOT, exploring AI area.</li>
<li>Full details and work experience available upon request.</li>
<li>My best achievement is the finished  endurance trip in <strong>136 км</strong> from <a href = https://maps.app.goo.gl/BhGU5Xb7bFTAUZ3Q7>Kolka</a> to <a href = https://maps.app.goo.gl/Z6qxL8jhHLGabS57A>Dubulti</a> in 2019. I completed that trip in <strong>52 hours</strong>.
More detilas about event you can find on the official <a href = https://kolkadubulti.lv/rezultati/2019/>BK Kolka - Dubulti website.</a>, my number is 943.</li>

<p>&nbsp;&nbsp;&nbsp;&nbsp;*Please read carefully all information on the pages and if you require any further information, feel free to contact me via <a href = https://www.linkedin.com/in/romandenysenko/>LinkedIn</a></p>
</div>
<a href = ></a>
<div style="text-align: center;">
  <span style="font-size: 12px; font-family: 'Press Start 2P', 'Pixel', monospace;">
    Total views:
  </span> <span class="s3_pv"></span>
</div>


]]></content>
      <categories>
        <category>Personal information</category>
      </categories>
      <tags>
        <tag>about_me</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog&#39;s categories</title>
    <url>/hexo-blog//categories/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Here you can find most valuable categories of my blog</p>
<ul>
<li><a href="/hexo-blog/categories/My-contribution/">My contribution</a></li>
<li><a href="/hexo-blog/categories/Posts/">Posts</a></li>
<li><a href="/hexo-blog/categories/Tutorials/">Tutorials</a></li>
<li><a href="/hexo-blog/categories/Notes/">Notes</a></li>
<li><a href="/hexo-blog/categories/Maintanance/">Maintanance</a></li>
<li><a href="/hexo-blog/categories/Personal-information/">Personal information</a></li>
</ul>
]]></content>
      <categories>
        <category>Categories</category>
      </categories>
  </entry>
  <entry>
    <title>Cheatsheet list</title>
    <url>/hexo-blog/2024/10/22/cheatsheets/cheatsheet_list/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ul>
<li>Markdown Cheat Sheet : <a href="https://www.markdownguide.org/cheat-sheet/">https://www.markdownguide.org/cheat-sheet/</a></li>
<li>A suite a helpful free tools for working with Markdown.MarkdownTools is open source: <a href="https://blog.markdowntools.com/">https://blog.markdowntools.com/</a></li>
<li>Master Markdown Tables: A Complete Guide &amp; Tips: <a href="https://blog.markdowntools.com/posts/markdown-table-ultimate-guide">https://blog.markdowntools.com/posts/markdown-table-ultimate-guide</a></li>
</ul>
]]></content>
      <tags>
        <tag>tutorial</tag>
        <tag>cheatsheets</tag>
      </tags>
  </entry>
  <entry>
    <title>Examples of test tasks</title>
    <url>/hexo-blog//about-me/my_contribution/my_examples_of_test_tasks/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Here are several examples of home tasks I’ve completed. This list includes several documents that I find particularly interesting. Content of attached documents are different as a time range that was required for compliting each task.<br>Each document contains thoughts, arguments, some questions to the task writer, clarifications to my steps and actions.</p>
<h2 id="TECHNICAL-TEST-1-software-QA-QC"><a href="#TECHNICAL-TEST-1-software-QA-QC" class="headerlink" title="TECHNICAL TEST -1 (software QA&#x2F;QC)"></a>TECHNICAL TEST -1 (software QA&#x2F;QC)</h2><h3 id="Task-description"><a href="#Task-description" class="headerlink" title="Task description"></a>Task description</h3><p>This task involves testing a function that verifies whether two input characters are valid letters or numbers, returning 1 if true and 0 otherwise. A previous bug caused Cyrillic letters to be misclassified; this has been fixed, and regression tests have been<br>conducted to confirm the correction.<br>Download the document <a href="../../../docs/home_tasks/TECHNICAL_TEST_1.pdf">here.</a></p>
<h2 id="TECHNICAL-TEST-2-software-QA-QC"><a href="#TECHNICAL-TEST-2-software-QA-QC" class="headerlink" title="TECHNICAL TEST -2 (software QA&#x2F;QC)"></a>TECHNICAL TEST -2 (software QA&#x2F;QC)</h2><h3 id="Task-description-1"><a href="#Task-description-1" class="headerlink" title="Task description"></a>Task description</h3><p>This task involves creating manual tests to validate the functionality of a currency converter tool, ensuring it meets core requirements for accurate conversions, displays essential details, and provides accessible API endpoints.<br>Download the document <a href="../../../docs/home_tasks/TECHNICAL_TEST_2.pdf">here.</a></p>
<h2 id="TECHNICAL-TEST-3-software-QA-QC"><a href="#TECHNICAL-TEST-3-software-QA-QC" class="headerlink" title="TECHNICAL TEST -3 (software QA&#x2F;QC)"></a>TECHNICAL TEST -3 (software QA&#x2F;QC)</h2><h3 id="Task-description-2"><a href="#Task-description-2" class="headerlink" title="Task description"></a>Task description</h3><p>This task involves analyzing and identifying all potential scenarios for the Sign Up and Log In processes on XYZ.com. The goal is to ensure these flows function correctly, handle errors effectively, and provide a seamless user experience and recommending appropriate testing types to ensure robust validation of these processes.<br>Download the document <a href="../../../docs/home_tasks/TECHNICAL_TEST_3.pdf">here.</a></p>
<h2 id="TECHNICAL-TEST-4-software-QA-QC"><a href="#TECHNICAL-TEST-4-software-QA-QC" class="headerlink" title="TECHNICAL TEST -4 (software QA&#x2F;QC)"></a>TECHNICAL TEST -4 (software QA&#x2F;QC)</h2><h3 id="Task-description-3"><a href="#Task-description-3" class="headerlink" title="Task description"></a>Task description</h3><p>This task involves analyzing web platform, invstigating test artifacts and reporting discovered issues, creating test cases.<br>Download the document <a href="../../../docs/home_tasks/TECHNICAL_TEST_4.pdf">here.</a></p>
<h2 id="TECHNICAL-TEST-5-software-QA-QC"><a href="#TECHNICAL-TEST-5-software-QA-QC" class="headerlink" title="TECHNICAL TEST -5 (software QA&#x2F;QC)"></a>TECHNICAL TEST -5 (software QA&#x2F;QC)</h2><h3 id="Task-description-4"><a href="#Task-description-4" class="headerlink" title="Task description"></a>Task description</h3><p>Basic audit of payment web platform<br>Download the document <a href="../../../docs/home_tasks/TECHNICAL_TEST_5.pdf">here.</a></p>
<div style="text-align: center;">
  <span style="font-size: 12px; font-family: 'Press Start 2P', 'Pixel', monospace;">
    Total views:
  </span> <span class="s3_pv"></span>
</div>
]]></content>
      <categories>
        <category>My contribution</category>
      </categories>
      <tags>
        <tag>my_contribution</tag>
        <tag>test_tasks</tag>
      </tags>
  </entry>
  <entry>
    <title>My GitHub projects</title>
    <url>/hexo-blog/2024/10/21/my_contribution/my_github_projects/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><span style="color: red; font-weight: bold;">IMPORTANT !!!</span><br>All information you find here is published “as is”.<br>You can copy, clone and reuse the information without any restrictions from my side.<br>Otherwise, please refer to official documentation or original sources.</p>
<p>Below is a list of my My GitHub projects with short decription.</p>
<hr>
<p><strong>Table of GitHub projects</strong><br><a href="#My-HEXO-IO-blog">My HEXO.IO blog</a><br><a href="#ooge0-github-io">ooge0.github.io</a><br><a href="#python-TA-web-api-framework">python_TA_web_api_framework</a><br><a href="#API-tests-for-petstore-swagger-io">API tests for petstore.swagger.io</a><br><a href="#Test-automation-framework-based-on-RestAssured-test-framework">Test automation framework based on RestAssured test framework.</a><br><a href="#kafka-app-demo">kafka-app-demo</a><br><a href="#Appium-FrameworkExtended">Appium FrameworkExtended</a><br><a href="#Appium-framework-pet-project">Appium framework (pet project)</a><br><a href="#ssLv-Gherkin-JAVA">ssLv_Gherkin_JAVA</a></p>
<hr>
<h3 id="My-HEXO-IO-blog"><a href="#My-HEXO-IO-blog" class="headerlink" title="My HEXO.IO blog"></a>My HEXO.IO blog</h3><ul>
<li><strong>Blog URL</strong>: <a href="https://ooge0.github.io/hexo-blog/">Blog: ooge0.github.io&#x2F;hexo-blog&#x2F;</a></li>
<li><strong>GitHub link</strong>: <a href="https://github.com/ooge0/hexo-blog">ooge0.github.io</a></li>
<li><strong>Languages</strong>: <em>HTML, JavaScript, CSS</em></li>
<li><strong>Description</strong>: <em>Repository for the current website, including all pages, scripts, and CSS files.</em> This project is my second blog project that I created based on HEXO.IO framework. Blog published and hosted on GitHub. It was created from scratch using basic HEXO.IO options and then configured using available internet resources.</li>
</ul>
<hr>
<h3 id="ooge0-github-io"><a href="#ooge0-github-io" class="headerlink" title="ooge0.github.io"></a>ooge0.github.io</h3><ul>
<li><strong>Blog URL</strong>: <a href="https://ooge0.github.io/">Blog: ooge0.github.io</a></li>
<li><strong>GitHub link</strong>: <a href="https://github.com/ooge0/ooge0.github.io">ooge0.github.io</a></li>
<li><strong>Languages</strong>: <em>HTML, JavaScript, CSS</em></li>
<li><strong>Description</strong>: This project is my first blog project that I published and hosted on GitHub. It was created from scratch using pure JS, CSS codding and examples of code snippets available in the internet.</li>
</ul>
<hr>
<h3 id="python-TA-web-api-framework"><a href="#python-TA-web-api-framework" class="headerlink" title="python_TA_web_api_framework"></a>python_TA_web_api_framework</h3><ul>
<li><strong>GitHub link</strong>: <a href="https://github.com/ooge0/python_TA_web_api_framework?tab=readme-ov-file#toc">python_TA_web_api_framework</a></li>
<li><strong>Languages</strong>: <em>Python, Gherkin</em></li>
<li><strong>Description</strong>: <em>Hybrid test automation framework for UI and API testing. Created tests processed by PyTest library. Project contains mixed approach of</em>:<ul>
<li>reused resources;</li>
<li>generating test data using custom methods;</li>
<li>using pytest and custom defined fixtures;</li>
<li>using DB, config files, Excel docs for storing test data and references;</li>
<li>generating reports (Allure, Pytest).</li>
</ul>
</li>
</ul>
<hr>
<h3 id="API-tests-for-petstore-swagger-io"><a href="#API-tests-for-petstore-swagger-io" class="headerlink" title="API tests for petstore.swagger.io"></a>API tests for petstore.swagger.io</h3><p><strong>GitHub link</strong>: <a href="https://github.com/ooge0/demo_pet">demo_pet</a><br><strong>Languages</strong>: <em>Python, Gherkin</em><br><strong>Description</strong>: Back-end tests framework for API testing. Destination source is <a href="https://petstore.swagger.io/">https://petstore.swagger.io/</a>.</p>
<h3 id="Test-automation-framework-based-on-RestAssured-test-framework"><a href="#Test-automation-framework-based-on-RestAssured-test-framework" class="headerlink" title="Test automation framework based on RestAssured test framework."></a>Test automation framework based on RestAssured test framework.</h3><p><strong>GitHub link</strong>: <a href="https://github.com/ooge0/restAssured">restAssured</a><br><strong>Languages</strong>: <em>Java</em><br><strong>Description</strong>: Helper for managing webDrivers. Forked from . I used this repo as a source of ideas.</p>
<hr>
<h3 id="kafka-app-demo"><a href="#kafka-app-demo" class="headerlink" title="kafka-app-demo"></a>kafka-app-demo</h3><p><strong>GitHub link</strong>: <a href="https://github.com/ooge0/kafka-app-demo">kafka-app-demo</a><br><strong>Languages</strong>: <em>Python</em><br><strong>Description</strong>: Pet project for investigating Kafka features. Created simple app for managing behavior of consumer&#x2F;poducer actions.</p>
<hr>
<h3 id="Appium-FrameworkExtended"><a href="#Appium-FrameworkExtended" class="headerlink" title="Appium FrameworkExtended"></a>Appium FrameworkExtended</h3><p><strong>GitHub link</strong>: <a href="https://github.com/ooge0/AppiumFrameworkExtended">AppiumFrameworkExtended</a><br><strong>Languages</strong>: <em>Java</em><br><strong>Description</strong>: Pet project for investigating Appium features. More complex and detailed than <a href="#appium-framework-pet-project">appiumQA project</a>. Project has detailed README.MD file, valid configuration for executing different tests, generating reports.</p>
<hr>
<h3 id="Appium-framework-pet-project"><a href="#Appium-framework-pet-project" class="headerlink" title="Appium framework (pet project)"></a>Appium framework (pet project)</h3><p><strong>GitHub link</strong>: <a href="https://github.com/ooge0/appiumQA">appiumQA</a><br><strong>Languages</strong>: <em>Java, Batchfile</em><br><strong>Description</strong>: Pet project for investigating Appium features. There is no complex logic, just few classes for checking main Appium flow for interacting with Android app.</p>
<hr>
<h3 id="ssLv-Gherkin-JAVA"><a href="#ssLv-Gherkin-JAVA" class="headerlink" title="ssLv_Gherkin_JAVA"></a>ssLv_Gherkin_JAVA</h3><p>Helper for managing webDrivers<br><strong>GitHub link</strong>:  <a href="https://github.com/ooge0/ssLv_Gherkin_JAVA">ssLv_Gherkin_JAVA</a><br><strong>Languages</strong>: <em>Java, Gherkin</em><br><strong>Description</strong>: Project contains finished test scenario based on Gherkin language for checking web sites functionality. All scenarios are expected to use Page Object model. All scenarios are expected to use separated step definition files.</p>
<div style="text-align: center;">
  <span style="font-size: 12px; font-family: 'Press Start 2P', 'Pixel', monospace;">
    Total views:
  </span> <span class="s3_pv"></span>
</div>]]></content>
      <categories>
        <category>My contribution</category>
      </categories>
      <tags>
        <tag>my_contribution</tag>
        <tag>my_porjects</tag>
      </tags>
  </entry>
  <entry>
    <title>Favorite post categories</title>
    <url>/hexo-blog/2024/10/21/my_contribution/my_collected_posts/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Table of Contents</strong></p>
<ul>
<li><a href="#post-details">Post Details</a><ul>
<li><a href="#linkedin">LinkedIn</a></li>
<li><a href="#medium">Medium</a></li>
<li><a href="#other-resources">Other Resources</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="Post-Details"><a href="#Post-Details" class="headerlink" title="Post Details"></a>Post Details</h2><h3 id="LinkedIn"><a href="#LinkedIn" class="headerlink" title="LinkedIn"></a>LinkedIn</h3><ul>
<li><a href="https://www.linkedin.com/pulse/how-identify-authorize-world-roman-denysenko/?trackingId=9XPiGaGb5dRbHqv7D54MpA==">How to identify and authorize the world | My LinkedIn post | </a></li>
<li><a href="https://www.linkedin.com/pulse/test-design-techniques-diagram-roman-denysenko-cenhe/?trackingId=nfx/cTx+UJhTup2tM83uDw==">Test design techniques (Diagram) | My LinkedIn post | </a></li>
<li><a href="https://www.linkedin.com/pulse/google-chrome-extensions-software-testers-shady-ahmed-mohamed/?trackingId=67cztDHJl1FiMv1KZeE9JQ==">Google Chrome Extensions for Software Testers | LinkedIn post |</a></li>
<li><a href="https://www.linkedin.com/groups/961087/?q=highlightedFeedForGroups&highlightedUpdateUrn=urn:li:groupPost:961087-7135234239951745025">Machine Learning Community (Moderated) | LinkedIn post |</a></li>
<li><a href="https://www.linkedin.com/pulse/list-channels-historical-processes-youtube-updated-roman-denysenko-fc4lf/?trackingId=1YbHy9l9xRxXL2BohGKaWWQ==">List of channels about historical processes on YouTube (will be updated) | My LinkedIn post | </a></li>
<li><a href="https://www.linkedin.com/pulse/dom-data-roman-denysenko/?trackingId=fYwsAt7loKNZsW4473tOig==">DOM data | My LinkedIn post | </a></li>
<li><a href="https://www.linkedin.com/pulse/one-time-email-services-roman-denysenko/?trackingId=+4ba9eFZgOwxlqbkbkvUSw==">One-time email services | My LinkedIn post | </a></li>
<li><a href="https://www.linkedin.com/pulse/virtual-ward-companies-roman-denysenko/?trackingId=1+83hbESobRlVKfpWLIi2A==">Worldwide virtual ward companies | My LinkedIn post |</a></li>
<li><a href="https://www.linkedin.com/pulse/export-extensions-from-chrome-roman-denysenko-hztif">Export extensions from Chrome | My LinkedIn post |</a></li>
</ul>
<h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><ul>
<li><a href="https://broken-code.medium.com/icmp-protocol-7d53b64c73ca">Internet Control Message Protocol (ICMP) — overview | My Medium post | Apr, 2024 | Medium post |</a></li>
<li><a href="https://medium.com/@R_D2/cyclomatic-complexity-basics-149198bbac85">Cyclomatic complexity (Basics) | Medium post |</a></li>
<li><a href="https://medium.com/@R_D2/navigating-the-gaming-cosmos-a-comprehensive-guide-to-testing-game-tiers-c5777a672666">Navigating the Gaming Cosmos: A Comprehensive Guide to Testing Game Tiers | My Medium post |</a></li>
<li><a href="https://medium.com/@R_D2/hugging-face-transformer-uml-diagram-3ce7cde44cc0">Hugging Face Transformer UML diagram | My Medium post |</a></li>
<li><a href="https://medium.com/@R_D2/hugging-face-transformer-uml-diagram-3ce7cde44cc0">How Is ChatGPT’s Behavior Changing | Medium post |</a></li>
</ul>
<h3 id="Other-Resources"><a href="#Other-Resources" class="headerlink" title="Other Resources"></a>Other Resources</h3><ul>
<li><a href="https://www.nokia.com/networks/radio-access-networks/open-ran/open-ran-explained/">Open RAN explained | Nokia</a></li>
<li><a href="https://danielkummer.github.io/git-flow-cheatsheet/">git-flow cheatsheet</a></li>
<li><a href="https://www.softwaretestinghelp.com/penetration-testing-guide/">Penetration Testing - Complete Guide with Penetration Testing Sample Test Cases</a></li>
<li><a href="https://www.youtube.com/watch?v=42iQKuQodW4">Linux Directories Explained in 100 Seconds - YouTube</a></li>
<li><a href="https://www.destination2050.eu/">A ROUTE TO NET ZERO EUROPEAN AVIATION</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2">TUTORIAL. An Introduction to OAuth 2</a></li>
<li><a href="https://djangocas.dev/blog/oauth2-101-introduction-to-oauth2-protocol/">OAuth2 101: OAuth 2 Detailed Grant Flow Diagrams, Security Consideration and Best Practice</a></li>
<li><a href="https://scaledagileframework.com/nonfunctional-requirements/">Nonfunctional Requirements - Scaled Agile Framework</a></li>
<li><a href="https://deviceatlas.com/blog/list-of-user-agent-strings">List of User Agent strings - DeviceAtlas</a></li>
<li><a href="https://developer.chrome.com/docs/lighthouse/overview/">Overview | Lighthouse | Chrome for Developers</a></li>
<li><a href="https://www.paloaltonetworks.com/services/education">Education Services - Palo Alto Networks</a></li>
<li><a href="https://realpython.com/python-continuous-integration/">Continuous Integration With Python: An Introduction - Real Python</a></li>
<li><a href="https://martinfowler.com/articles/microservice-testing/">Testing Strategies in a Microservice Architecture</a></li>
<li><a href="https://www.flagsarenotlanguages.com/blog/">Flags are not languages - A blog about designing global user experiences: beyond language, location &amp; culture.</a></li>
<li><a href="https://www.sigmajs.org/">Sigma.js</a></li>
<li><a href="https://sql.bobby.sh/">Bobby Iliev - Introduction to SQL eBook</a></li>
<li><a href="https://github.com/ooge0/SQL/blob/master/Tutorials/%20SQLite%20tutorial.md">SQL&#x2F;Tutorials&#x2F; SQLite tutorial.md at master · ooge0&#x2F;SQL</a></li>
<li><a href="https://www.scaler.com/topics/challenge-response-authentication/">Challenge Response Authentication Mechanism (CRAM) - Scaler Topics</a></li>
<li><a href="https://creately.com/blog/diagrams/uml-diagram-types-examples/">UML Diagram Types | Learn About All 14 Types of UML Diagrams</a></li>
<li><a href="https://guides.visual-paradigm.com/choosing-the-right-uml-diagram-state-diagrams-sequence-diagrams-or-activity-diagrams/">Choosing the Right UML Diagram: State Diagrams, Sequence Diagrams, or Activity Diagrams? - Visual Paradigm Guides</a></li>
<li><a href="https://www.linkedin.com/pulse/export-extensions-from-chrome-roman-denysenko-hztif">Export extensions from Chrome | LinkedIn</a></li>
<li><a href="https://senlainc.com/blog/top-10-software-development-models-in-a-nutshell/">Top 10 software development models in a nutshell</a></li>
<li><a href="https://www.freecodecamp.org/news/git-pull-force-how-to-overwrite-local-changes-with-git/">Git Pull Force – How to Overwrite Local Changes With Git</a> <ul>
<li>Author: Piotr Gaczkowski</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>My contribution</category>
      </categories>
      <tags>
        <tag>my_contribution</tag>
        <tag>my_medium_post</tag>
        <tag>my_linkedin_post</tag>
      </tags>
  </entry>
  <entry>
    <title>My tools</title>
    <url>/hexo-blog//about-me/my_contribution/my-tools/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Daily-apps"><a href="#Daily-apps" class="headerlink" title="Daily apps"></a>Daily apps</h2><h3 id="Messangers"><a href="#Messangers" class="headerlink" title="Messangers"></a>Messangers</h3><ul>
<li>Slack</li>
<li>Zoom<ul>
<li><a href="https://zoom.us/download">https://zoom.us/download</a></li>
</ul>
</li>
</ul>
<p> </p>
<h3 id="API-tools"><a href="#API-tools" class="headerlink" title="API tools"></a>API tools</h3><ul>
<li>Postman</li>
<li>Insomnia</li>
</ul>
<h3 id="DB-manager"><a href="#DB-manager" class="headerlink" title="DB manager"></a>DB manager</h3><ul>
<li>SSMS</li>
<li>Dbviewer</li>
</ul>
<h3 id="Proxy-tools"><a href="#Proxy-tools" class="headerlink" title="Proxy tools"></a>Proxy tools</h3><ul>
<li>Fiddler</li>
<li>Charles</li>
<li>Local proxy</li>
</ul>
<h3 id="Message-broker"><a href="#Message-broker" class="headerlink" title="Message broker"></a>Message broker</h3><ul>
<li>Kafka</li>
</ul>
<h3 id="Project-management-tools"><a href="#Project-management-tools" class="headerlink" title="Project management tools"></a>Project management tools</h3><ul>
<li>Jira </li>
<li>TestRail</li>
</ul>
<p> </p>
<h3 id="Cloud-virtual-machines"><a href="#Cloud-virtual-machines" class="headerlink" title="Cloud virtual machines"></a>Cloud virtual machines</h3><ul>
<li><a href="https://azure.microsoft.com/en-us/products/virtual-machines">Azure Virtual machines list </a> </li>
<li>Amazon Virtual machines<ul>
<li><a href="https://aws.amazon.com/ru/getting-started/hands-on/launch-windows-vm/">Launch a Windows Virtual Machine in Amazon Lightsail</a></li>
<li><a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Instances.html">Amazon EC2 instances</a></li>
</ul>
</li>
</ul>
<p> </p>
<h3 id="Virtual-Box"><a href="#Virtual-Box" class="headerlink" title="Virtual Box"></a>Virtual Box</h3><ul>
<li>Virtual Box  &gt;&gt; <a href="https://www.virtualbox.org/">how to install the virtual box app</a></li>
<li>Virtual Box image of Windows 10 you can find <a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/">here</a></li>
<li>Virtual Box image of Ubuntu you can find <a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/">here</a></li>
</ul>
<h3 id="Monitoring-tools"><a href="#Monitoring-tools" class="headerlink" title="Monitoring tools"></a>Monitoring tools</h3><ul>
<li>Kibana </li>
<li>Grafana </li>
<li>Azure Application Insights</li>
</ul>
<p> </p>
<h3 id="OCR-services"><a href="#OCR-services" class="headerlink" title="OCR services"></a>OCR services</h3><ol>
<li><a href="https://ocr.space/">ocr.space</a> </li>
<li><a href="http://www.structurise.com/screenshot-ocr/">structurise.com | make OCR from the clipboard</a></li>
</ol>
<h3 id="Temporary-Email-Services"><a href="#Temporary-Email-Services" class="headerlink" title="Temporary Email Services"></a>Temporary Email Services</h3><table>
<thead>
<tr>
<th>No.</th>
<th>Temporary Email Service</th>
<th>URL</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>10 Minute Mail</td>
<td><a href="https://10minutemail.com/">https://10minutemail.com/</a></td>
</tr>
<tr>
<td>2</td>
<td>EmailOnDeck</td>
<td><a href="https://www.emailondeck.com/">https://www.emailondeck.com/</a></td>
</tr>
<tr>
<td>3</td>
<td>Fake Mail Generator</td>
<td><a href="https://www.fakemailgenerator.net/">https://www.fakemailgenerator.net/</a></td>
</tr>
<tr>
<td>4</td>
<td>FakeMail  &#x2F; TempMailAddress</td>
<td><a href="https://tempmailaddress.com/">https://tempmailaddress.com/</a></td>
</tr>
<tr>
<td>5</td>
<td>GetNada</td>
<td><a href="https://getnada.com/">https://getnada.com/</a></td>
</tr>
<tr>
<td>6</td>
<td>Guerrilla Mail</td>
<td><a href="https://www.guerrillamail.com/">https://www.guerrillamail.com/</a></td>
</tr>
<tr>
<td>7</td>
<td>MailCatch</td>
<td><a href="http://mailcatch.com/">http://mailcatch.com/</a></td>
</tr>
<tr>
<td>8</td>
<td>MailDrop</td>
<td><a href="https://maildrop.cc/">https://maildrop.cc/</a></td>
</tr>
<tr>
<td>9</td>
<td>Mailinator</td>
<td><a href="https://www.mailinator.com/">https://www.mailinator.com/</a></td>
</tr>
<tr>
<td>10</td>
<td>Mailnesia</td>
<td><a href="https://www.mailnesia.com/">https://www.mailnesia.com/</a></td>
</tr>
<tr>
<td>11</td>
<td>Moakt</td>
<td><a href="https://www.moakt.com/">https://www.moakt.com/</a></td>
</tr>
<tr>
<td>12</td>
<td>MyTemp.email</td>
<td><a href="https://www.mytemp.email/">https://www.mytemp.email/</a></td>
</tr>
<tr>
<td>13</td>
<td>Proton mail</td>
<td><a href="https://proton.me/mail">https://proton.me/mail</a></td>
</tr>
<tr>
<td>14</td>
<td>Temp Mail</td>
<td><a href="https://temp-mail.org/">https://temp-mail.org/</a></td>
</tr>
<tr>
<td>15</td>
<td>Tempail</td>
<td><a href="https://tempail.com/">https://tempail.com/</a></td>
</tr>
<tr>
<td>16</td>
<td>Temp-Mail.io</td>
<td><a href="https://temp-mail.io/">https://temp-mail.io/</a></td>
</tr>
<tr>
<td>17</td>
<td>Throwawaymail</td>
<td><a href="https://www.throwawaymail.com/">https://www.throwawaymail.com/</a></td>
</tr>
<tr>
<td>18</td>
<td>YOPmail</td>
<td><a href="https://www.yopmail.com/">https://www.yopmail.com/</a></td>
</tr>
</tbody></table>
<hr>
<h2 id="Other-tools"><a href="#Other-tools" class="headerlink" title="Other tools"></a>Other tools</h2><h3 id="Screenrecorders"><a href="#Screenrecorders" class="headerlink" title="Screenrecorders"></a>Screenrecorders</h3><h4 id="Offline-screenrecorder"><a href="#Offline-screenrecorder" class="headerlink" title="Offline screenrecorder"></a>Offline screenrecorder</h4><h5 id="OBS-studio"><a href="#OBS-studio" class="headerlink" title="OBS studio"></a>OBS studio</h5><ul>
<li>Mac &#x2F; Windows &#x2F; Android</li>
<li><a href="https://obsproject.com/download">https://obsproject.com/download</a></li>
</ul>
<h4 id="Online-screenrecorder"><a href="#Online-screenrecorder" class="headerlink" title="Online screenrecorder"></a>Online screenrecorder</h4><h5 id="Loom"><a href="#Loom" class="headerlink" title="Loom"></a>Loom</h5><ul>
<li>Mac &#x2F; Windows &#x2F; Android</li>
<li><a href="https://www.loom.com/screen-recorder">https://www.loom.com/screen-recorder</a></li>
</ul>
<h3 id="Generators"><a href="#Generators" class="headerlink" title="Generators"></a>Generators</h3><h4 id="User-fake-data"><a href="#User-fake-data" class="headerlink" title="User fake data"></a>User fake data</h4><ul>
<li><p>jsonplaceholder.typicode.com</p>
<ul>
<li>fake data generator via JS code snippets</li>
<li><a href="https://jsonplaceholder.typicode.com/">https://jsonplaceholder.typicode.com/</a><div style="margin-top: 10px;">
<img src="/hexo-blog/images/my_tools__jsonplaceholder_typicode_com_example.png" alt="jsonplaceholder.typicode.com" title="jsonplaceholder.typicode.com" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />
</div></li>
</ul>
</li>
<li><p>mockaroo.com</p>
<ul>
<li>fake data generator with prettty UI configuration</li>
<li><a href="https://www.mockaroo.com/">https://www.mockaroo.com/</a><div style="margin-top: 10px;">
<img src="/hexo-blog/images/my_tools__mockaroo_com_example.png" alt="jsonplaceholder.typicode.com" title="jsonplaceholder.typicode.com" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />
</div></li>
</ul>
</li>
</ul>
<h4 id="Image-generators"><a href="#Image-generators" class="headerlink" title="Image generators"></a>Image generators</h4><ul>
<li>image generator via parametrised HTTP requests<ul>
<li><a href="https://dummyjson.com/docs/image">https://dummyjson.com/docs/image</a>  <div style="margin-top: 10px;">
<img src="/hexo-blog/images/my_tools__dummy_json_image_generator_example.png" alt="https://dummyjson.com/docs/image" title=" dummyjson.com/docs/image" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;"/>
</div></li>
</ul>
</li>
</ul>
<h3 id="Free-video-samples"><a href="#Free-video-samples" class="headerlink" title="Free video samples"></a>Free video samples</h3><h4 id="file-examples-com-video"><a href="#file-examples-com-video" class="headerlink" title="file-examples.com&#x2F;video"></a>file-examples.com&#x2F;video</h4><ul>
<li>AVI	 &#x2F; MOV &#x2F; OGG	&#x2F; MP4	&#x2F; WMV	&#x2F;WEBM</li>
<li><a href="https://file-examples.com/index.php/sample-video-files/">https://file-examples.com/index.php/sample-video-files/</a></li>
</ul>
<h3 id="Free-images"><a href="#Free-images" class="headerlink" title="Free images"></a>Free images</h3><h4 id="file-examples-com-images"><a href="#file-examples-com-images" class="headerlink" title="file-examples.com&#x2F;images"></a>file-examples.com&#x2F;images</h4><ul>
<li>JPG &#x2F; PNG  &#x2F;GIF &#x2F; TIFF &#x2F; ICO &#x2F; SVG &#x2F; WEBP</li>
<li><a href="https://file-examples.com/index.php/sample-images-download/">https://file-examples.com/index.php/sample-images-download/</a></li>
</ul>
<h2 id="Display-extension"><a href="#Display-extension" class="headerlink" title="Display extension"></a>Display extension</h2><h3 id="spacedesk"><a href="#spacedesk" class="headerlink" title="spacedesk"></a>spacedesk</h3><p>Spacedesk software turns mobile devices, laptops and desktops into an additional extension display monitor for Windows machines.<br><img src="/hexo-blog/images/space_desk_logo_image.png" alt="Spacedesk app" title="Spacedesk app" style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></p></p>
<ul>
<li>Web site: <a href="https://www.spacedesk.net/">https://www.spacedesk.net/</a></li>
<li>Download page: <a href="https://www.spacedesk.net/download/">https://www.spacedesk.net/download/</a></li>
<li>Installation guide for Windows: <a href="https://www.youtube.com/watch?v=iJ2bFcDUol8&t=262s">https://www.youtube.com/watch?v=iJ2bFcDUol8&amp;t=262s</a></li>
</ul>
]]></content>
      <categories>
        <category>My contribution</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>my_contribution</tag>
        <tag>apps</tag>
      </tags>
  </entry>
  <entry>
    <title>stats</title>
    <url>/hexo-blog/2024/10/21/maintanance/blog_statistics/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
  </entry>
  <entry>
    <title>blog deploy actions</title>
    <url>/hexo-blog/2024/11/11/maintanance/deploy_hexo/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://github.com/ooge0/hexo-blog/actions" target="_blank">github.com&#x2F;hexo-blog&#x2F;actions</a></p>
]]></content>
      <categories>
        <category>Maintanance</category>
      </categories>
  </entry>
  <entry>
    <title>My Statistics page</title>
    <url>/hexo-blog//maintanance/my_statistics_page/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Total views: </p>
<ul>
<li>last hour</li>
<li>last week</li>
<li>last month</li>
</ul>
<p>Longest session: </p>
<ul>
<li>last hour</li>
<li>last week</li>
<li>last month</li>
</ul>
<p>User locations:</p>
]]></content>
      <categories>
        <category>Maintanance</category>
      </categories>
      <tags>
        <tag>statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>Sitemap</title>
    <url>/hexo-blog/2024/11/01/maintanance/sitemap/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href= /hexo-blog/sitemap.xml> hexo-blog sitemap</a></p>
]]></content>
      <categories>
        <category>Maintanance</category>
      </categories>
  </entry>
  <entry>
    <title>Tags</title>
    <url>/hexo-blog/2024/10/21/maintanance/my_tags/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>This page will show the cloud of tags…. sometimes later</p>
]]></content>
      <categories>
        <category>Maintanance</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO blog design</title>
    <url>/hexo-blog/2024/10/21/notes/HEXO_IO_blog_design/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>My plan to build&#x2F;redesign HEXO blog site based on <code>landsacpe</code> theme</p>
<p>Header</p>
<ul>
<li>Navigation menu:<ul>
<li>Menu items:<ul>
<li><input checked="" disabled="" type="checkbox"> Home. Added</li>
<li><input checked="" disabled="" type="checkbox"> Notes. Added</li>
<li><input checked="" disabled="" type="checkbox"> Archives. Added</li>
<li><input checked="" disabled="" type="checkbox"> Categories. Added</li>
<li><input checked="" disabled="" type="checkbox"> About me. Added</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Main body</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Change dafault pagination &#x3D; 12</li>
<li><input checked="" disabled="" type="checkbox"> Added footnotes. See <a href="/hexo-blog/hexo-layout-improvements/">hexo-layout-improvements</a></li>
</ul>
<p>Side panel</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Added. Nested subcategories<ul>
<li><input checked="" disabled="" type="checkbox"> Categories</li>
<li><input checked="" disabled="" type="checkbox"> Tags</li>
<li><input checked="" disabled="" type="checkbox"> Tag Cloud</li>
<li><input checked="" disabled="" type="checkbox"> Archives</li>
<li><input checked="" disabled="" type="checkbox"> Recent Posts<br>Footer</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Performance metter. Something like <code>Page loaded in 0.11 at 1912 x 959</code>. Can be used META(javascript:dialog.pageMeta();)</li>
</ul>
<h2 id="My-First-Note"><a href="#My-First-Note" class="headerlink" title="My First Note"></a>My First Note</h2>]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo_io</tag>
        <tag>note</tag>
        <tag>md_format</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO.IO blog references</title>
    <url>/hexo-blog/2024/10/21/notes/HEXO_IO_blog%20_references/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Here is collection of HEXO.IO blog and short comments on how to reuse some idea and funcitonality.</p>
<p><strong>List of references</strong><br><a href="#kikoio">kiko.io</a></p>
<h2 id="kiko-io"><a href="#kiko-io" class="headerlink" title="kiko.io"></a>kiko.io</h2><ul>
<li>link: <a href="https://kiko.io/">https://kiko.io/</a></li>
<li>Descrtiption: User friendly blog with extended functionality and components</li>
</ul>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>hexo_io</tag>
      </tags>
  </entry>
  <entry>
    <title>Add more beautiful HEXO blog pages</title>
    <url>/hexo-blog/2024/10/21/notes/HEXO_IO_make_md_more_beautiful/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Here are some HTML and CSS code snippets that you can use in Markdown to style and enhance text areas, add background colors, or create visually distinct sections without JavaScript or complex manipulations.</p>
<p>  <strong>1. Text Block with Background Color and Padding</strong></p>
<p>  Use this snippet to create a colored background for a paragraph or block of text.</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #f0f8ff; padding: 15px; border-radius: 5px;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a block of text with a light blue background color, padding, and rounded corners. You can style each paragraph separately by adding new `<span class="tag">&lt;<span class="name">p</span>&gt;</span>` tags within this div.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br></pre></td></tr></table></figure>
<p>result below</p>
<div style="background-color: #f0f8ff; padding: 15px; border-radius: 5px;">
    <p>This is a block of text with a light blue background color, padding, and rounded corners. You can style each paragraph separately by adding new `<p>` tags within this div.</p>
  </div> 

<hr>
<p><strong>2. Highlighted Section with Border and Background</strong></p>
<p>  Create a visually distinct area with a subtle border, background, and some padding.<br>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #dff0d8; border: 1px solid #d6e9c6; padding: 20px; border-radius: 8px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;color: #3c763d;&quot;</span>&gt;</span>Important Notice<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This section is highlighted with a green background, a border, and some padding to make it stand out.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>  result below</p>
<div style="background-color: #dff0d8; border: 1px solid #d6e9c6; padding: 20px; border-radius: 8px;">
  <h3 style="color: #3c763d;">Important Notice</h3>
  <p>This section is highlighted with a green background, a border, and some padding to make it stand out.</p>
  </div>
  
<hr>
<p>  <strong>3. Colored Quote Block</strong></p>
<p>  Emphasize quotes or important messages with a block style and colored left borde</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">style</span>=<span class="string">&quot;border-left: 4px solid #8e44ad; background-color: #f7f1ff; padding: 15px; margin: 10px 0;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: #4a235a;&quot;</span>&gt;</span>&quot;Here is a highlighted quote or important message with a unique style.&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  result below</p>
<blockquote style="border-left: 4px solid #8e44ad; background-color: #f7f1ff; padding: 15px; margin: 10px 0;">
  <p style="color: #4a235a;">"Here is a highlighted quote or important message with a unique style."</p>
</blockquote>

<hr>
<p><strong>4. Centered Text with Decorative Style</strong></p>
<p>  Center text with a larger font size, bold style, and color.</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center; font-size: 1.5em; font-weight: bold; color: #2980b9;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is centered, larger, and bold text with a custom color for emphasis.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  result below</p>
  <div style="text-align: center; font-size: 1.5em; font-weight: bold; color: #2980b9;">
  <p>This is centered, larger, and bold text with a custom color for emphasis.</p>
  </div>

<hr>
<p><strong>5. Callout Box with Shadow and Gradient Background</strong></p>
<p>Create a callout box with a gradient background and shadow to make it “pop.”</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background: linear-gradient(to right, #ffecd2, #fcb69f); padding: 15px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;color: #b03a2e;&quot;</span>&gt;</span>Tip of the Day<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Use gradients and shadows to create eye-catching highlights in your content!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  result below</p>
  <div style="background: linear-gradient(to right, #ffecd2, #fcb69f); padding: 15px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">
  <h3 style="color: #b03a2e;">Tip of the Day</h3>
  <p>Use gradients and shadows to create eye-catching highlights in your content!</p>
  </div>

<hr>
<p><strong>6. Badge or Label for Text</strong></p>
<p>Use a styled span element to create a badge that you can place inline with text.<br>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Get our latest updates: <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #3498db; color: white; padding: 3px 10px; border-radius: 12px; font-size: 0.9em;&quot;</span>&gt;</span>New<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>  result below</p>
  <p>Get our latest updates: <span style="background-color: #3498db; color: white; padding: 3px 10px; border-radius: 12px; font-size: 0.9em;">New</span></p>

<hr>
<p><strong>7. Box with Border and Light Shadow for Emphasis</strong></p>
<p>  Create a simple box with a light border and shadow effect.<br>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #ccc; padding: 20px; border-radius: 5px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a separated section with a border and light shadow effect for emphasis.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>  result below</p>
  <div style="border: 1px solid #ccc; padding: 20px; border-radius: 5px; box-shadow: 2px 2px 5px rgba(0,0,0,0.1);">
  <p>This is a separated section with a border and light shadow effect for emphasis.</p>
</div>
  
<hr>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo_io</tag>
        <tag>note</tag>
        <tag>md_format</tag>
      </tags>
  </entry>
  <entry>
    <title>Favorite books</title>
    <url>/hexo-blog/2010/10/10/notes/favorite_books/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>IMPORTANT!!!</strong></p>
<p>All information that you can find here is published as is.<br>This section contains list of my favorite books and some list of resources where you can get them in pdf&#x2F;epub&#x2F;fb2 formats.<br>Feel free to contact me if you have any concerns.</p>
<hr>
<p><a href="https://github.com/ooge0/books">Books on GitHub</a><br>My GitHub repository with books</p>
<hr>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>my_contribution</tag>
        <tag>books</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Format a USB Using CMD (Command Prompt)</title>
    <url>/hexo-blog/2024/10/31/notes/format-a-usb-using-cmd/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><em>source:</em> <a href="https://www.wikihow.com/Format-a-USB-Using-Cmd">https://www.wikihow.com/Format-a-USB-Using-Cmd</a></p>
<p>A step-by-step guide to use the Command Prompt to reformat and clean a flash drive</p>
<ol>
<li>Plug your USB drive<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[USB drive](https://en.wikipedia.org/wiki/USB_flash_drive).">[1]</span></a></sup> into your computer.</li>
<li>Open Command Prompt as an administrator:<ul>
<li><strong>Option 1:</strong> Go to the <code>Start</code> menu, type <code>CMD</code>, and select <strong>Run as administrator</strong>.</li>
<li><strong>Option 2:</strong> Press <code>WIN + R</code>, type <code>cmd</code>, and press <code>↵ Enter</code>.</li>
</ul>
</li>
<li>Type <code>diskpart</code> and press <code>↵ Enter</code>.</li>
<li>Type <code>list disk</code> and press <code>↵ Enter</code>.</li>
<li>Type <code>select disk [Your disk]</code> and press <code>↵ Enter</code>. </li>
<li>Type <code>clean</code> and press <code>↵ Enter</code>. </li>
<li>Type <code>create partition primary</code> and press <code>↵ Enter</code>.</li>
<li>Type <code>format fs=ntfs</code> and press <code>↵ Enter</code>.</li>
<li>Type <code>assign letter=[letter]</code> and press <code>↵ Enter</code>. </li>
<li>Type <code>exit</code> and press <code>↵ Enter</code>.</li>
</ol>
<p><em><strong>Referencse:</strong></em></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/USB_flash_drive">USB drive</a>.<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>usb</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Info data</title>
    <url>/hexo-blog/2010/10/10/notes/info_data/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><div class="main__content">
<div class="sitemap_content">
    <ul>
        <li>
            <iframe
                src="https://free.timeanddate.com/clock/i9e7kirz/n3846/fn6/fs16/fc9ff/tc000/ftbi/bas2/bat1/bacfff/pa8/tt0/tw1/th1/ta1/tb4"
                frameborder="0" width="216" height="60"></iframe>
        </li>
        <li>
        <li>
            <hr>
            <h3><a href="https://www.ventusky.com/">ventusky.com</a></h3>
            <iframe src="https://www.ventusky.com/Kyiv" width="80%" height="700"></iframe>
        </li>
        <li>
            <hr>
            <h2>Satellite observations</h2>
            <h3> <a href="https://www.sat24.com/en-gb/city/708405/hd#selectedLayer=satDay" target=“_blank”> Sumy (UA)</a></h3>
            <h3> <a href="https://www.sat24.com/en-gb/city/11654/hd#selectedLayer=satDay" target=“_blank”> Kyiv (UA)</a></h3>
            <h3> <a href="https://www.sat24.com/en-gb/city/712848/hd#selectedLayer=satDay" target=“_blank”> Poltava (UA)</a></h3>
            <h3> <a href="https://www.sat24.com/en-gb/city/17854/hd#selectedLayer=satDay" target=“_blank”> Sofia (BG)</a></h3>
            <hr>
        </li>
        <li>
            <h3>Solar Flares and Storms Warnings for Today</h3>
            <iframe src="https://api.meteoagent.com/widgets/v1/kindex" frameborder="0" width="75%"
                height="300px"></iframe>
        </li>
        <hr>
        <h3>Forecast platforms</h3>
        </li>
        <li><a href="https://meteoagent.com/solar-flares-storms"> meteoagent.com - SOLAR FLARES & STORMS
                FORECAST</a>
        </li>
        <li><a href="https://www.ventusky.com/"> ventusky.com - Weather forecast</a>
        </li>
        <li>foreca.com
            <ul>
                <li>
                    <a href="https://www.foreca.com/100692194/Sumy-Sumy-Oblast-Ukraine"> foreca.com |
                        Ukraine,
                        Sumy</a>
                </li>
                <li>
                    <a href="https://www.foreca.com/100703448/Kyiv-Ukraine"> foreca.com | Ukraine,
                        Kyiv</a>
                </li>
            </ul>
        </li>
        <li><a href="https://swe.ssa.esa.int/"> swe.ssa.esa.int - Space weather dashboard from the SWE
                Network / European space agency.</a></li>
        <li><a href="https://www.spaceweatherlive.com/"> spaceweatherlive.com </a></li>
    </ul>
</div>]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>info</tag>
      </tags>
  </entry>
  <entry>
    <title>Moving from old blog site</title>
    <url>/hexo-blog/2024/10/21/notes/moving_from_old_blog_site/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h1><ul>
<li><input checked="" disabled="" type="checkbox"> Update My GitHub projects post. Update links, descriptions, etc.</li>
<li><input checked="" disabled="" type="checkbox"> Update HEXO.IO design for <code>lanscape</code> theme</li>
<li><input checked="" disabled="" type="checkbox"> Improve header section</li>
<li><input disabled="" type="checkbox"> Improve footer section</li>
</ul>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>note</tag>
        <tag>md_format</tag>
      </tags>
  </entry>
  <entry>
    <title>Web data handling</title>
    <url>/hexo-blog/2024/11/20/notes/notes_web_data_handling/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Get-text-from-DOM-by-specific-locator-via-DevTools"><a href="#Get-text-from-DOM-by-specific-locator-via-DevTools" class="headerlink" title="Get text from DOM by specific locator via DevTools"></a>Get text from DOM by specific locator via DevTools</h2><ol>
<li><strong>Task</strong>: Retrieve text from DOM for elements that have locator “.gfg-similar-read-item-heading” using devtools<br>Solution:<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Retrieve all elements matching the locator</span></span><br><span class="line"><span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.gfg-similar-read-item-heading&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Extract text content from each element</span></span><br><span class="line"><span class="keyword">const</span> texts = <span class="title class_">Array</span>.<span class="title function_">from</span>(elements).<span class="title function_">map</span>(<span class="function"><span class="params">element</span> =&gt;</span> element.<span class="property">textContent</span>.<span class="title function_">trim</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output the text content as an array</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(texts);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optional: Display the texts in format &#123;order_number&#125;&#123;text&#125;</span></span><br><span class="line">texts.<span class="title function_">forEach</span>(<span class="function">(<span class="params">text, index</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>: <span class="subst">$&#123;text&#125;</span>`</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optional: Display the texts in format &#123;text&#125;</span></span><br><span class="line">texts.<span class="title function_">forEach</span>(<span class="function">(<span class="params">text, index</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;text&#125;</span>`</span>));</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows services and VM usage</title>
    <url>/hexo-blog/2024/11/20/notes/notes_windows_services_and_vm_usage/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li><p><strong>Virtual Machine Setup</strong><br>Steps to create a virtual machine:</p>
<ol>
<li>Download a hypervisor:<ol>
<li>Go to <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> or <a href="https://www.vmware.com/">VMware</a>. Download and install the software on your machine.</li>
<li>Obtain an OS image:<ol>
<li>Download the required ISO file for the operating system.</li>
</ol>
</li>
<li>Create the virtual machine:<ol>
<li>Open VirtualBox&#x2F;VMware app.</li>
<li>Create a new virtual machine according to requested specification.&#96;&#96;&#96;&#96;</li>
<li>Configure name, OS type, hardware settings like RAM, CPU, and disk space.</li>
</ol>
</li>
<li>Install the OS<ol>
<li>Start the virtual machine.</li>
<li>Follow the installation steps in the OS setup wizard.</li>
</ol>
</li>
<li>Connect to the VM:<ol>
<li>For Linux VMs: Enable SSH in the VM during installation or after setup.</li>
<li>Use SSH (on Linux&#x2F;Mac) or tools like PuTTY (on Windows) to connect.</li>
</ol>
</li>
<li>Additional steps:<ol>
<li>Windows VM Remote Desktop:<ol>
<li>Enable Remote Desktop in the Windows VM settings. Use the RDP client, configuration described here &gt;&gt; <a href="https://learn.microsoft.com/uk-ua/windows-server/remote/remote-desktop-services/clients/remote-desktop-clients">Remote Desktop clients for Remote Desktop Services and remote PCs</a> on your host machine to connect.</li>
<li>Connect RDP client to remote machine.</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><p><strong>Windows Services Management in PowerShell.</strong></p>
<p>Task: </p>
<ol>
<li>Print  list of services</li>
<li>Run specific service</li>
<li>Stop specific service</li>
<li>Restart specific service</li>
<li>Check status for specific service</li>
</ol>
<p> To get list of running services I will use :</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-Service</span> | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Status <span class="operator">-eq</span> <span class="string">&#x27;Running&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<p> Assuming that I want to run <code>&quot;WSLService&quot;</code></p>
<p> To start <code>&quot;WSLService&quot;</code> service  I’m using :<br> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Start-Service</span> <span class="literal">-Name</span> <span class="string">&quot;WSLService&quot;</span></span><br></pre></td></tr></table></figure><br> To stop the service:<br> <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Stop-Service</span> <span class="literal">-Name</span> <span class="string">&quot;WSLService&quot;</span></span><br></pre></td></tr></table></figure></p>
<p> For restarting service:</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Restart-Service</span> <span class="literal">-Name</span> <span class="string">&quot;WSLService&quot;</span></span><br></pre></td></tr></table></figure>
<p> For checking the status of monitored service:</p>
 <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Get-Service</span> <span class="literal">-Name</span> <span class="string">&quot;WSLService&quot;</span></span><br></pre></td></tr></table></figure>

</li>
<li><p><strong>SSH connection to the Linux machine</strong> actions are below.</p>
<p>I added more information in advance because the original task does not contain information about the client machine from which the connection to the Linux machine will be made. There is 3 different cases:</p>
<ul>
<li>Case 1: From another Linux client to Linux host</li>
<li>Case 2: From a Windows client  to Linux host</li>
<li>Case 3: From macOS client to Linux host</li>
</ul>
<p>For Linux&#x2F;Mac: SSH is usually pre-installed but if it’s missing install an SSH client (e.g. on Ubuntu):<br>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openssh-client -y</span><br></pre></td></tr></table></figure><br>After installation, start the service on Linux machine:<br>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start ssh</span><br></pre></td></tr></table></figure><br>If SSH service not started , checked its status on Linux machine:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure></p>
<p>Generate SSH keys (on the host machine):</p>
  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-b</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure>
<p>  The keys will be stored in ~&#x2F;.ssh&#x2F;id_rsa (private) and ~&#x2F;.ssh&#x2F;id_rsa.pub (public).<br>  Copy the public key to the Linux server:</p>
  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh<span class="literal">-copy-id</span> user@server_ip</span><br></pre></td></tr></table></figure>
<p>  Or manually append the content of id_rsa.pub to ~&#x2F;.ssh&#x2F;authorized_keys on the server.</p>
<p>  Connection via SSH for Linux:<br>   <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh user@server_ip</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>Optional Configurations:</p>
<p>Edit the SSH config file (~&#x2F;.ssh&#x2F;config) for aliases:</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host server_alias  </span><br><span class="line">   HostName server_ip  </span><br><span class="line">   User username  </span><br><span class="line">   IdentityFile ~/.ssh/id_rsa  </span><br></pre></td></tr></table></figure>
<p>This will simplify the connection:</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh server_alias</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>Case 1</strong>: From another Linux client to Linux host</p>
<p>  Verify SSH Client on the Local Machine:</p>
<ul>
<li>Most Linux distributions come with the ssh client pre-installed. Confirm by running:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure>

 If it’s not installed, install it: <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install openssh-client  </span><br></pre></td></tr></table></figure></li>
</ul>
<p>   Replace <code>&lt;username&gt;</code> with the remote machine’s username.</p>
<p>   Replace <code>&lt;remote_ip&gt;</code> with the target machine’s IP address.</p>
<ul>
<li>Use Public Key Authentication (Optional): <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure></li>
<li>Copy the public key to the remote machine:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
<li>Now, log in without entering a password:<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>Case 2</strong>: From a Windows client  to Linux host</p>
<ul>
<li><p>Install an SSH Client:</p>
<ul>
<li>Use the built-in OpenSSH client on Windows 10+. Open PowerShell or Command Prompt and check if SSH is installed:  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure>
<ul>
<li>For Windows alternatively install <a href="https://www.openssh.com/">OpenSSH</a> client from <a href="https://learn.microsoft.com/en-us/windows/client-management/client-tools/add-remove-hide-features?pivots=windows-11">“Optional Features”</a> or <a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">download PuTTY</a>( third-party SSH client).</li>
</ul>
</li>
</ul>
</li>
<li><p>Connect Using OpenSSH (Built-in).</p>
<p>Open PowerShell or Command Prompt and run:  </p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>Connect Using PuTTY:</p>
<ul>
<li>Download and install PuTTY.</li>
<li>Open PuTTY and enter the hostname or IP address.</li>
<li>Set the Port to 22 and click Open.</li>
<li>Log in with your credentials.</li>
<li>Enable Key Authentication (Optional):<ul>
<li>Use <a href="https://www.puttygen.com/">puttygen</a> to generate a private&#x2F;public key pair.</li>
<li>Copy the public key to the Linux machine’s ~&#x2F;.ssh&#x2F;authorized_keys.</li>
<li>In PuTTY, configure the private key in Connection &gt; SSH &gt; Auth &gt; Browse Private Key.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>Case 3</strong>: From macOS client to Linux host </p>
<ul>
<li><p>Verify SSH Client:</p>
<p> macOS includes an SSH client by default. Confirm it by running:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure></li>
<li><p>Connect to the Linux Machine:</p>
<p>Open Terminal and run:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>Use Public Key Authentication (Optional):</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure></li>
<li><p>Copy the public key to the remote machine:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>Now, I can log in without entering a password:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &lt;username&gt;@&lt;remote_ip&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>Dashdevs</tag>
      </tags>
  </entry>
  <entry>
    <title>Довідник для Лікаря Сімейної Медицини</title>
    <url>/hexo-blog//nastusja/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Цей довідник створений власними силами та за допомогою відкритих джерел для допомоги лікарям сімейної медицини, надаючи ключові ресурси, офіційні українські портали, посилання на довідники, глосарії та інші корисні інструменти.</p>
<hr>
<h2 id="Офіційні-Українські-Ресурси"><a href="#Офіційні-Українські-Ресурси" class="headerlink" title="Офіційні Українські Ресурси"></a>Офіційні Українські Ресурси</h2><ol>
<li><p><strong>Міністерство охорони здоров’я України (МОЗ)</strong>  </p>
<ul>
<li>Офіційний сайт: <a href="https://moz.gov.ua/">moz.gov.ua</a>  </li>
<li>Новини, нормативна база, протоколи лікування.</li>
</ul>
</li>
<li><p><strong>Національна служба здоров’я України (НСЗУ)</strong>  </p>
<ul>
<li>Офіційний сайт: <a href="https://nszu.gov.ua/">nszu.gov.ua</a>  </li>
<li>Інформація про медичні послуги, звіти, та декларації з лікарями.</li>
</ul>
</li>
<li><p><strong>Центр громадського здоров’я МОЗ України</strong>  </p>
<ul>
<li>Сайт: <a href="https://phc.org.ua/">phc.org.ua</a>  </li>
<li>Вакцинація, профілактика хвороб, епідеміологія.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Медичні-Довідники-та-Компедіуми"><a href="#Медичні-Довідники-та-Компедіуми" class="headerlink" title="Медичні Довідники та Компедіуми"></a>Медичні Довідники та Компедіуми</h2><ol>
<li><p><strong>Компендіум Лікарських Засобів</strong>  </p>
<ul>
<li>Сайт: <a href="https://compendium.com.ua/">compendium.com.ua</a>  </li>
<li>Інформація про ліки, інструкції, дозування.</li>
</ul>
</li>
<li><p><strong>Реєстр Ліків України</strong>  </p>
<ul>
<li>Сайт: <a href="https://www.drlz.com.ua/">drlz.com.ua</a>  </li>
<li>Офіційний перелік зареєстрованих ліків.</li>
</ul>
</li>
<li><p><strong>Клінічні протоколи лікування</strong>  </p>
<ul>
<li>МОЗ регулярно оновлює протоколи: <a href="https://guidelines.moz.gov.ua/">Протоколи МОЗ</a>.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Глосарії-та-Довідкові-Матеріали"><a href="#Глосарії-та-Довідкові-Матеріали" class="headerlink" title="Глосарії та Довідкові Матеріали"></a>Глосарії та Довідкові Матеріали</h2><ol>
<li><p><strong>Медичний Глосарій</strong>  </p>
<ul>
<li>Глосарій МОЗ: <a href="https://moz.gov.ua/uk/glosarij">moz.gov.ua</a>.</li>
<li>МОЗ Про затвердження Єдиного термінологічного словника (Глосарій) з питань управління  якості медичної допомоги: <a href="https://zakon.rada.gov.ua/rada/show/v0427282-11#Text">zakon.rada.gov.ua</a></li>
</ul>
</li>
<li><p><strong>Довідники для лікарів первинної ланки</strong>  </p>
<ul>
<li>Рекомендації для первинної допомоги: <a href="https://phc.org.ua/">phc.org.ua</a>.</li>
<li>Кишеньковий довідник лікаря первинної медичної допомоги для роботи з дітьми та підлітками: настанови щодо зміцнення здоров’я, профілактики та лікування захворювань від народження до підліткового віку: <a href="https://www.who.int/ukraine/uk/publications/9789289057622">who.int</a></li>
<li>Що входить до обов’язків лікаря первинної ланки?: <a href="https://moz.gov.ua/uk/scho-vhodit-do-obovjazkiv-likarja-pervinnoi-lanki">moz.gov.ua</a></li>
</ul>
</li>
</ol>
<hr>
<h2 id="Лабораторії-та-Діагностика"><a href="#Лабораторії-та-Діагностика" class="headerlink" title="Лабораторії та Діагностика"></a>Лабораторії та Діагностика</h2><ol>
<li><p><strong>Сінево Україна</strong>  </p>
<ul>
<li><a href="https://www.synevo.ua/">synevo.ua</a></li>
</ul>
</li>
<li><p><strong>Діла Лабораторія</strong>  </p>
<ul>
<li><a href="https://dila.ua/">dila.ua</a></li>
</ul>
</li>
<li><p><strong>Меділаб</strong>  </p>
<ul>
<li><a href="https://www.medilab.com.ua/">medilab.com.ua</a></li>
</ul>
</li>
</ol>
<hr>
<h2 id="Глобальні-Медичні-Ресурси"><a href="#Глобальні-Медичні-Ресурси" class="headerlink" title="Глобальні Медичні Ресурси"></a>Глобальні Медичні Ресурси</h2><ol>
<li><p><strong>Всесвітня організація охорони здоров’я (ВООЗ)</strong>  </p>
<ul>
<li>Сайт: <a href="https://www.who.int/">who.int</a>  </li>
<li>Міжнародні рекомендації та дослідження.</li>
</ul>
</li>
<li><p><strong>Медична Бібліотека США (PubMed)</strong>  </p>
<ul>
<li>Сайт: <a href="https://pubmed.ncbi.nlm.nih.gov/">pubmed.ncbi.nlm.nih.gov</a>  </li>
<li>Наукові статті з медицини.</li>
</ul>
</li>
<li><p><strong>CDC (Центри контролю та профілактики захворювань, США)</strong>  </p>
<ul>
<li>Сайт: <a href="https://www.cdc.gov/">cdc.gov</a>  </li>
<li>Профілактика, контроль хвороб.</li>
</ul>
</li>
</ol>
<hr>
<h2 id="Корисні-Інструменти"><a href="#Корисні-Інструменти" class="headerlink" title="Корисні Інструменти"></a>Корисні Інструменти</h2><ul>
<li><p><strong>Клінічні калькулятори</strong>: <a href="https://www.msdmanuals.com/uk/professional/pages-with-widgets/clinical-calculators?mode=list">msdmanuals.com</a>  </p>
</li>
<li><p><strong>Медичні калькулятори</strong>: <a href="https://medcalc.com.ua/">medcalc.com.ua</a>  </p>
</li>
<li><p><strong>Калькулятор маси тіла</strong>: <a href="https://cardioprostir.com.ua/applications-and-calculators/calculators/imt">cardioprostir.com.ua</a>  </p>
</li>
<li><p><strong>Калькулятор Калькулятор оцінки прихильності пацієнта</strong>: <a href="https://cardioprostir.com.ua/applications-and-calculators/calculators/goodwill">cardioprostir.com.ua</a>  </p>
</li>
<li><p><strong>Розрахунок дозувань</strong>: <a href="https://clincalc.com/">clincalc.com</a>  </p>
</li>
<li><p><strong>Медичний калькулятор: Дозування таблеток в залежності від маси тіла</strong>: <a href="https://testresult.org/ua/medical-calc/dozuvannia-tabletok-za-vahoiu">testresult.org</a>  </p>
</li>
<li><p><strong>Перевірка взаємодії препаратів</strong> Після переходу на сайт для перекладу натисніть правою кнопкою миші та оберіть “Перекласти”: <a href="https://reference.medscape.com/drug-interactionchecker">cardioprostir.com.ua</a></p>
</li>
</ul>
<hr>
<h2 id="Завантаження-та-Контакти"><a href="#Завантаження-та-Контакти" class="headerlink" title="Завантаження та Контакти"></a>Завантаження та Контакти</h2><p>Зберігайте цей список для швидкого доступу до корисних ресурсів! Якщо у вас є запитання чи пропозиції, будь ласка, зв’яжіться з автором через офіційні канали МОЗ або НСЗУ.</p>
<hr>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>nst</tag>
      </tags>
  </entry>
  <entry>
    <title>Online tools</title>
    <url>/hexo-blog/2024/11/18/notes/online_tools/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><h2 id="Text-editing"><a href="#Text-editing" class="headerlink" title="Text editing"></a>Text editing</h2><ol>
<li><a href="https://convertcase.net/">https://convertcase.net/</a></li>
</ol>
<h2 id="Text-comparison"><a href="#Text-comparison" class="headerlink" title="Text comparison"></a>Text comparison</h2><ol>
<li><a href="https://text-compare.com/">https://text-compare.com/</a></li>
</ol>
<h2 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h2><ol>
<li>Text from boofer&#x2F;pictures: <a href="http://www.structurise.com/screenshot-ocr/">http://www.structurise.com/screenshot-ocr/</a></li>
</ol>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>my_contribution</tag>
        <tag>tools</tag>
        <tag>online_tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Other papers</title>
    <url>/hexo-blog/2010/10/10/notes/other_papers/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Economics"><a href="#Economics" class="headerlink" title="Economics"></a>Economics</h2><ol>
<li>Confessions of an Economic Hit Man | John Perkins</li>
</ol>
<h2 id="Psychology"><a href="#Psychology" class="headerlink" title="Psychology"></a>Psychology</h2><ol>
<li>Методика семантического дифференциала<a href="https://studfile.net/preview/5699346/page:3/">.</a></li>
<li>Психосемантический подход к исследованию индивидуального сознания. Т.Е. Косаревская, Р.Р. Кутькина<a href="https://www.phantastike.com/common_psychology/psychosemantic_approac/pdf/">.</a></li>
</ol>
<h2 id="Philosophy"><a href="#Philosophy" class="headerlink" title="Philosophy:"></a>Philosophy:</h2><ol>
<li><p>Введение в неклассическую философию.Гаспарян Д.Э<a href="../../../../../docs/other/vvedeniye_v_neklassicheskuyu_filosofiyu__gasparyan_d_e.pdf">.</a>    </p>
<img src="/hexo-blog/images/vvedeniye_v_neklassicheskuyu_filosofiyu__gasparyan_d.e.jpg" alt="Введение в неклассическую философию. Гаспарян Д.Э." title="Введение в неклассическую философию. Гаспарян Д.Э." style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /> 
</li>
<li><p>Введение в политическую философию. Гаджиев К.С<a href="../../../../../docs/other/vvedeniye_v_politicheskuyu_filosofiyu__gadzhiyev_k.s.pdf">.</a></p>
  <img src="/hexo-blog/images/vvedeniye_v_politicheskuyu_filosofiyu__gadzhiyev_k.s..jpg" alt="Введение в политическую философию. Гаджиев К.С." title="Введение в политическую философию. Гаджиев К.С." style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ol>
<hr>
<h2 id="Political-science"><a href="#Political-science" class="headerlink" title="Political science"></a>Political science</h2><ol>
<li>Политология Гаджиев К.С<a href="http://library.lgaki.info:404/2017/%D0%93%D0%B0%D0%B4%D0%B6%D0%B8%D0%B5%D0%B2_%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F.pdf">.</a></li>
</ol>
<ul>
<li><strong>! Глава 15. ОСНОВНЫЕ ТЕЧЕНИЯ ИДЕЙНО-ПОЛИТИЧЕСКОЙ МЫСЛИ</strong></li>
</ul>
<hr>
<h2 id="Social-and-public-policy"><a href="#Social-and-public-policy" class="headerlink" title="Social and public policy"></a>Social and public policy</h2><ol>
<li>A Brief History of the Future. Jacques Attali. Allen &amp; Unwin, 2009. 291 pages  <img src="/hexo-blog/images/a_brief_history_of_the_future__jacques_attali.jpg" alt="A Brief History of the Future. Jacques Attali" title="A Brief History of the Future. Jacques Attali. Allen & Unwin, 2009. 291 pages" style="width: 80%; max-width: 300px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" /></li>
</ol>
<ul>
<li>Краткая история будущего. Мир в ближайшие 50 лет. Жак Аттали<a href="http://loveread.ec/read_book.php?id=83233&p=1">.</a></li>
</ul>
<h2 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h2><ol>
<li>Blockchain Networks:Token Design and Management Overview.Loïc Lesavre. Priam Varin. Dylan Yaga. 2021</li>
</ol>
<ul>
<li>DOI: <a href="https://doi.org/10.6028/NIST.IR.8301">https://doi.org/10.6028/NIST.IR.8301</a></li>
<li><a href="https://nvlpubs.nist.gov/nistpubs/ir/2021/NIST.IR.8301.pdf">Read on nvlpubs.nist.gov</a></li>
</ul>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>papers</tag>
        <tag>tutorial</tag>
        <tag>my_contribution</tag>
      </tags>
  </entry>
  <entry>
    <title>Favorite movies</title>
    <url>/hexo-blog/2010/10/10/notes/vaforite_movies/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Favorite movies list</strong></p>
<p><a href="#Takedown">Takedown</a><br><a href="#WarGames">WarGames</a><br><a href="#Tron">Tron</a><br><a href="@Hackers">Hackers</a><br><a href="#The-Net">The-Net</a></p>
<p><a href="#footnotes">footnotes</a></p>
<hr>
<h2 id="Takedown"><a href="#Takedown" class="headerlink" title="Takedown"></a>Takedown</h2><ul>
<li>Initial reliese: 2000</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0159784/">https://www.imdb.com/title/tt0159784/</a></li>
<li>About: Based on the story of the capture of computer hacker ‘Kevin Mitnick’. However, when breaks into the computer of a security expert and an ex-hacker, he’s in for a shock and has more than he can handle.</li>
<li>Based on: The book “Takeodwn” by Tsutomu Shimomura<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Tsutomu Shimomura](https://en.wikipedia.org/wiki/Tsutomu_Shimomura). More deails about Tsutomu Shimomura you can find in [BIO](http://www.takedown.com/bio/)
">[1]</span></a></sup> with John Markoff<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[John Markoff](https://en.wikipedia.org/wiki/John_Markoff)  is a journalist best known for his work covering technology at The New York Times for 28 years until his retirement in 2016, and a book and series of articles about the 1990s pursuit and capture of hacker Kevin Mitnick.
">[2]</span></a></sup></li>
</ul>
<h2 id="WarGames"><a href="#WarGames" class="headerlink" title="WarGames"></a>WarGames</h2><ul>
<li>Initial release: 1983</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0086567/">https://www.imdb.com/title/tt0086567/</a></li>
<li>About: A young computer whiz kid accidentally connects to a U.S. military supercomputer while searching for new video games. He unknowingly initiates a nuclear war simulation, sparking a real-world crisis.</li>
<li>Starring: Matthew Broderick, Ally Sheedy</li>
<li>Director: John Badham</li>
</ul>
<hr>
<h2 id="Tron"><a href="#Tron" class="headerlink" title="Tron"></a>Tron</h2><ul>
<li>Initial release: 1982</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0084827/">https://www.imdb.com/title/tt0084827/</a></li>
<li>About: A computer programmer is transported inside a computer where he battles a malevolent software program. One of the earliest films to explore digital realms and hacker culture in a stylized setting.</li>
<li>Starring: Jeff Bridges, Bruce Boxleitner</li>
<li>Director: Steven Lisberger</li>
</ul>
<hr>
<h2 id="Hackers"><a href="#Hackers" class="headerlink" title="Hackers"></a>Hackers</h2><ul>
<li>Initial release: 1995</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0113243/">https://www.imdb.com/title/tt0113243/</a></li>
<li>About: A group of teenage hackers stumbles upon a massive corporate fraud conspiracy while trying to outwit an older, sinister hacker. Known for its vibrant visual style and soundtrack.</li>
<li>Starring: Angelina Jolie, Jonny Lee Miller</li>
<li>Director: Iain Softley</li>
</ul>
<hr>
<h2 id="Sneakers"><a href="#Sneakers" class="headerlink" title="Sneakers"></a>Sneakers</h2><ul>
<li>Initial release: 1992</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0105435/">https://www.imdb.com/title/tt0105435/</a></li>
<li>About: A team of security system experts is blackmailed into stealing a top-secret decoder, but soon realize they are being used by the government. This thriller features an all-star cast and explores themes of surveillance and encryption.</li>
<li>Starring: Robert Redford, Dan Aykroyd, Sidney Poitier</li>
<li>Director: Phil Alden Robinson</li>
</ul>
<hr>
<h2 id="The-Net"><a href="#The-Net" class="headerlink" title="The Net"></a>The Net</h2><ul>
<li>Initial release: 1995</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0113957/">https://www.imdb.com/title/tt0113957/</a></li>
<li>About: A computer programmer becomes entangled in a conspiracy after her identity is stolen. The film was notable for addressing online identity theft and digital security during the early days of the internet.</li>
<li>Starring: Sandra Bullock</li>
<li>Director: Irwin Winkler</li>
</ul>
<hr>
<h2 id="Electric-Dreams"><a href="#Electric-Dreams" class="headerlink" title="Electric Dreams"></a>Electric Dreams</h2><ul>
<li>Initial release: 1984</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0087197/">https://www.imdb.com/title/tt0087197/</a></li>
<li>About: A love triangle develops between a man, a woman, and a computer. The film blends romance and sci-fi, illustrating the rising influence of computers in everyday life.</li>
<li>Starring: Lenny von Dohlen, Virginia Madsen</li>
<li>Director: Steve Barron</li>
</ul>
<hr>
<h2 id="The-Lawnmower-Man"><a href="#The-Lawnmower-Man" class="headerlink" title="The Lawnmower Man"></a>The Lawnmower Man</h2><ul>
<li>Initial release: 1992</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0104692/">https://www.imdb.com/title/tt0104692/</a></li>
<li>About: A scientist conducts virtual reality experiments to enhance the intelligence of a simple gardener. The film explores the risks of technological enhancement and the ethical boundaries of science.</li>
<li>Starring: Jeff Fahey, Pierce Brosnan</li>
<li>Director: Brett Leonard</li>
</ul>
<hr>
<h2 id="Ghost-in-the-Shell"><a href="#Ghost-in-the-Shell" class="headerlink" title="Ghost in the Shell"></a>Ghost in the Shell</h2><ul>
<li>Initial release: 1995</li>
<li>IMDB: <a href="https://www.imdb.com/title/tt0113568/">https://www.imdb.com/title/tt0113568/</a></li>
<li>About: In a futuristic society, a cyborg cop hunts a mysterious hacker known as the Puppet Master. This Japanese animated film influenced cyberpunk aesthetics and explores themes of identity and consciousness.</li>
<li>Director: Mamoru Oshii</li>
</ul>
<p><em><strong>Footnotes:</strong></em><br><a id="footnotes"></a></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/Tsutomu_Shimomura">Tsutomu Shimomura</a>. More deails about Tsutomu Shimomura you can find in <a href="http://www.takedown.com/bio/">BIO</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://en.wikipedia.org/wiki/John_Markoff">John Markoff</a>  is a journalist best known for his work covering technology at The New York Times for 28 years until his retirement in 2016, and a book and series of articles about the 1990s pursuit and capture of hacker Kevin Mitnick.<a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>my_contribution</tag>
        <tag>movie</tag>
      </tags>
  </entry>
  <entry>
    <title>Symbol encoding (Unicode and family)</title>
    <url>/hexo-blog/2024/10/31/notes/symbol_encoding_unicode_note_1/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>In the world of text and symbols, many encoding systems allow for displaying characters, symbols, and icons in different contexts. Unicode is the primary standard, but there are several other encoding systems and symbol categories, each serving specialized purposes. Here’s a breakdown:</p>
<p>Key Symbol Encoding Systems and Categories</p>
<ol>
<li><p>Unicode</p>
<ul>
<li>Usage: The universal encoding standard supporting characters from virtually all languages, as well as emoji, symbols, and icons.</li>
<li>Categories: Includes letters, numbers, emoji, mathematical symbols, box-drawing characters, and more.</li>
<li>Examples: Alphabet (A, B), numbers (1, 2), emoji (😊), math symbols (√, ∑), and other unique characters like ↵.</li>
<li>Resources: <ul>
<li><a href="https://emojidb.org/">https://emojidb.org/</a></li>
</ul>
</li>
</ul>
</li>
<li><p>ASCII (American Standard Code for Information Interchange)</p>
<ul>
<li>Usage: Basic Latin letters, numbers, punctuation, and control characters for simple text encoding.</li>
<li>Limitations: Limited to 128 characters, excluding many languages and special symbols.</li>
<li>Examples: Basic Latin alphabet (A-Z), numbers (0-9), punctuation marks like . and ,.</li>
</ul>
</li>
<li><p>ISO&#x2F;IEC 8859 (ISO Latin)</p>
<ul>
<li>Usage: Supports European languages with additional Latin characters, like accented letters.</li>
<li>Categories: Variants (ISO 8859-1, ISO 8859-5) cover Western European, Eastern European, and Cyrillic scripts.</li>
<li>Limitations: Restricted to 256 characters per set.</li>
</ul>
</li>
<li><p>ANSI (Windows-1252)</p>
<ul>
<li>Usage: Commonly used on Windows; extends ASCII with additional characters for Western European languages.</li>
<li>Limitations: Non-standard on non-Windows systems.</li>
<li>Examples: Includes symbols like €, accented letters, and punctuation.</li>
</ul>
</li>
<li><p>Emoji (Unicode Extended Pictographic Symbols)</p>
<ul>
<li>Usage:  Unicode provides a broad range of emoji for digital communication, sorted into categories.</li>
<li>Categories: Smileys, People, Animals, Food, Travel, and more.</li>
<li>Notes: Rendered differently across platforms (Apple, Google, Microsoft, etc.).</li>
</ul>
</li>
<li><p>HTML Entities</p>
<ul>
<li>Usage: Encodes special symbols in HTML with named (&amp;) or numeric (&#169;) entities.</li>
<li>Notes: Often Unicode-based, written as character references in HTML documents for web use.</li>
</ul>
</li>
<li><p>LaTeX Symbols</p>
<ul>
<li>Usage:  Essential in academic and scientific fields, especially for mathematical notation.</li>
<li>Categories: Greek letters, math operators, functions (\alpha, \sum, \infty).</li>
<li>Notes: Not an encoding system but a method to render symbols in scientific documents.</li>
</ul>
</li>
<li><p>Dingbats</p>
<ul>
<li><p>Usage: Decorative symbols, often used for visual enhancement.</p>
</li>
<li><p>Examples: Check marks, arrows, stars.</p>
</li>
<li><p>Notes: Originated in typefaces like Zapf Dingbats; Unicode includes a Dingbats block.</p>
</li>
</ul>
</li>
<li><p>Box Drawing Characters</p>
<ul>
<li>Usage: Used for simple graphics and box drawing in text files or terminal interfaces.</li>
<li>Examples: ┌, ─, ┐, │, ┘.</li>
<li>Notes: Useful for ASCII art and table layouts.</li>
</ul>
</li>
<li><p>Control Characters</p>
<ul>
<li>Usage: Non-printing characters to control text display, such as line breaks and tabs.</li>
<li>Categories: Includes Line Feed (LF), Carriage Return (CR), and others.</li>
</ul>
</li>
<li><p>Private Use Area (PUA)</p>
<ul>
<li><p>Usage:  Allows companies or individuals to define custom symbols not in Unicode.</p>
</li>
<li><p>Examples: Proprietary symbols, company logos.</p>
</li>
<li><p>Notes: Non-standard and specific to certain systems or applications.</p>
<p>Each of these systems provides unique ways to display and interact with symbols. While Unicode has largely unified global encoding, non-Unicode systems still fulfill niche needs, especially in older systems or specialized fields.</p>
</li>
</ul>
</li>
</ol>
<p>Here are a few sources for locating and copying symbols:</p>
<ol>
<li><p>Unicode Tables</p>
<p> <a href="https://home.unicode.org/">home.unicode.org</a> provides official charts for different Unicode blocks. Each chart lists symbols for a specific category, like arrows, geometric shapes, mathematical symbols, etc.<br> You can search by character name or code point to find the exact symbol you need.</p>
<ul>
<li>Example: <code>Unicde = &amp;U+1F47D</code> &#x3D; <code>hexadecimal format = &amp;#x1F47D;</code> result &#x3D; &#x1F47D;</li>
</ul>
</li>
<li><p>Character Map Utility (Windows)</p>
<p> Windows includes a built-in tool called “Character Map” (charmap.exe) where you can browse and copy symbols from various fonts that support Unicode.<br> Open it by typing “Character Map” in the Start menu search bar, then find and copy symbols to paste them into your project.</p>
</li>
<li><p>Emoji and Symbol Libraries </p>
<p> <a href="https://symbl.cc/en/unicode-table/">Online Websites like Unicode Table</a> and <a href="https://coolsymbol.com/">Coolsymbol</a> provide searchable libraries of Unicode symbols, emojis, and text decorations.<br> You can copy the symbol you want directly from these sites.</p>
</li>
<li><p>HTML Entity Reference</p>
<p> Some symbols have HTML entity codes (e.g., &larr; for ←). Sites like DevDocs or W3Schools list HTML entities if you want to embed symbols in web pages.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Notes</category>
      </categories>
      <tags>
        <tag>unicode</tag>
        <tag>ASCII</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXIO.IO fixes guide</title>
    <url>/hexo-blog/2024/11/01/tutorials/HEXO.IO_fixes_guide/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>For making changes in blog design check that:</p>
<ul>
<li>default configuration of HEXO.IO is not changed (You installed everythong from initial command from <a href="https://hexo.io/docs/setup">Hexo <code>Setup</code></a> page;</li>
<li>you made copy of original project;</li>
<li>be ready to install some additional plugins that cna be oudiated or required additionla configurations</li>
</ul>
<hr>
<p><strong>TOC</strong><br><a href="#1-Moving-side-panel-to-the-left-side">1. Moving side panel to the left side.</a><br><a href="#2-Removing-hide-Search-form-on-the-header">2. Removing(hide) <code>Search</code> form on the header</a><br><a href="#3-Changes-project-structure-If-blog-published-not-iun-the-root-of-GitHub">3. Changes project structure. If blog published not iun the root of GitHub</a><br><a href="#4-Sitemap-for-the-blog">4. Sitemap for the blog.  </a><br><a href="#5-Add-HEXO-IO-version-details-to-the-footer">5. Add HEXO.IO version details to the footer</a><br><a href="#6-Search-option-internal-HEXO-IO-feature">6. Search option (internal HEXO.IO feature)</a><br><a href="#7-Managing-publishing-several-projects-from-the-same-local-machine-GitHub-access-token-issues">7. Managing (publishing) several projects from the same local machine (GitHub access + token issues)</a><br><a href="#8-Pagination-issue-after-deploying-on-GitHub-pages">8. Pagination issue after deploying on GitHub pages</a></p>
<p>Below  is a list of changes and improvements.</p>
<h2 id="1-Moving-side-panel-to-the-left-side"><a href="#1-Moving-side-panel-to-the-left-side" class="headerlink" title="1. Moving side panel to the left side."></a>1. Moving side panel to the left side.</h2><p>   Moving side panel to the left side required editing <code>\themes\landscape\_config.yml</code> and add <code>sidebar: left</code></p>
<h2 id="2-Removing-hide-Search-form-on-the-header"><a href="#2-Removing-hide-Search-form-on-the-header" class="headerlink" title="2. Removing(hide) Search form on the header"></a>2. Removing(hide) <code>Search</code> form on the header</h2><h2 id="For-hiding-‘Search’-form-from-the-header-bar-1-open-themes-landscape-layout-partial-header-ejs-it-works-if-theme-is-landscape-It-was-not-chekced-on-default-theme-2-comment-linesin-two-places-1-1st-2-and-2nd"><a href="#For-hiding-‘Search’-form-from-the-header-bar-1-open-themes-landscape-layout-partial-header-ejs-it-works-if-theme-is-landscape-It-was-not-chekced-on-default-theme-2-comment-linesin-two-places-1-1st-2-and-2nd" class="headerlink" title="   For hiding ‘Search’ form from the header bar,   1. open \themes\landscape\layout\_partial\header.ejs (it works if theme is landscape (It was not chekced on default theme!!!)   2. comment  linesin two places:      1. 1st                 2. and 2nd          "></a>   For hiding ‘Search’ form from the header bar,<br>   1. open <code>\themes\landscape\layout\_partial\header.ejs</code> (it works if <code>theme</code> is <code>landscape</code> (It was not chekced on default <code>theme</code>!!!)<br>   2. comment  linesin two places:<br>      1. 1st<br>           <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">a</span> class=&quot;<span class="selector-tag">nav</span>-<span class="attribute">icon</span> <span class="selector-tag">nav</span>-search-btn&quot; title=&quot;&lt;%= __(&#x27;search&#x27;) %&gt;&quot;&gt;&lt;<span class="selector-tag">span</span> class=&quot;fa fa-search&quot;&gt;&lt;/<span class="selector-tag">span</span>&gt;&lt;/<span class="selector-tag">a</span>&gt;</span><br></pre></td></tr></table></figure><br>      2. and 2nd<br>          <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;%- search_form(&#123;<span class="selector-tag">button</span>: <span class="string">&#x27;&amp;#xF002;&#x27;</span>, text: <span class="built_in">__</span>(<span class="string">&#x27;search&#x27;</span>)&#125;) %&gt; </span><br></pre></td></tr></table></figure></h2><h2 id="3-Changes-project-structure-If-blog-published-not-iun-the-root-of-GitHub"><a href="#3-Changes-project-structure-If-blog-published-not-iun-the-root-of-GitHub" class="headerlink" title="3. Changes project structure. If blog published not iun the root of GitHub"></a>3. Changes project structure. If blog published not iun the root of GitHub</h2><p> If HEXO.IO project will be publoished not in teh root of GitHub , the _comfig.yaml should be updated. </p>
<p> Aftrer changes the project structure and making different folders inside the <code>_post</code> folder the blog navigation may not work.<br> Issue is related to at least to sides:<br>    1. When post item has dedicated <code>permalink</code>, project ingine for some reason (if post published no wtih <code>root</code>) conflict of </p>
<hr>
<h2 id="4-Sitemap-for-the-blog"><a href="#4-Sitemap-for-the-blog" class="headerlink" title="4. Sitemap for the blog."></a>4. Sitemap for the blog.</h2><ul>
<li><p><strong>Install the Sitemap Plugin</strong></p>
<p>   In your Hexo project directory, run the following command to install hexo-generator-sitemap:</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<p>   This will add the sitemap generator plugin to your project, which automatically generates a sitemap.xml file each time you build your site.</p>
</li>
<li><p><strong>Configure _config.yml</strong></p>
<p>   Open your Hexo <code>_config.yml</code> file (this is the main configuration file in the root directory, not in the theme folder), and add the following configuration under the sitemap settings:</p>
   <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure>
<p>   By default, this will create a sitemap.xml file in the root of your site’s output (public&#x2F;) directory.</p>
</li>
<li><p><strong>(Optional) Add the Sitemap URL to robots.txt</strong></p>
<p>   To help search engines find your sitemap, add its URL to a robots.txt file if you haven’t done so already. Here’s how:</p>
<p>   If you already have a robots.txt file configured, just add this line to it:</p>
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sitemap: https://your-hexo-site.com/sitemap.xml</span><br></pre></td></tr></table></figure>
<p>   If you don’t have a robots.txt file, you can create one in source&#x2F;robots.txt, and then add the line above with your site URL.</p>
</li>
<li><p><strong>Generate and Deploy</strong></p>
<p>   Run the following commands to generate your site and deploy it:</p>
   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash</span><br><span class="line">hexo clean ; hexo generate ;hexo deploy</span><br></pre></td></tr></table></figure>
<p>   After deploying, your sitemap should be accessible at <a href="https://your-hexo-site.com/sitemap.xml">https://your-hexo-site.com/sitemap.xml</a>.</p>
</li>
<li><p><strong>Verifying the Sitemap</strong></p>
<p>   Visit <a href="https://your-hexo-site.com/sitemap.xml">https://your-hexo-site.com/sitemap.xml</a> in your browser to confirm the sitemap is generated and accessible.<br>   Submit your sitemap to Google Search Console or other search engine webmaster tools for better indexing.</p>
</li>
</ul>
<hr>
<h2 id="5-Add-HEXO-IO-version-details-to-the-footer"><a href="#5-Add-HEXO-IO-version-details-to-the-footer" class="headerlink" title="5. Add HEXO.IO version details to the footer"></a>5. Add HEXO.IO version details to the footer</h2><ol>
<li>Create or edit a file in your theme’s scripts directory, such as <code>hexo_info.js</code>, for getting hexo verion details:<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; execSync &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(<span class="string">&#x27;hexoVersion&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">const</span> &#123; version &#125; = <span class="built_in">require</span>(<span class="string">&#x27;hexo/package.json&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> version;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(<span class="string">&#x27;hexoClient&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">const</span> output = <span class="title function_">execSync</span>(<span class="string">&#x27;hexo --version&#x27;</span>, &#123; <span class="attr">encoding</span>: <span class="string">&#x27;utf8&#x27;</span> &#125;);</span><br><span class="line"><span class="keyword">const</span> match = output.<span class="title function_">match</span>(<span class="regexp">/hexo-cli: (\d+\.\d+\.\d+)/</span>);</span><br><span class="line"><span class="keyword">return</span> match ? match[<span class="number">1</span>] : <span class="string">&#x27;Unknown&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Error retrieving CLI version&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li>
<li>Create ejs file where function retrives existing HEXO.IO details like HEXO.IO version and hexo-client version  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;footer-info&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><br><span class="line">&amp;copy; &lt;%= <span class="title function_">date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&#x27;YYYY&#x27;</span>) %&gt; &lt;%= config.<span class="property">author</span> || config.<span class="property">title</span> %&gt;&lt;br&gt;</span><br><span class="line">&lt;%= <span class="title function_">__</span>(<span class="string">&#x27;powered_by&#x27;</span>) %&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://hexo.io/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Hexo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span> (v&lt;%= <span class="title function_">hexoVersion</span>() %&gt;)&lt;br&gt;</span><br><span class="line"><span class="title class_">Hexo</span> <span class="attr">CLI</span>: &lt;%= <span class="title function_">hexoClient</span>() %&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="6-Search-option-internal-HEXO-IO-feature"><a href="#6-Search-option-internal-HEXO-IO-feature" class="headerlink" title="6. Search option (internal HEXO.IO feature)"></a>6. Search option (internal HEXO.IO feature)</h2><ol>
<li>Option-1 (Search option was not possible to configure by these steps)<br>Use script   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-posts</span><br></pre></td></tr></table></figure>
<ul>
<li>hexo-generator-search<br>  <a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a><br>   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li>
</ul>
<p>   hexo-generator-feed<br>   hexo-renderer-less<br>   hexo-autoprefixer<br>   hexo-generator-json-content<br>   hexo-recommended-posts</p>
</li>
</ol>
<hr>
<h2 id="7-Managing-publishing-several-projects-from-the-same-local-machine-GitHub-access-token-issues"><a href="#7-Managing-publishing-several-projects-from-the-same-local-machine-GitHub-access-token-issues" class="headerlink" title="7. Managing (publishing) several projects from the same local machine (GitHub access + token issues)"></a>7. Managing (publishing) several projects from the same local machine (GitHub access + token issues)</h2><p>To publish a new Hexo blog to a different GitHub account, you need to configure the deployment settings correctly and ensure the required deployer plugin is installed. Follow these steps:</p>
<ol>
<li><p>Install the Git Deployer Plugin.<br>Hexo uses plugins for deployment. Install the required plugin:<br>   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>Update _config.yml for Deployment<br>Edit the main _config.yml file in your Hexo project directory to include deployment settings for the target GitHub account. Use the following structure:</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">https://&lt;username&gt;:&lt;personal_access_token&gt;@github.com/&lt;username&gt;/&lt;repository_name&gt;.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<ol>
<li>Replace <username> with the GitHub username for the new account.</li>
<li>Replace <personal_access_token> with a Personal Access Token (PAT) for authentication.</li>
<li>Replace <repository_name> with the name of the repository where you want to publish the blog.</li>
<li>Replace main with the default branch of your repository, if different.</li>
</ol>
</li>
</ol>
<p><em><strong>Notes:</strong></em><br>You can create a Personal Access Token from the new GitHub account under Settings &gt; Developer settings &gt; Personal Access Tokens.<br>Use https for authentication to simplify the setup.</p>
<ol start="3">
<li><p>Initialize the Deployment Repository<br>If you haven’t already, initialize a repository for the new GitHub account:</p>
<ol>
<li>Log in to the new GitHub account.</li>
<li>Create a new repository for your blog.</li>
<li>Copy the repository URL and ensure it matches what you’ve configured in _config.yml.</li>
</ol>
</li>
<li><p>Deploy the Blog<br>Run the following command to generate the site and deploy it to the new GitHub repository:</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li>
</ol>
<hr>
<h2 id="8-Pagination-issue-after-deploying-on-GitHub-pages"><a href="#8-Pagination-issue-after-deploying-on-GitHub-pages" class="headerlink" title="8. Pagination issue after deploying on GitHub pages"></a>8. Pagination issue after deploying on GitHub pages</h2><p>Pagination of hexo.io blog works fine on localhost but not working after deploy on GitHub pages.<br><a href="http://localhost:4000/hexo-blog/categories/Posts/_posts/2/">http://localhost:4000/hexo-blog/categories/Posts/_posts/2/</a> works fine, page opens with content<br><a href="https://ooge0.github.io/hexo-blog/categories/Posts/_posts/2/">https://ooge0.github.io/hexo-blog/categories/Posts/_posts/2/</a> shows that page not found</p>
<p><em>Helpful Resources</em></p>
<ol>
<li><a href="https://hexo.io/docs/configuration#Pagination">Hexo Documentation - Pagination</a></li>
</ol>
<p>Solutions:</p>
<ol>
<li><p>Enable Pretty URLs. Ensure that Hexo generates an index.html file for each page in the pagination. In Hexo, this can be achieved by enabling the proper permalink structure.<br>In the main <code>_config.yml</code>, check or add the following:</p>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:categories/:title/</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line"><span class="attr">trailing_index:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">trailing_html:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>This generates URLs like &#x2F;categories&#x2F;Posts&#x2F;_posts&#x2F;2&#x2F; and ensures that an index.html is created in the corresponding folder.</p>
<p>In my case permalink section in <code>_config.yml</code> was<br>     <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line"><span class="attr">trailing_index:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">trailing_html:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><br>After changes <code>_config.yml</code> became<br>     <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:categories/:title/</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line"><span class="attr">trailing_index:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">trailing_html:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p>
<p><strong>Result:</strong></p>
<ul>
<li>On localhost pagination is working </li>
<li>On GitHub pages <strong>pagination still not working</strong></li>
</ul>
<ol>
<li>Change  pagination_dir from <code>pagination_dir: _posts</code> to <code>pagination_dir: Posts</code> in <code>_config.yml</code><br><strong>Result:</strong></li>
</ol>
<ul>
<li>On localhost pagination is working </li>
<li>On GitHub pages <strong>pagination still not working</strong></li>
</ul>
<p><strong>Resoluiton</strong><br>Pagination issue was related to extending of structure of HEXO project. Nested folder inside the <code>_post</code> folder brakes pagination only on remote host. In this case created individual folders for posts that are related to different topics produces internal conflict of generated by HEXO.IO engine documents that can possible resolve to add the name of the additionally created folder where messages are stored. For this project was created additionally several individual folders , but HEXO accept to use all posts by adding just one name of folder. In this case <code>Posts</code></p>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>blog</tag>
        <tag>hexo_io</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXIO.IO instalation guide</title>
    <url>/hexo-blog/2024/10/22/tutorials/HEXO.IO_installation_guide/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="Make-HEXO-IO-blog"><a href="#Make-HEXO-IO-blog" class="headerlink" title="Make HEXO.IO blog"></a>Make HEXO.IO blog</h2><ul>
<li><a href="https://hexo.io/">https://hexo.io/</a> -A fast, simple &amp; powerful blog framework</li>
</ul>
<h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a><strong>Install Hexo</strong></h3><p>To get started with Hexo, ensure you have <strong>Node.js</strong> and <strong>Git</strong> installed on your machine. Then follow these steps:</p>
<h4 id="Install-Hexo-CLI"><a href="#Install-Hexo-CLI" class="headerlink" title="Install Hexo CLI"></a><strong>Install Hexo CLI</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h4 id="Create-a-New-Hexo-Project"><a href="#Create-a-New-Hexo-Project" class="headerlink" title="Create a New Hexo Project"></a><strong>Create a New Hexo Project</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog <span class="built_in">cd</span> my-blog npm install</span><br></pre></td></tr></table></figure>

<h4 id="Start-the-Local-Server"><a href="#Start-the-Local-Server" class="headerlink" title="Start the Local Server"></a><strong>Start the Local Server</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>Visit <code>http://localhost:4000</code> to see your Hexo blog locally.</p>
<hr>
<h3 id="2-Publish-the-Blog-on-GitHub-Pages"><a href="#2-Publish-the-Blog-on-GitHub-Pages" class="headerlink" title="2. Publish the Blog on GitHub Pages"></a><strong>2. Publish the Blog on GitHub Pages</strong></h3><h4 id="Set-Up-a-GitHub-Repository"><a href="#Set-Up-a-GitHub-Repository" class="headerlink" title="Set Up a GitHub Repository"></a><strong>Set Up a GitHub Repository</strong></h4><ol>
<li>Create a new repository on GitHub named <code>yourusername.github.io</code>.</li>
<li>Clone the repository locally:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yourusername/yourusername.github.io</span><br></pre></td></tr></table></figure>

<h4 id="Configure-Deployment-in-Hexo"><a href="#Configure-Deployment-in-Hexo" class="headerlink" title="Configure Deployment in Hexo"></a><strong>Configure Deployment in Hexo</strong></h4><ol>
<li><p>Open your Hexo project.</p>
</li>
<li><p>Install the deployment tool:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>Open the <code>_config.yml</code> file in the root of your Hexo project.</p>
</li>
<li><p>Add the following lines for deployment configuration:</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourusername/yourusername.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>  <span class="comment"># Use &#x27;master&#x27; for older repositories</span></span><br></pre></td></tr></table></figure>

<h4 id="Generate-Static-Files-and-Deploy"><a href="#Generate-Static-Files-and-Deploy" class="headerlink" title="Generate Static Files and Deploy"></a><strong>Generate Static Files and Deploy</strong></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>Your blog will now be live at <code>https://yourusername.github.io</code>.</p>
<hr>
<h3 id="3-Customizing-Hexo-Layout"><a href="#3-Customizing-Hexo-Layout" class="headerlink" title="3. Customizing Hexo Layout"></a><strong>3. Customizing Hexo Layout</strong></h3><p>Hexo uses themes to define the layout. You can use an existing theme or customize your own.</p>
<h4 id="Change-or-Install-a-Theme"><a href="#Change-or-Install-a-Theme" class="headerlink" title="Change or Install a Theme"></a><strong>Change or Install a Theme</strong></h4><ol>
<li><p>Browse <a href="https://hexo.io/themes/">Hexo Themes</a>.</p>
</li>
<li><p>Install the theme:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-name/theme.git themes/theme-name`</span><br></pre></td></tr></table></figure>
</li>
<li><p>Update the <code>_config.yml</code> file to use the new theme:</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">theme-name</span></span><br></pre></td></tr></table></figure>

<h4 id="Customize-the-Layout"><a href="#Customize-the-Layout" class="headerlink" title="Customize the Layout"></a><strong>Customize the Layout</strong></h4><p>Hexo themes are built using <strong>EJS</strong>, <strong>Swig</strong>, or <strong>Pug</strong> templating engines. You can modify these template files in the theme’s <code>layout</code> folder to adjust the HTML structure, styles, and other customizations.</p>
<p>If you want to add a <strong>left side panel</strong> with a <strong>menu</strong>, you’ll need to modify the <code>layout/_partial/sidebar.ejs</code> (or similar) file in the theme folder.</p>
<hr>
<h3 id="4-Add-a-Left-Side-Panel-and-Menu"><a href="#4-Add-a-Left-Side-Panel-and-Menu" class="headerlink" title="4. Add a Left Side Panel and Menu"></a><strong>4. Add a Left Side Panel and Menu</strong></h3><h4 id="Create-the-Left-Sidebar"><a href="#Create-the-Left-Sidebar" class="headerlink" title="Create the Left Sidebar"></a><strong>Create the Left Sidebar</strong></h4><ol>
<li>Edit the theme’s <code>layout</code> file that contains the sidebar (e.g., <code>layout/_partial/sidebar.ejs</code>).</li>
<li>Add the following menu HTML structure:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/posts&quot;</span>&gt;</span>My Posts<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/notes&quot;</span>&gt;</span>My Notes<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/stats&quot;</span>&gt;</span>My Stats<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/tags&quot;</span>&gt;</span>Tags<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="Customize-Styles-for-the-Sidebar"><a href="#Customize-Styles-for-the-Sidebar" class="headerlink" title="Customize Styles for the Sidebar"></a><strong>Customize Styles for the Sidebar</strong></h4><p>In your theme’s <code>source/css/style.css</code> (or similar stylesheet), add custom CSS to style the sidebar:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> &#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="5-Add-Pages-for-Menu-Items"><a href="#5-Add-Pages-for-Menu-Items" class="headerlink" title="5. Add Pages for Menu Items"></a><strong>5. Add Pages for Menu Items</strong></h3><h4 id="Create-Pages-for-Custom-Sections"><a href="#Create-Pages-for-Custom-Sections" class="headerlink" title="Create Pages for Custom Sections"></a><strong>Create Pages for Custom Sections</strong></h4><p>For each menu item (e.g., “My Posts”, “My Notes”), create corresponding pages:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;posts&quot;</span> hexo new page <span class="string">&quot;notes&quot;</span> hexo new page <span class="string">&quot;stats&quot;</span> hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>Each of these commands will create a new <code>.md</code> file in the <code>source</code> folder. You can edit them to include content specific to that section.</p>
<h4 id="Add-Tag-Listing-Page"><a href="#Add-Tag-Listing-Page" class="headerlink" title="Add Tag Listing Page"></a><strong>Add Tag Listing Page</strong></h4><p>Hexo automatically supports tag pages, but you can enhance it. Ensure you have a <code>tags</code> page by running:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>In <code>source/tags/index.md</code>, add:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Tags</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">tags</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="6-Main-Panel-with-Scroll-Bar"><a href="#6-Main-Panel-with-Scroll-Bar" class="headerlink" title="6. Main Panel with Scroll Bar"></a><strong>6. Main Panel with Scroll Bar</strong></h3><p>To ensure that your posts have a scrollable main content area, adjust the CSS for the main content area in your theme’s stylesheet (usually <code>source/css/style.css</code>).</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.main-panel</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">260px</span>;  <span class="comment">/* Account for sidebar */</span></span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>Ensure that your theme’s HTML structure assigns the <code>main-panel</code> class to the main content area.</p>
<hr>
<h3 id="7-Main-Configuration-Options-in-Hexo"><a href="#7-Main-Configuration-Options-in-Hexo" class="headerlink" title="7. Main Configuration Options in Hexo"></a><strong>7. Main Configuration Options in Hexo</strong></h3><p>In Hexo’s <code>_config.yml</code> file, you can customize many aspects of your site. Here are some of the most common settings:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">My</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">My</span> <span class="string">Blog</span> <span class="string">Subtitle</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">A</span> <span class="string">blog</span> <span class="string">about</span> <span class="string">my</span> <span class="string">personal</span> <span class="string">projects.</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Your</span> <span class="string">Name</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL Configuration</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://yourusername.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yourusername/yourusername.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Plugins</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-tag</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-generator-archive</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-deployer-git</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="8-Table-of-Hexo-Features"><a href="#8-Table-of-Hexo-Features" class="headerlink" title="8. Table of Hexo Features"></a><strong>8. Table of Hexo Features</strong></h3><table>
<thead>
<tr>
<th><strong>Feature</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>Static Site Generator</strong></td>
<td>Generates static HTML files for fast performance.</td>
</tr>
<tr>
<td><strong>Markdown Support</strong></td>
<td>Write posts in Markdown for easy formatting.</td>
</tr>
<tr>
<td><strong>Themes &amp; Customization</strong></td>
<td>Use pre-built themes or create your own.</td>
</tr>
<tr>
<td><strong>Plugins</strong></td>
<td>Extend functionality with various plugins (e.g., tags, archives).</td>
</tr>
<tr>
<td><strong>Tag System</strong></td>
<td>Organize posts with a powerful tag system.</td>
</tr>
<tr>
<td><strong>SEO Friendly</strong></td>
<td>Built-in SEO optimization features.</td>
</tr>
<tr>
<td><strong>Deployment</strong></td>
<td>One-click deployment to GitHub, GitLab, or custom servers.</td>
</tr>
<tr>
<td><strong>Drafts</strong></td>
<td>Manage drafts and publish them later.</td>
</tr>
<tr>
<td><strong>Multi-language Support</strong></td>
<td>Write blog in multiple languages.</td>
</tr>
<tr>
<td><strong>Extensible with Plugins</strong></td>
<td>Add analytics, social media sharing, and more via plugins.</td>
</tr>
</tbody></table>
<h2 id="import-existing-Markdown-md-and-HTML-files-into-Hexo"><a href="#import-existing-Markdown-md-and-HTML-files-into-Hexo" class="headerlink" title="import existing Markdown (.md) and HTML files into Hexo"></a>import existing Markdown (.md) and HTML files into Hexo</h2><h2 id="HEXO-IO-commands"><a href="#HEXO-IO-commands" class="headerlink" title="HEXO.IO commands"></a>HEXO.IO commands</h2><p>hexo clean + generate + hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean; hexo generate; hexo serve</span><br></pre></td></tr></table></figure>


<h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p><a href="https://github.com/bubkoo/hexo-toc">https://github.com/bubkoo/hexo-toc</a><br><a href="https://github.com/bennycode/hexo-insert-toc">https://github.com/bennycode/hexo-insert-toc</a></p>
<h2 id="HEXO-Markdown"><a href="#HEXO-Markdown" class="headerlink" title="HEXO + Markdown"></a>HEXO + Markdown</h2><ul>
<li>hexo-renderer-markdown-it<ul>
<li>This renderer plugin uses Markdown-it as a render engine on Hexo. Adds support for Markdown and CommonMark.</li>
<li><a href="https://github.com/hexojs/hexo-renderer-markdown-it">https://github.com/hexojs/hexo-renderer-markdown-it</a></li>
</ul>
</li>
</ul>
<h2 id="Other-resources"><a href="#Other-resources" class="headerlink" title="Other resources"></a>Other resources</h2><ul>
<li><a href="https://xlog.wangyunzi.com/3?locale=en">xlog.wangyunzi.com | My Blog Building Journey - Hexo</a></li>
</ul>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>blog</tag>
        <tag>hexo_io</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXIO.IO layout improvements</title>
    <url>/hexo-blog//hexo-layout-improvements/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Table of content</strong></p>
<ul>
<li><a href="#decreasing-size-of-main-body-area">Decreasing size of main body area</a><ul>
<li><a href="#changes-1">changes-1</a></li>
<li><a href="#changes-2">changes-2</a></li>
</ul>
</li>
<li><a href="#sub-nav-issue-with-search-form">sub-nav issue with Search form</a></li>
<li><a href="#if-changes-leads-to-broken-portraite-view-for-mobile-devices-">If changes leads to broken portraite view for mobile devices .</a></li>
<li><a href="#adding-footnotes">Adding footnotes</a><ul>
<li><a href="#show-some-number-of-tags-in-the-tag-section">Show some number of tags in the ‘Tag’ section.</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="Decreasing-size-of-main-body-area"><a href="#Decreasing-size-of-main-body-area" class="headerlink" title="Decreasing size of main body area"></a>Decreasing size of main body area</h2><p>header-inner (section that contains elements of navigation menu)</p>
<p>Edited file <code>\themes\landscape\source\css\_partial\header.styl</code></p>
<p>Before changes #header-inner</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#header-inner</span></span><br><span class="line">  <span class="attribute">position</span>: relative</span><br><span class="line">  overflow: hidden</span><br></pre></td></tr></table></figure>

<p>Before changes $nav-link</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">$<span class="selector-tag">nav</span>-link &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#312602</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">text-shadow</span>: </span><br><span class="line">    -<span class="number">1px</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,  // Top-left shadow</span><br><span class="line">    <span class="number">1px</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,   // Top-right shadow</span><br><span class="line">    -<span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,   // Bottom-left shadow</span><br><span class="line">    <span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,    // Bottom-right shadow</span><br><span class="line">    <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.4</span>); // Original shadow for depth</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.2s</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="changes-1"><a href="#changes-1" class="headerlink" title="changes-1"></a>changes-1</h4><p>After changes-1 #header-inner</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>; // Move <span class="selector-tag">to</span> the <span class="attribute">bottom</span> of the parent <span class="selector-tag">section</span></span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>; // Align <span class="selector-tag">to</span> the <span class="attribute">left</span> if needed</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>; // Ensure it spans the <span class="attribute">width</span> of the parent <span class="selector-tag">section</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Links on the nav bar are not possible to click</p>
<h3 id="changes-2"><a href="#changes-2" class="headerlink" title="changes-2"></a>changes-2</h3><p>After changes-2 #header-inner</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>; // Move <span class="selector-tag">to</span> the <span class="attribute">bottom</span> of the parent <span class="selector-tag">section</span></span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;   // Align <span class="selector-tag">to</span> the <span class="attribute">left</span> if needed</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80%</span>; // Ensure it spans the <span class="attribute">width</span> of the parent <span class="selector-tag">section</span></span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>; // Ensure it is above other elements</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>and </p>
<p>After changes-2 $nav-link</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">$<span class="selector-tag">nav</span>-link &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#312602</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">text-shadow</span>: </span><br><span class="line">    -<span class="number">1px</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,   // Top-left shadow</span><br><span class="line">    <span class="number">1px</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,    // Top-right shadow</span><br><span class="line">    -<span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,    // Bottom-left shadow</span><br><span class="line">    <span class="number">1px</span> <span class="number">1px</span> <span class="number">0</span> <span class="number">#ff7f50</span>,     // Bottom-right shadow</span><br><span class="line">    <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.4</span>); // Original shadow for depth</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.2s</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative; // Ensures correct stacking within <span class="selector-id">#header-inner</span></span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer; // Ensures pointer <span class="attribute">cursor</span> on hover</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>nav-bar fixed and works fine for desktop and mobile view.</p>
<h2 id="sub-nav-issue-with-Search-form"><a href="#sub-nav-issue-with-Search-form" class="headerlink" title="sub-nav issue with Search form"></a>sub-nav issue with Search form</h2><p>Layout of Search form is shifted for mobile devices.<br>File <code>\themes\landscape\source\css\_partial\header.styl</code><br>should be changed</p>
<p>Before changes-1 header.styl </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-id">#sub-nav</span></span><br><span class="line">  <span class="attribute">float</span>: right</span><br><span class="line">  margin-right: -<span class="number">15px</span></span><br><span class="line"></span><br><span class="line">#search-form-wrap</span><br><span class="line">  position: absolute</span><br><span class="line">  top: <span class="number">15px</span></span><br><span class="line">  width: <span class="number">150px</span></span><br><span class="line">  height: <span class="number">30px</span></span><br><span class="line">  right: -<span class="number">150px</span></span><br><span class="line">  opacity: <span class="number">0</span></span><br><span class="line">  transition: <span class="number">0.2s</span> ease-out</span><br><span class="line">  &amp;.on</span><br><span class="line">    opacity: <span class="number">1</span></span><br><span class="line">    right: <span class="number">0</span></span><br><span class="line">  @media mq-mobile</span><br><span class="line">    width: <span class="number">100%</span></span><br><span class="line">    right: -<span class="number">100%</span></span><br><span class="line"></span><br><span class="line">.search-form</span><br><span class="line">  position: absolute</span><br><span class="line">  top: <span class="number">0</span></span><br><span class="line">  left: <span class="number">0</span></span><br><span class="line">  right: <span class="number">0</span></span><br><span class="line">  background: <span class="number">#fff</span></span><br><span class="line">  padding: <span class="number">5px</span> <span class="number">15px</span></span><br><span class="line">  border-radius: <span class="number">15px</span></span><br><span class="line">  box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line">.search-form-input</span><br><span class="line">  border: none</span><br><span class="line">  background: none</span><br><span class="line">  color: color-default</span><br><span class="line">  width: <span class="number">100%</span></span><br><span class="line">  font: <span class="number">13px</span> font-sans</span><br><span class="line">  outline: none</span><br><span class="line">  &amp;::-webkit-search-results-decoration</span><br><span class="line">  &amp;::-webkit-search-cancel-button</span><br><span class="line">    -webkit-appearance: none</span><br><span class="line"></span><br><span class="line">.search-form-submit</span><br><span class="line">  position: absolute</span><br><span class="line">  top: <span class="number">50%</span></span><br><span class="line">  right: <span class="number">10px</span></span><br><span class="line">  margin-top: -<span class="number">7px</span></span><br><span class="line">  font: <span class="number">13px</span> font-icon</span><br><span class="line">  border: none</span><br><span class="line">  background: none</span><br><span class="line">  color: <span class="number">#bbb</span></span><br><span class="line">  cursor: pointer</span><br><span class="line">  &amp;:hover, &amp;:focus</span><br><span class="line">    color: <span class="number">#777</span></span><br></pre></td></tr></table></figure>

<p>after changes-1</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#sub-nav</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#search-form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed; // Fixes it <span class="selector-tag">to</span> the viewport, not affecting layout</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">200px</span>; // Initially off-screen</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease-out, opacity <span class="number">0.2s</span> ease-out;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.on</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">200px</span>); // Slide into view when activated</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123; // Adjust for mobile screens</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transform</span>: none; // Keep it fixed in place for small screens</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; // Keep it visible and responsive</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-form</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-form-input</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#312602</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">13px</span> sans-serif;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search-form-submit</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>); // Center vertically within <span class="selector-tag">input</span></span><br><span class="line">  <span class="attribute">font</span>: <span class="number">13px</span> sans-serif;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#bbb</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  </span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span>, &amp;<span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="If-changes-leads-to-broken-portraite-view-for-mobile-devices"><a href="#If-changes-leads-to-broken-portraite-view-for-mobile-devices" class="headerlink" title="If changes leads to broken portraite view for mobile devices ."></a>If changes leads to broken portraite view for mobile devices .</h2><p>Input form for the search overlap the menu button.</p>
<p>Changes-3<br>Before editing <code>\themes\landscape\source\css\style.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mobile-nav-on</span></span><br><span class="line">  <span class="attribute">overflow</span>: hidden</span><br></pre></td></tr></table></figure>

<p>Before editing <code>\themes\landscape\source\css\_partial\header.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#search-form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed; // Fixes it <span class="selector-tag">to</span> the viewport, not affecting layout</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">210px</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">200px</span>; // Initially off-screen</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease-out, opacity <span class="number">0.2s</span> ease-out;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.on</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">200px</span>); // Slide into view when activated</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123; // Adjust for mobile screens</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70vw</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transform</span>: none; // Keep it fixed in place for small screens</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; // Keep it visible and responsive</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>After editing <code>\themes\landscape\source\css\style.styl</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mobile-nav-on</span> <span class="selector-id">#search-form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>; // Hide the search <span class="selector-tag">form</span> when the mobile <span class="selector-tag">nav</span> is open</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">200px</span>); // Keep it off-screen</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.2s</span> ease-out, transform <span class="number">0.2s</span> ease-out; // Smooth <span class="attribute">transition</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>After editing &#96;&#96;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#search-form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed; // Fixes it <span class="selector-tag">to</span> the viewport, not affecting layout</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">210px</span>; // Set the vertical <span class="attribute">position</span> <span class="selector-tag">from</span> the <span class="attribute">top</span></span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">200px</span>; // Initially off-screen</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>; // <span class="attribute">Width</span> for desktop view</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>; // Fixed <span class="attribute">height</span></span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>; // Hidden by default</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease-out, opacity <span class="number">0.2s</span> ease-out;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.on</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; // Fully visible when active</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">200px</span>); // Slide into view when activated</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123; // General mobile styles</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70vw</span>; // Adjust <span class="attribute">width</span> for mobile view</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>; // Align <span class="selector-tag">to</span> the <span class="attribute">right</span> of the viewport</span><br><span class="line">    <span class="attribute">transform</span>: none; // Keep it fixed in place for small screens</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>; // Keep it visible and responsive</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">orientation</span>: landscape) <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123; // Styles for landscape mode on mobile</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">210vw</span>; // Adjust <span class="attribute">width</span> for landscape orientation</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">180px</span>; // Adjust <span class="attribute">top</span> <span class="attribute">position</span> for landscape view</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">50%</span>; // Start off-screen <span class="selector-tag">to</span> the <span class="attribute">left</span> by half the viewport <span class="attribute">width</span></span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.2s</span> ease-out, opacity <span class="number">0.2s</span> ease-out; // Ensure smooth <span class="attribute">transition</span></span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-class">.on</span> &#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">50%</span>); // Slide into view <span class="selector-tag">from</span> <span class="attribute">left</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Adding-footnotes"><a href="#Adding-footnotes" class="headerlink" title="Adding footnotes"></a>Adding footnotes</h2><p>Use hexo-reference Plugin for Enhanced Linking<br>Install hexo-reference: This plugin improves link handling within Markdown files, including footnotes and internal references.</p>
<p>Run this command to install it:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-reference --save</span><br></pre></td></tr></table></figure>

<p>Update <code>_config.yml</code>: Configure hexo-reference in your Hexo <code>_config.yml</code> file to enable the plugin.</p>
<p>Add this to your <code>_config.yml</code> file:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-reference</span></span><br></pre></td></tr></table></figure>
<p>Use Links in Markdown: Now, you can use standard anchor links or footnotes, and hexo-reference will convert them to work correctly on the site. Update your Markdown file like this:</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="strong">**Favorite list**</span></span><br><span class="line"></span><br><span class="line">[<span class="string">Takedown</span>](<span class="link">#Favorite-items</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">## Favorite items</span></span><br></pre></td></tr></table></figure>

<p>Generate and Deploy: After setting up, rebuild and deploy your project:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<p>or </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean; hexo generate; hexo serve</span><br></pre></td></tr></table></figure>

<h3 id="Show-some-number-of-tags-in-the-‘Tag’-section"><a href="#Show-some-number-of-tags-in-the-‘Tag’-section" class="headerlink" title="Show some number of tags in the ‘Tag’ section."></a>Show some number of tags in the ‘Tag’ section.</h3><p>Before changes of content of <code>themes\landscape\layout\_widget\tag.ejs</code> file was</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;% if (site<span class="selector-class">.tags</span><span class="selector-class">.length</span>)&#123; %&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">h3</span> class=&quot;widget-title&quot;&gt;&lt;%= __(&#x27;tags&#x27;) %&gt;&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;widget&quot;&gt;</span><br><span class="line">      &lt;%- list_tags(&#123;show_count: theme.show_count&#125;) %&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>and<br><img src="/hexo-blog/images/hexo.io_changes_editing_tag_section_on_ui__before_changes.png" alt="hexo.editing tag section on UI before changes"></p>
<p>after changes of content of <code>themes\landscape\layout\_widget\tag.ejs</code> file ‘Tags’ section shows 10 tags only</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;% if (site<span class="selector-class">.tags</span><span class="selector-class">.length</span>)&#123; %&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">h3</span> class=&quot;widget-title&quot;&gt;&lt;%= __(&#x27;tags&#x27;) %&gt;&lt;/<span class="selector-tag">h3</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;widget&quot;&gt;</span><br><span class="line">        &lt;% site<span class="selector-class">.tags</span><span class="selector-class">.sort</span>(&#x27;name&#x27;)<span class="selector-class">.limit</span>(<span class="number">10</span>)<span class="selector-class">.each</span>(function(tag) &#123; %&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">      &lt;<span class="selector-tag">a</span> href=&quot;&lt;%= url_for(tag<span class="selector-class">.path</span>) %&gt;&quot;&gt;&lt;%= tag<span class="selector-class">.name</span> %&gt; (&lt;%= tag<span class="selector-class">.length</span> %&gt;)&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">  &lt;% &#125;); %&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>and </p>
<img src="/hexo-blog/images/hexo.io_changes_editing_tag_section_on_ui__after_changes.png" alt="hexo.editing tag section on UI after changes">

<p>Turn on&#x2F;off <code>Tags</code> is possible in <code>_config.yml</code>, </p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">widgets:</span><br><span class="line">  - tag</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>blog</tag>
        <tag>hexo_io</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDowm tutorial-2</title>
    <url>/hexo-blog/2024/10/21/tutorials/markdown_tutorial_2/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>This post is originated from <a href="https://gist.github.com/apackeer/4159268">here</a> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p>
<p>This is intended as a quick reference and showcase. For more complete info, see <a href="http://daringfireball.net/projects/markdown/">John Gruber’s original spec</a> and the <a href="http://github.github.com/github-flavored-markdown/">Github-flavored Markdown info page</a>.</p>
<p>This cheatsheet is specifically <em>Markdown Here’s</em> version of Github-flavored Markdown. This differs slightly in styling and syntax from what Github uses, so what you see below might vary a little from what you get in a <em>Markdown Here</em> email, but it should be pretty close.</p>
<h5 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h5><p><a href="#headers">Headers</a><br><a href="#emphasis">Emphasis</a><br><a href="#lists">Lists</a><br><a href="#links">Links</a><br><a href="#images">Images</a><br><a href="#code">Code and Syntax Highlighting</a><br><a href="#blockquotes">Blockquotes</a><br><a href="#html">Inline HTML</a><br><a href="#hr">Horizontal Rule</a><br><a href="#lines">Line Breaks</a>  </p>
<a name="headers"/>
## Headers

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># H1</span><br><span class="line">## H2</span><br><span class="line">### H3</span><br><span class="line">#### H4</span><br><span class="line">##### H5</span><br><span class="line">###### H6</span><br><span class="line"></span><br><span class="line">Alternatively, for H1 and H2, an underline-ish style:</span><br><span class="line"></span><br><span class="line">Alt-H1</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">Alt-H2</span><br><span class="line">------</span><br></pre></td></tr></table></figure>

<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><p>Alternatively, for H1 and H2, an underline-ish style:</p>
<h1 id="Alt-H1"><a href="#Alt-H1" class="headerlink" title="Alt-H1"></a>Alt-H1</h1><h2 id="Alt-H2"><a href="#Alt-H2" class="headerlink" title="Alt-H2"></a>Alt-H2</h2><a name="emphasis"/>
## Emphasis

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Emphasis, aka italics, with *asterisks* or _underscores_.</span><br><span class="line"></span><br><span class="line">Strong emphasis, aka bold, with **asterisks** or __underscores__.</span><br><span class="line"></span><br><span class="line">Combined emphasis with **asterisks and _underscores_**.</span><br></pre></td></tr></table></figure>

<p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p>
<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>
<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>
<a name="lists"/>
## Lists

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. First ordered list item</span><br><span class="line">2. Another item</span><br><span class="line">  * Unordered sub-list. </span><br><span class="line">1. Actual numbers don&#x27;t matter, just that it&#x27;s a number</span><br><span class="line">  1. Ordered sub-list</span><br><span class="line">4. And another item.  </span><br><span class="line">   </span><br><span class="line">   Some text that should be aligned with the above item.</span><br><span class="line"></span><br><span class="line">* Unordered list can use asterisks</span><br><span class="line">- Or minuses</span><br><span class="line">+ Or pluses</span><br></pre></td></tr></table></figure>

<ol>
<li>First ordered list item</li>
<li>Another item</li>
</ol>
<ul>
<li>Unordered sub-list.</li>
</ul>
<ol>
<li><p>Actual numbers don’t matter, just that it’s a number</p>
</li>
<li><p>Ordered sub-list</p>
</li>
<li><p>And another item.  </p>
<p>Some text that should be aligned with the above item.</p>
</li>
</ol>
<ul>
<li>Unordered list can use asterisks</li>
</ul>
<ul>
<li>Or minuses</li>
</ul>
<ul>
<li>Or pluses</li>
</ul>
<a name="links"/>
## Links

<p>There are two ways to create links.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[I&#x27;m an inline-style link](https://www.google.com)</span><br><span class="line"></span><br><span class="line">[I&#x27;m a reference-style link][Arbitrary case-insensitive reference text]</span><br><span class="line"></span><br><span class="line">[You can use numbers for reference-style link definitions][1]</span><br><span class="line"></span><br><span class="line">Or leave it empty and use the [link text itself][]</span><br><span class="line"></span><br><span class="line">Some text to show that the reference links can follow later.</span><br><span class="line"></span><br><span class="line">[arbitrary case-insensitive reference text]: https://www.mozilla.org</span><br><span class="line">[1]: http://slashdot.org</span><br><span class="line">[link text itself]: http://www.reddit.com</span><br></pre></td></tr></table></figure>

<p><a href="https://www.google.com/">I’m an inline-style link</a></p>
<p><a href="https://www.mozilla.org/">I’m a reference-style link</a></p>
<p><a href="http://slashdot.org/">You can use numbers for reference-style link definitions</a></p>
<p>Or leave it empty and use the <a href="http://www.reddit.com/">link text itself</a></p>
<p>Some text to show that the reference links can follow later.</p>
<a name="images"/>

<h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Here&#x27;s our logo (hover to see the title text):</span><br></pre></td></tr></table></figure>

<p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"></p>
<p><img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"></p>
<p>Reference-style:<br><img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Here&#x27;s our logo (hover to see the title text):</span><br><span class="line"></span><br><span class="line">Inline-style: </span><br><span class="line">![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 1&quot;)</span><br><span class="line"></span><br><span class="line">Reference-style: </span><br><span class="line">![alt text][logo]</span><br><span class="line"></span><br><span class="line">[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 2&quot;</span><br><span class="line"></span><br><span class="line">&lt;a name=&quot;code&quot;/&gt;</span><br><span class="line"></span><br><span class="line">## Code and Syntax Highlighting</span><br><span class="line"></span><br><span class="line">Code blocks are part of the Markdown spec, but syntax highlighting isn&#x27;t. However, many renderers -- like Github&#x27;s and *Markdown Here* -- support syntax highlighting. *Markdown Here* supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the [highlight.js demo page](http://softwaremaniacs.org/media/soft/highlight/test.html).</span><br><span class="line"></span><br><span class="line">```no-highlight</span><br><span class="line">Inline `code` has `back-ticks around` it.</span><br></pre></td></tr></table></figure>

<p>Inline <code>code</code> has <code>back-ticks around</code> it.</p>
<p>Blocks of code are either fenced by lines with three back-ticks <code>```</code>, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```javascript</span><br><span class="line">var s = &quot;JavaScript syntax highlighting&quot;;</span><br><span class="line">alert(s);</span><br></pre></td></tr></table></figure>
 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;Python syntax highlighting&quot;</span></span><br><span class="line"><span class="built_in">print</span> s</span><br></pre></td></tr></table></figure>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No language indicated, so no syntax highlighting. </span><br><span class="line">But let&#x27;s throw in a &lt;b&gt;tag&lt;/b&gt;.</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">var s = &quot;JavaScript syntax highlighting&quot;;</span><br><span class="line">alert(s);</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;Python syntax highlighting&quot;</span></span><br><span class="line"><span class="built_in">print</span> s</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">No language indicated, so no syntax highlighting in Markdown Here (varies on Github). </span><br><span class="line">But let&#x27;s throw in a &lt;b&gt;tag&lt;/b&gt;.</span><br></pre></td></tr></table></figure>

<p>(Github Wiki pages don’t seem to support syntax highlighting, so the above won’t be colourful (the strings are not red, for example). Try it out in a <em>Markdown Here</em> email or a Github Markdown README or Github Issue – you can preview a new Issue without submitting it.)</p>
<p>Again, to see what languages are available for highlighting, and how to write those language names, see the <a href="http://softwaremaniacs.org/media/soft/highlight/test.html">highlight.js demo page</a>.</p>
<a name="blockquotes"/>
## Blockquotes

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; Blockquotes are very handy in email to emulate reply text.</span><br><span class="line">&gt; This line is part of the same quote.</span><br><span class="line"></span><br><span class="line">Quote break.</span><br><span class="line"></span><br><span class="line">&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let&#x27;s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. </span><br></pre></td></tr></table></figure>

<blockquote>
<p>Blockquotes are very handy in email to emulate reply text.<br>This line is part of the same quote.</p>
</blockquote>
<p>Quote break.</p>
<blockquote>
<p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote. </p>
</blockquote>
<a name="html"/>
## Inline HTML

<p>You can also use raw HTML in your Markdown, and it’ll mostly work pretty well. Here are a couple of common examples:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">  &lt;dt&gt;Definition list&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;</span><br><span class="line"></span><br><span class="line">  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;</span><br><span class="line">  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;th&gt;&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;Tables&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;Are&lt;/th&gt;</span><br><span class="line">    &lt;th&gt;Cool&lt;/th&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;th&gt;Zebra&lt;/th&gt;</span><br><span class="line">    &lt;td&gt;Stripes&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;Are&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;Pretty&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;th&gt;Here&lt;/th&gt;</span><br><span class="line">    &lt;td&gt;Is&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;Another&lt;/td&gt;</span><br><span class="line">    &lt;td&gt;Row&lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<dl>
  <dt>Definition list</dt>
  <dd>Is something people use sometimes.</dd>

  <dt>Markdown in HTML</dt>
  <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>
</dl>

<table>
  <tr>
    <th></th>
    <th>Tables</th>
    <th>Are</th>
    <th>Cool</th>
  </tr>
  <tr>
    <th>Zebra</th>
    <td>Stripes</td>
    <td>Are</td>
    <td>Pretty</td>
  </tr>
  <tr>
    <th>Here</th>
    <td>Is</td>
    <td>Another</td>
    <td>Row</td>
  </tr>
</table>

<p>Github-flavored Markdown supports a special table syntax, but <em>Markdown Here</em> does not support it yet. <a href="https://github.com/adam-p/markdown-here/issues/13">There’s an issue for it.</a></p>
<a name="hr"/>
## Horizontal Rule

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Three or more...</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Hyphens</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Asterisks</span><br><span class="line"></span><br><span class="line">___</span><br><span class="line"></span><br><span class="line">Underscores</span><br></pre></td></tr></table></figure>

<p>Three or more…</p>
<hr>
<p>Hyphens</p>
<hr>
<p>Asterisks</p>
<hr>
<p>Underscores</p>
<a name="lines"/>
## Line Breaks

<p>My basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once, then hit it twice, see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend. </p>
<p>Here are some things to try out:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">With only a single newline, this line and</span><br><span class="line">this line will be a *single line*.</span><br><span class="line"></span><br><span class="line">But this one is separated by two newlines and so will be a *separate paragraph*.</span><br><span class="line"></span><br><span class="line">This line has two spaces at the end (hard for you to see, but trust me!).  </span><br><span class="line">So this is a separate line in the *same paragraph*.</span><br></pre></td></tr></table></figure>

<p>With only a single newline, this line and<br>this line will be a <em>single line</em>.</p>
<p>But this one is separated by two newlines and so will be a <em>separate paragraph</em>.</p>
<p>This line has two spaces at the end (hard for you to see, but trust me!).<br>So this is a separate line in the <em>same paragraph</em>.</p>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO.IO blog examples</title>
    <url>/hexo-blog/2024/10/21/tutorials/hexo.io_tutorial_list/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><ol>
<li>Setup my blog using Hexo: <a href="https://chuanjin.me/2015/01/17/Setup-my-blog-using-Hexo/">https://chuanjin.me/2015/01/17/Setup-my-blog-using-Hexo/</a> </li>
<li>using and optimizing the hexo-tag-cloud tag cloud: <a href="https://tiven.cn/p/8dbf2af/">https://tiven.cn/p/8dbf2af/</a></li>
<li>hexo-daily-news: <a href="https://github.com/Shiguang-coding/hexo-daily-news">https://github.com/Shiguang-coding/hexo-daily-news</a></li>
</ol>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>hexo_io</tag>
        <tag>examples</tag>
      </tags>
  </entry>
  <entry>
    <title>UX UI tools</title>
    <url>/hexo-blog/2024/09/28/tutorials/ux_ui_tools/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><!-- Main Title and Introduction -->
<h2 style="margin-bottom: 15px; font-weight: italic; background-color: #f4f4f4; padding: 10px; border-radius: 5px; color: #2C3E50;">
  This post contains a list of discovered UX/UI web tools and additional information to help understand their features.
</h2>

<hr>
<p><strong>List of tools</strong></p>
<ol>
<li><a href="#cssgradient_io">cssgradient.io</a></li>
</ol>
<hr>
<!-- Header 2 Section with Tool Name -->
<h2 style="margin-top: 25px;  color: #b03a2e;" id = cssgradient_io>cssgradient.io</h2>

<!-- Tool Home Page Link and Preview Image -->
<h3 style="margin: 15px 0;">Home Page</h3>
<a href="https://cssgradient.io/" target="_blank" style="text-decoration: none; color: #3498db;">https://cssgradient.io/</a>
<div style="margin-top: 10px;">
    <img src="/hexo-blog/images/cssgradient_site_preview.png" alt="CSS Gradient Home Page" title="CSS Gradient Home Page" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />
</div>

<!-- Header 4 Section with Additional Resources -->
<h4 style="margin-top: 25px;">See Also:</h4>
<ol>
    <li>
        <a href="https://cssgradient.io/color-shades/" target="_blank" style="text-decoration: none; color: #3498db;">Color Shades</a>
        <div style="margin-top: 8px;">
            <img src="/hexo-blog/images/cssgradient.io-color-shades.png" alt="CSS Gradient Color Shades" title="CSS Gradient Color Shades" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />
        </div>
    </li>
    <li style="margin-top: 15px;">
        <a href="https://cssgradient.io/gradient-backgrounds/" target="_blank" style="text-decoration: none; color: #3498db;">Gradient Backgrounds</a>
        <div style="margin-top: 8px;">
            <img src="/hexo-blog/images/cssgradient.io-gradient-backgrounds.png" alt="CSS Gradient Backgrounds" title="CSS Gradient Backgrounds" style="width: 80%; max-width: 600px; border: 1px solid #ccc; padding: 5px; border-radius: 8px;" />
        </div>
    </li>
</ol>
]]></content>
      <categories>
        <category>Tutorials</category>
      </categories>
      <tags>
        <tag>tutorial</tag>
        <tag>ux_ui</tag>
      </tags>
  </entry>
</search>
